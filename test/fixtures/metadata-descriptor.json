{
  "name": "metadata",
  "urn": "urn:piksel:service:metadata",
  "title": "Metadata Service",
  "description": "Stores content metadata resources",
  "resourcefuls": {
    "assets": {
      "path": "/data",
      "consistency": "eventual",
      "stability": "stable",
      "displayPriority": 3,
      "operations": {
        "browse": {
          "description": "Fetches a list of assets that may be filtered",
          "actions": [
            "metadata:assets:read",
            "metadata:assets:read:browse"
          ]
        },
        "get": {
          "description": "Fetches one or more assets using the supplied id(s)",
          "actions": [
            "metadata:assets:read",
            "metadata:assets:read:get"
          ]
        },
        "storeBatch": {
          "description": "Stores one or more assets, either creating or wholly replacing",
          "actions": [
            "metadata:assets:write",
            "metadata:assets:write:store",
            "metadata:assets:write:store:batch"
          ],
          "limit": 100
        },
        "storeOne": {
          "description": "Stores the supplied asset with the supplied id, either creating or wholly replacing",
          "actions": [
            "metadata:assets:write",
            "metadata:assets:write:store",
            "metadata:assets:write:store:one"
          ]
        },
        "patch": {
          "enabled": false,
          "description": "Partially updates the existing stored asset with the supplied id",
          "actions": [
            "metadata:assets:write",
            "metadata:assets:write:store",
            "metadata:assets:write:store:patch"
          ]
        },
        "delete": {
          "description": "Delete one or more assets using the supplied id(s)",
          "actions": [
            "metadata:assets:write",
            "metadata:assets:write:delete"
          ]
        }
      },
      "pagination": {
        "pageSize": {
          "min": 1,
          "max": 100,
          "default": 100
        },
        "pages": {
          "max": 1000
        }
      },
      "display": {
        "priority": 3,
        "overview": {
          "label": "title",
          "graphical": "url",
          "quickInfo": [
            "type",
            "fileFormat"
          ],
          "other": [
            "url",
            "fileSize",
            "checksum"
          ]
        },
        "info": {
          "primary": [
            "ref",
            "owner",
            "name"
          ],
          "secondary": [
            "alternativeIdentifiers",
            "tags",
            "custom"
          ],
          "history": [
            "createdAt",
            "createdBy",
            "updatedAt",
            "updatedBy",
            "deletedAt",
            "deletedBy",
            "reapAt",
            "version"
          ]
        },
        "singularName": "asset",
        "pluralName": "assets",
        "grouping": "type"
      },
      "fields": {
        "ref": {
          "description": "The derived owner:name reference",
          "type": "ref",
          "readOnly": true,
          "example": "test:resource-name",
          "fieldName": "ref",
          "fieldNamePath": "ref",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withRef"
          ],
          "filters": [
            {
              "type": "with",
              "label": "ref",
              "fieldNamePath": "ref",
              "description": "filter by the supplied ref",
              "name": "withRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "alternativeIdentifiers": {
          "type": "stringMap",
          "description": "A map of alternative identifiers for this resource",
          "example": {
            "tel": "0800100100",
            "said": "something"
          },
          "fieldName": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "desc": "key-value pairs",
            "name": "stringMap"
          },
          "filteredBy": [
            "withAlternativeIdentifiers"
          ],
          "filters": [
            {
              "type": "with",
              "label": "alternativeIdentifiers",
              "fieldNamePath": "alternativeIdentifiers",
              "description": "filter by the supplied alternative identifiers",
              "prefix": true,
              "name": "withAlternativeIdentifiers",
              "and": true,
              "or": true,
              "valueType": "stringMap"
            }
          ]
        },
        "owner": {
          "description": "The tenant owner name",
          "type": "name",
          "required": true,
          "sort": true,
          "example": "test",
          "fieldName": "owner",
          "fieldNamePath": "owner",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          }
        },
        "name": {
          "description": "The tenant specific unique name",
          "type": "name",
          "sort": true,
          "example": "resource-name",
          "fieldName": "name",
          "fieldNamePath": "name",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          },
          "filteredBy": [
            "withName"
          ],
          "filters": [
            {
              "type": "with",
              "label": "name",
              "fieldNamePath": "name",
              "description": "filter by the supplied name",
              "name": "withName",
              "and": true,
              "or": true,
              "valueType": "name"
            }
          ]
        },
        "tags": {
          "description": "tags for the resource",
          "type": "string",
          "array": true,
          "example": [
            "todo",
            "usage:boxart"
          ],
          "fieldName": "tags",
          "fieldNamePath": "tags",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withTags"
          ],
          "filters": [
            {
              "type": "with",
              "label": "tags",
              "fieldNamePath": "tags",
              "description": "filter by the supplied tags",
              "name": "withTags",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "scores": {
          "description": "scores for the resource",
          "type": "scores",
          "example": {
            "imdb.a3431": 0.9,
            "fuse": 2
          },
          "fieldName": "scores",
          "fieldNamePath": "scores",
          "typeInfo": {
            "keys": {
              "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
            },
            "values": {},
            "desc": "Map of FieldNamePath:Number pairs",
            "name": "scores"
          },
          "filteredBy": [
            "withScore"
          ],
          "filters": [
            {
              "type": "with",
              "label": "scores",
              "fieldNamePath": "scores",
              "description": "filter by the supplied score",
              "range": true,
              "name": "withScore",
              "and": true,
              "or": true,
              "valueType": "scores"
            }
          ]
        },
        "custom": {
          "description": "The tenant specific custom fields.  This may be used to hold tenant specific data alongside the document, but it should not be used as a substitute for normal fields.",
          "type": "map",
          "max": 100,
          "fieldName": "custom",
          "fieldNamePath": "custom",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "values": {},
            "desc": "key-value pairs"
          }
        },
        "createdAt": {
          "description": "The timestamp when created",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "createdAt",
          "fieldNamePath": "createdAt",
          "filteredBy": [
            "withCreatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdAt",
              "fieldNamePath": "createdAt",
              "description": "filter by the supplied createdAt",
              "range": true,
              "name": "withCreatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "createdBy": {
          "description": "The user that created",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "createdBy",
          "fieldNamePath": "createdBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withCreatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdBy",
              "fieldNamePath": "createdBy",
              "description": "filter by the supplied createdBy",
              "name": "withCreatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "updatedAt": {
          "description": "The timestamp when last updated",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "updatedAt",
          "fieldNamePath": "updatedAt",
          "filteredBy": [
            "withUpdatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedAt",
              "fieldNamePath": "updatedAt",
              "description": "filter by the supplied updatedAt",
              "range": true,
              "name": "withUpdatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "updatedBy": {
          "description": "The user that last updated",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "updatedBy",
          "fieldNamePath": "updatedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withUpdatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedBy",
              "fieldNamePath": "updatedBy",
              "description": "filter by the supplied updatedBy",
              "name": "withUpdatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "deletedAt": {
          "description": "The timestamp when deleted (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedAt",
          "fieldNamePath": "deletedAt",
          "filteredBy": [
            "withDeletedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedAt",
              "fieldNamePath": "deletedAt",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedAt",
              "range": true,
              "name": "withDeletedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "deletedBy": {
          "description": "The user that deleted (only applicable to deleted  resources)",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedBy",
          "fieldNamePath": "deletedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withDeletedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedBy",
              "fieldNamePath": "deletedBy",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedBy",
              "name": "withDeletedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "reapAt": {
          "description": "The timestamp for reaping (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "reapAt",
          "fieldNamePath": "reapAt",
          "filteredBy": [
            "withReapAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "reapAt",
              "fieldNamePath": "reapAt",
              "prohibited": [
                "enduser",
                "service",
                "admin"
              ],
              "description": "filter by the supplied reapAt",
              "range": true,
              "name": "withReapAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "version": {
          "description": "The version hash (computed)",
          "type": "version",
          "readOnly": true,
          "example": "356b54eb90cd04566159dfb9c95a0426998a2f7b",
          "excludeFromVersion": true,
          "fieldName": "version",
          "fieldNamePath": "version",
          "typeInfo": {
            "desc": "sha1 hex encoded hash",
            "pattern": "[a-f0-9]{40}",
            "name": "version"
          },
          "filteredBy": [
            "withVersion"
          ],
          "filters": [
            {
              "type": "with",
              "label": "version",
              "fieldNamePath": "version",
              "description": "filter by the supplied version",
              "name": "withVersion",
              "and": true,
              "or": true,
              "valueType": "version"
            }
          ]
        },
        "type": {
          "description": "Asset media type",
          "type": "string",
          "primary": true,
          "required": true,
          "countable": true,
          "allowedValues": [
            {
              "value": "application",
              "alternatives": [],
              "label": "application",
              "description": "application"
            },
            {
              "value": "audio",
              "alternatives": [],
              "label": "audio",
              "description": "audio"
            },
            {
              "value": "image",
              "alternatives": [],
              "label": "image",
              "description": "image"
            },
            {
              "value": "text",
              "alternatives": [],
              "label": "text",
              "description": "text"
            },
            {
              "value": "video",
              "alternatives": [],
              "label": "video",
              "description": "video"
            },
            {
              "value": "other",
              "alternatives": [],
              "label": "other",
              "description": "other"
            }
          ],
          "example": "video",
          "fieldName": "type",
          "fieldNamePath": "type",
          "allowedValueMappings": {
            "application": "application",
            "audio": "audio",
            "image": "image",
            "text": "text",
            "video": "video",
            "other": "other"
          },
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withtype"
          ],
          "filters": [
            {
              "type": "with",
              "label": "type",
              "description": "filter for type",
              "fieldNamePath": "type",
              "name": "withtype",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "fullMediaType": {
          "description": "The full media type for the asset. The value is determined dynamically based on type and fileFormat",
          "type": "string",
          "sort": true,
          "primary": true,
          "example": "video/mp4",
          "fieldName": "fullMediaType",
          "fieldNamePath": "fullMediaType",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "readOnly": true
        },
        "url": {
          "description": "The url of the asset",
          "type": "string",
          "primary": true,
          "fieldName": "url",
          "fieldNamePath": "url",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          }
        },
        "fileFormat": {
          "description": "Asset file format",
          "type": "string",
          "primary": true,
          "allowedValues": [
            {
              "value": "7z",
              "description": "Format implemented by 7-Zip archiver",
              "alternatives": [],
              "label": "7z"
            },
            {
              "value": "aac",
              "description": "Advanced Audio Coding",
              "alternatives": [],
              "label": "aac"
            },
            {
              "value": "avi",
              "description": "Audio Video Interleaved",
              "alternatives": [],
              "label": "avi"
            },
            {
              "value": "bmp",
              "description": "Bitmap image file",
              "alternatives": [
                "bmpf",
                "bmpp",
                "dib"
              ],
              "label": "bmp"
            },
            {
              "value": "flv",
              "description": "Flash Video",
              "alternatives": [
                "f4v",
                "f4p",
                "f4a",
                "f4b"
              ],
              "label": "flv"
            },
            {
              "value": "gif",
              "description": "Graphics Interchange Format",
              "alternatives": [],
              "label": "gif"
            },
            {
              "value": "ism",
              "description": "IIS Smooth Streaming Manifest",
              "alternatives": [],
              "label": "ism"
            },
            {
              "value": "isma",
              "description": "IIS Smooth Streaming Audio",
              "alternatives": [],
              "label": "isma"
            },
            {
              "value": "ismv",
              "description": "IIS Smooth Streaming Video",
              "alternatives": [],
              "label": "ismv"
            },
            {
              "value": "jpg",
              "description": "Joint Photographic Experts Group",
              "alternatives": [
                "jpeg"
              ],
              "label": "jpg"
            },
            {
              "value": "json",
              "description": "JavaScript Object Notation",
              "alternatives": [],
              "label": "json"
            },
            {
              "value": "m3u8",
              "description": "Moving Picture Experts Group Audio Layer 3 URL",
              "alternatives": [
                "m3u"
              ],
              "label": "m3u8"
            },
            {
              "value": "mkv",
              "description": "Matroska Multimedia Container",
              "alternatives": [
                "mk3d",
                "mka",
                "mks"
              ],
              "label": "mkv"
            },
            {
              "value": "mp3",
              "description": "MPEG-2 Audio Layer 3",
              "alternatives": [],
              "label": "mp3"
            },
            {
              "value": "mp4",
              "description": "MPEG-4",
              "alternatives": [
                "mpeg-4",
                "m4a",
                "m4p"
              ],
              "label": "mp4"
            },
            {
              "value": "mpd",
              "description": "MPEG-DASH Media Presentation Description",
              "alternatives": [],
              "label": "mpd"
            },
            {
              "value": "mpeg-ps",
              "description": "MPEG Program Stream",
              "alternatives": [],
              "label": "mpeg-ps"
            },
            {
              "value": "mpeg-ts",
              "description": "MPEG transportOld Stream",
              "alternatives": [],
              "label": "mpeg-ts"
            },
            {
              "value": "pdf",
              "description": "Portable Document Format",
              "alternatives": [],
              "label": "pdf"
            },
            {
              "value": "png",
              "description": "Portable Network Graphics",
              "alternatives": [],
              "label": "png"
            },
            {
              "value": "sami",
              "description": "Synchronized Accessible Media Interchange",
              "alternatives": [
                "smi"
              ],
              "label": "sami"
            },
            {
              "value": "tar",
              "description": "Tar archive file",
              "alternatives": [],
              "label": "tar"
            },
            {
              "value": "tgz",
              "description": "Tar archive file - gzipped",
              "alternatives": [],
              "label": "tgz"
            },
            {
              "value": "ttml",
              "description": "Timed Text Markup Language",
              "alternatives": [
                "dfxp"
              ],
              "label": "ttml"
            },
            {
              "value": "txt",
              "description": "Text File",
              "alternatives": [
                "text"
              ],
              "label": "txt"
            },
            {
              "value": "webvtt",
              "description": "The Web Video Text Tracks Format",
              "alternatives": [
                "webtt"
              ],
              "label": "webvtt"
            },
            {
              "value": "wmv",
              "description": "Windows Media Video",
              "alternatives": [],
              "label": "wmv"
            },
            {
              "value": "xml",
              "description": "Extensible Markup Language",
              "alternatives": [],
              "label": "xml"
            },
            {
              "value": "zip",
              "description": "Zip archive file format",
              "alternatives": [],
              "label": "zip"
            },
            {
              "value": "other",
              "alternatives": [],
              "label": "other",
              "description": "other"
            }
          ],
          "example": "mp4",
          "fieldName": "fileFormat",
          "fieldNamePath": "fileFormat",
          "allowedValueMappings": {
            "7z": "7z",
            "aac": "aac",
            "avi": "avi",
            "bmp": "bmp",
            "bmpf": "bmp",
            "bmpp": "bmp",
            "dib": "bmp",
            "flv": "flv",
            "f4v": "flv",
            "f4p": "flv",
            "f4a": "flv",
            "f4b": "flv",
            "gif": "gif",
            "ism": "ism",
            "isma": "isma",
            "ismv": "ismv",
            "jpg": "jpg",
            "jpeg": "jpg",
            "json": "json",
            "m3u8": "m3u8",
            "m3u": "m3u8",
            "mkv": "mkv",
            "mk3d": "mkv",
            "mka": "mkv",
            "mks": "mkv",
            "mp3": "mp3",
            "mp4": "mp4",
            "mpeg-4": "mp4",
            "m4a": "mp4",
            "m4p": "mp4",
            "mpd": "mpd",
            "mpeg-ps": "mpeg-ps",
            "mpeg-ts": "mpeg-ts",
            "pdf": "pdf",
            "png": "png",
            "sami": "sami",
            "smi": "sami",
            "tar": "tar",
            "tgz": "tgz",
            "ttml": "ttml",
            "dfxp": "ttml",
            "txt": "txt",
            "text": "txt",
            "webvtt": "webvtt",
            "webtt": "webvtt",
            "wmv": "wmv",
            "xml": "xml",
            "zip": "zip",
            "other": "other"
          },
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          }
        },
        "fileSize": {
          "description": "Asset file size in bytes",
          "type": "nonNegativeInteger",
          "primary": true,
          "example": 1024,
          "fieldName": "fileSize",
          "fieldNamePath": "fileSize",
          "typeInfo": {
            "desc": "non-negative integer",
            "pattern": "\\d+",
            "name": "nonNegativeInteger"
          }
        },
        "checksum": {
          "description": "Checksum for asset (32 character hex string)",
          "type": "hex",
          "example": "12558d3269d25852bd26548dc2654ca2",
          "fieldName": "checksum",
          "fieldNamePath": "checksum",
          "typeInfo": {
            "desc": "hexadecimal string",
            "pattern": "[a-f0-9]+"
          }
        },
        "title": {
          "description": "The title of the asset",
          "type": "string",
          "sort": true,
          "primary": true,
          "example": "A picture of the moon",
          "fieldName": "title",
          "fieldNamePath": "title",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          }
        },
        "contentRef": {
          "description": "Reference to the content that this asset belong to",
          "type": "ref",
          "primary": true,
          "example": "test:content-1",
          "fieldName": "contentRef",
          "fieldNamePath": "contentRef",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "relatedBy": [
            "content"
          ],
          "relationships": [
            {
              "type": "direct",
              "description": "The associated content",
              "resourceType": "contents",
              "fieldNamePath": "contentRef",
              "fields": [
                "ref",
                "title",
                "parentRef",
                "memberRefs",
                "type"
              ],
              "batchSize": 10,
              "name": "content"
            }
          ],
          "filteredBy": [
            "withContentRef"
          ],
          "filters": [
            {
              "type": "with",
              "label": "contentRef",
              "description": "filter for contentRef",
              "fieldNamePath": "contentRef",
              "name": "withContentRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "availabilityStartAt": {
          "description": "The availability start date of the asset, or if not present available from the start of time",
          "type": "timestamp",
          "nonexistent": "low",
          "sort": true,
          "example": "2016-01-01T12:00:00.000Z",
          "fieldName": "availabilityStartAt",
          "fieldNamePath": "availabilityStartAt"
        },
        "availabilityEndAt": {
          "description": "The availability end date of the asset, or if not present available till the end of time",
          "type": "timestamp",
          "nonexistent": "high",
          "sort": true,
          "example": "2016-04-01T12:00:00.000Z",
          "fieldName": "availabilityEndAt",
          "fieldNamePath": "availabilityEndAt"
        },
        "ratings": {
          "description": "The content ratings",
          "type": "ratings",
          "example": {
            "BBFC": "PG"
          },
          "fieldName": "ratings",
          "fieldNamePath": "ratings",
          "typeInfo": {
            "keys": {
              "values": [
                "BBFC",
                "FPB",
                "MPAA",
                "TVPG",
                "ESRB",
                "PEGI"
              ],
              "pattern": "(BBFC)|(FPB)|(MPAA)|(TVPG)|(ESRB)|(PEGI)"
            },
            "values": {
              "BBFC": {
                "values": [
                  "Uc",
                  "U",
                  "PG",
                  "12A",
                  "12",
                  "15",
                  "18",
                  "R18"
                ],
                "pattern": "(Uc)|(U)|(PG)|(12A)|(12)|(15)|(18)|(R18)"
              },
              "FPB": {
                "values": [
                  "A",
                  "PG",
                  "7-9-PG",
                  "10-12-PG",
                  "13",
                  "16",
                  "18",
                  "X18",
                  "XX"
                ],
                "pattern": "(A)|(PG)|(7-9-PG)|(10-12-PG)|(13)|(16)|(18)|(X18)|(XX)"
              },
              "MPAA": {
                "values": [
                  "G",
                  "PG",
                  "PG-13",
                  "R",
                  "NC-17"
                ],
                "pattern": "(G)|(PG)|(PG-13)|(R)|(NC-17)"
              },
              "TVPG": {
                "values": [
                  "TV-Y",
                  "TV-Y7",
                  "TV-G",
                  "TV-PG",
                  "TV-14",
                  "TV-MA"
                ],
                "pattern": "(TV-Y)|(TV-Y7)|(TV-G)|(TV-PG)|(TV-14)|(TV-MA)"
              },
              "ESRB": {
                "values": [
                  "RP",
                  "EC",
                  "E",
                  "E10+",
                  "T",
                  "M",
                  "AO"
                ],
                "pattern": "(RP)|(EC)|(E)|(E10+)|(T)|(M)|(AO)"
              },
              "PEGI": {
                "values": [
                  "3",
                  "7",
                  "12",
                  "16",
                  "18"
                ],
                "pattern": "(3)|(7)|(12)|(16)|(18)"
              }
            },
            "desc": "rating (schema:level pairs)"
          }
        },
        "audienceTypes": {
          "description": "Indicates intended target audience",
          "type": "string",
          "array": true,
          "allowedValues": [
            {
              "value": "adult",
              "alternatives": [],
              "label": "adult",
              "description": "adult"
            },
            {
              "value": "children",
              "alternatives": [],
              "label": "children",
              "description": "children"
            },
            {
              "value": "family",
              "alternatives": [],
              "label": "family",
              "description": "family"
            },
            {
              "value": "general",
              "alternatives": [],
              "label": "general",
              "description": "general"
            },
            {
              "value": "mature",
              "alternatives": [],
              "label": "mature",
              "description": "mature"
            },
            {
              "value": "teen",
              "alternatives": [],
              "label": "teen",
              "description": "teen"
            },
            {
              "value": "other",
              "alternatives": [],
              "label": "other",
              "description": "other"
            }
          ],
          "example": [
            "family",
            "children"
          ],
          "fieldName": "audienceTypes",
          "fieldNamePath": "audienceTypes",
          "allowedValueMappings": {
            "adult": "adult",
            "children": "children",
            "family": "family",
            "general": "general",
            "mature": "mature",
            "teen": "teen",
            "other": "other"
          },
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          }
        },
        "languages": {
          "description": "Languages of the asset",
          "type": "language",
          "array": true,
          "example": [
            "en",
            "it"
          ],
          "fieldName": "languages",
          "fieldNamePath": "languages",
          "typeInfo": {
            "keys": {},
            "values": {},
            "desc": "languages",
            "codes": [
              "ar",
              "de",
              "de-AT",
              "de-CH",
              "el",
              "en",
              "es",
              "fa",
              "fr",
              "fr-CH",
              "hi",
              "hu",
              "it",
              "it-CH",
              "nl",
              "ru",
              "tl",
              "tr",
              "vi",
              "zh"
            ],
            "pattern": "(ar)|(de)|(de-AT)|(de-CH)|(el)|(en)|(es)|(fa)|(fr)|(fr-CH)|(hi)|(hu)|(it)|(it-CH)|(nl)|(ru)|(tl)|(tr)|(vi)|(zh)"
          }
        },
        "mediaInfo": {
          "description": "Media specific info for the asset",
          "fields": {
            "audioTypes": {
              "description": "Audio types available for the media asset",
              "type": "string",
              "array": true,
              "allowedValues": [
                {
                  "value": "dolby-5.1",
                  "alternatives": [],
                  "label": "dolby-5.1",
                  "description": "dolby-5.1"
                },
                {
                  "value": "dolby-digital",
                  "alternatives": [],
                  "label": "dolby-digital",
                  "description": "dolby-digital"
                },
                {
                  "value": "dolby-pro-logic",
                  "alternatives": [],
                  "label": "dolby-pro-logic",
                  "description": "dolby-pro-logic"
                },
                {
                  "value": "mono",
                  "alternatives": [],
                  "label": "mono",
                  "description": "mono"
                },
                {
                  "value": "stereo",
                  "alternatives": [],
                  "label": "stereo",
                  "description": "stereo"
                },
                {
                  "value": "other",
                  "alternatives": [],
                  "label": "other",
                  "description": "other"
                }
              ],
              "fieldName": "audioTypes",
              "fieldNamePath": "mediaInfo.audioTypes",
              "allowedValueMappings": {
                "dolby-5.1": "dolby-5.1",
                "dolby-digital": "dolby-digital",
                "dolby-pro-logic": "dolby-pro-logic",
                "mono": "mono",
                "stereo": "stereo",
                "other": "other"
              },
              "typeInfo": {
                "desc": "string",
                "pattern": ".+",
                "name": "string"
              },
              "primary": true
            },
            "resolution": {
              "description": "The overall resolution of the media asset",
              "type": "string",
              "allowedValues": [
                {
                  "value": "480i",
                  "alternatives": [],
                  "label": "480i",
                  "description": "480i"
                },
                {
                  "value": "480p",
                  "alternatives": [],
                  "label": "480p",
                  "description": "480p"
                },
                {
                  "value": "576i",
                  "alternatives": [],
                  "label": "576i",
                  "description": "576i"
                },
                {
                  "value": "576p",
                  "alternatives": [],
                  "label": "576p",
                  "description": "576p"
                },
                {
                  "value": "720i",
                  "alternatives": [],
                  "label": "720i",
                  "description": "720i"
                },
                {
                  "value": "720p",
                  "alternatives": [],
                  "label": "720p",
                  "description": "720p"
                },
                {
                  "value": "1080i",
                  "alternatives": [],
                  "label": "1080i",
                  "description": "1080i"
                },
                {
                  "value": "1080p",
                  "alternatives": [],
                  "label": "1080p",
                  "description": "1080p"
                },
                {
                  "value": "2160p",
                  "alternatives": [],
                  "label": "2160p",
                  "description": "2160p"
                },
                {
                  "value": "4320p",
                  "alternatives": [],
                  "label": "4320p",
                  "description": "4320p"
                },
                {
                  "value": "8640p",
                  "alternatives": [],
                  "label": "8640p",
                  "description": "8640p"
                },
                {
                  "value": "other",
                  "alternatives": [],
                  "label": "other",
                  "description": "other"
                }
              ],
              "example": "1080p",
              "fieldName": "resolution",
              "fieldNamePath": "mediaInfo.resolution",
              "allowedValueMappings": {
                "480i": "480i",
                "480p": "480p",
                "576i": "576i",
                "576p": "576p",
                "720i": "720i",
                "720p": "720p",
                "1080i": "1080i",
                "1080p": "1080p",
                "2160p": "2160p",
                "4320p": "4320p",
                "8640p": "8640p",
                "other": "other"
              },
              "typeInfo": {
                "desc": "string",
                "pattern": ".+",
                "name": "string"
              },
              "primary": true
            },
            "bitrate": {
              "description": "The overall bitrate in kbps of the media asset",
              "type": "nonNegativeInteger",
              "example": 250,
              "fieldName": "bitrate",
              "fieldNamePath": "mediaInfo.bitrate",
              "typeInfo": {
                "desc": "non-negative integer",
                "pattern": "\\d+",
                "name": "nonNegativeInteger"
              },
              "primary": true,
              "filteredBy": [
                "withBitrate"
              ],
              "filters": [
                {
                  "type": "with",
                  "label": "bitrate",
                  "description": "filter by the supplied bitrate",
                  "fieldNamePath": "mediaInfo.bitrate",
                  "name": "withBitrate",
                  "and": true,
                  "or": true,
                  "valueType": "nonNegativeInteger"
                }
              ]
            },
            "aspectRatio": {
              "description": "The overall aspect ratio of the media asset",
              "type": "string",
              "allowedValues": [
                {
                  "value": "16:9",
                  "alternatives": [],
                  "label": "16:9",
                  "description": "16:9"
                },
                {
                  "value": "4:3",
                  "alternatives": [],
                  "label": "4:3",
                  "description": "4:3"
                },
                {
                  "value": "other",
                  "alternatives": [],
                  "label": "other",
                  "description": "other"
                }
              ],
              "example": "16:9",
              "fieldName": "aspectRatio",
              "fieldNamePath": "mediaInfo.aspectRatio",
              "allowedValueMappings": {
                "16:9": "16:9",
                "4:3": "4:3",
                "other": "other"
              },
              "typeInfo": {
                "desc": "string",
                "pattern": ".+",
                "name": "string"
              }
            },
            "videoTracks": {
              "description": "Video specific info for the asset",
              "array": true,
              "fields": {
                "codec": {
                  "description": "The codec of the video track",
                  "type": "string",
                  "allowedValues": [
                    {
                      "value": "H.262",
                      "description": "MPEG-2 Part 2",
                      "alternatives": [],
                      "label": "H.262"
                    },
                    {
                      "value": "H.264",
                      "description": "MPEG-4 Part 10, AVC",
                      "alternatives": [],
                      "label": "H.264"
                    },
                    {
                      "value": "H.265",
                      "description": "MPEG-H Part 2, HEVC",
                      "alternatives": [],
                      "label": "H.265"
                    },
                    {
                      "value": "other",
                      "alternatives": [],
                      "label": "other",
                      "description": "other"
                    }
                  ],
                  "example": "H.264",
                  "fieldName": "codec",
                  "fieldNamePath": "mediaInfo.videoTracks.codec",
                  "allowedValueMappings": {
                    "H.262": "H.262",
                    "H.264": "H.264",
                    "H.265": "H.265",
                    "other": "other"
                  },
                  "typeInfo": {
                    "desc": "string",
                    "pattern": ".+",
                    "name": "string"
                  },
                  "primary": true
                },
                "duration": {
                  "description": "The duration of the video track",
                  "type": "duration",
                  "example": "PT1H30M",
                  "fieldName": "duration",
                  "fieldNamePath": "mediaInfo.videoTracks.duration",
                  "typeInfo": {
                    "desc": "represents a duration of time expressed as a number of years, months, days, hours, minutes, and seconds",
                    "pattern": "-?P(?=[T\\d])(\\d+Y)?(\\d+M)?(\\d+D)?(T(?=\\d)(\\d+H)?(\\d+M)?(\\d+(\\.\\d+)?S)?)?"
                  },
                  "primary": true
                },
                "bitrate": {
                  "description": "The video bitrate in kbps of the video track",
                  "type": "nonNegativeInteger",
                  "example": 250,
                  "fieldName": "bitrate",
                  "fieldNamePath": "mediaInfo.videoTracks.bitrate",
                  "typeInfo": {
                    "desc": "non-negative integer",
                    "pattern": "\\d+",
                    "name": "nonNegativeInteger"
                  },
                  "primary": true
                },
                "resolution": {
                  "description": "The resolution of the video track",
                  "type": "string",
                  "allowedValues": [
                    {
                      "value": "480i",
                      "alternatives": [],
                      "label": "480i",
                      "description": "480i"
                    },
                    {
                      "value": "480p",
                      "alternatives": [],
                      "label": "480p",
                      "description": "480p"
                    },
                    {
                      "value": "576i",
                      "alternatives": [],
                      "label": "576i",
                      "description": "576i"
                    },
                    {
                      "value": "576p",
                      "alternatives": [],
                      "label": "576p",
                      "description": "576p"
                    },
                    {
                      "value": "720i",
                      "alternatives": [],
                      "label": "720i",
                      "description": "720i"
                    },
                    {
                      "value": "720p",
                      "alternatives": [],
                      "label": "720p",
                      "description": "720p"
                    },
                    {
                      "value": "1080i",
                      "alternatives": [],
                      "label": "1080i",
                      "description": "1080i"
                    },
                    {
                      "value": "1080p",
                      "alternatives": [],
                      "label": "1080p",
                      "description": "1080p"
                    },
                    {
                      "value": "2160p",
                      "alternatives": [],
                      "label": "2160p",
                      "description": "2160p"
                    },
                    {
                      "value": "4320p",
                      "alternatives": [],
                      "label": "4320p",
                      "description": "4320p"
                    },
                    {
                      "value": "8640p",
                      "alternatives": [],
                      "label": "8640p",
                      "description": "8640p"
                    },
                    {
                      "value": "other",
                      "alternatives": [],
                      "label": "other",
                      "description": "other"
                    }
                  ],
                  "example": "1080p",
                  "fieldName": "resolution",
                  "fieldNamePath": "mediaInfo.videoTracks.resolution",
                  "allowedValueMappings": {
                    "480i": "480i",
                    "480p": "480p",
                    "576i": "576i",
                    "576p": "576p",
                    "720i": "720i",
                    "720p": "720p",
                    "1080i": "1080i",
                    "1080p": "1080p",
                    "2160p": "2160p",
                    "4320p": "4320p",
                    "8640p": "8640p",
                    "other": "other"
                  },
                  "typeInfo": {
                    "desc": "string",
                    "pattern": ".+",
                    "name": "string"
                  }
                },
                "frameRate": {
                  "description": "The frame rate of the video track",
                  "type": "nonNegativeNumber",
                  "example": 29.97,
                  "fieldName": "frameRate",
                  "fieldNamePath": "mediaInfo.videoTracks.frameRate",
                  "typeInfo": {
                    "desc": "non-negative number",
                    "pattern": "\\d+(?:\\.\\d+)?"
                  }
                },
                "aspectRatio": {
                  "description": "The aspect ratio of the video track",
                  "type": "string",
                  "allowedValues": [
                    {
                      "value": "16:9",
                      "alternatives": [],
                      "label": "16:9",
                      "description": "16:9"
                    },
                    {
                      "value": "4:3",
                      "alternatives": [],
                      "label": "4:3",
                      "description": "4:3"
                    },
                    {
                      "value": "other",
                      "alternatives": [],
                      "label": "other",
                      "description": "other"
                    }
                  ],
                  "example": "16:9",
                  "fieldName": "aspectRatio",
                  "fieldNamePath": "mediaInfo.videoTracks.aspectRatio",
                  "allowedValueMappings": {
                    "16:9": "16:9",
                    "4:3": "4:3",
                    "other": "other"
                  },
                  "typeInfo": {
                    "desc": "string",
                    "pattern": ".+",
                    "name": "string"
                  }
                },
                "height": {
                  "description": "The height in pixels of the video track",
                  "type": "nonNegativeInteger",
                  "example": 1920,
                  "fieldName": "height",
                  "fieldNamePath": "mediaInfo.videoTracks.height",
                  "typeInfo": {
                    "desc": "non-negative integer",
                    "pattern": "\\d+",
                    "name": "nonNegativeInteger"
                  }
                },
                "width": {
                  "description": "The width in pixels of the video track",
                  "type": "nonNegativeInteger",
                  "example": 1080,
                  "fieldName": "width",
                  "fieldNamePath": "mediaInfo.videoTracks.width",
                  "typeInfo": {
                    "desc": "non-negative integer",
                    "pattern": "\\d+",
                    "name": "nonNegativeInteger"
                  }
                }
              },
              "fieldName": "videoTracks",
              "fieldNamePath": "mediaInfo.videoTracks",
              "typeInfo": {}
            },
            "screenFormat": {
              "description": "The screen format of the media asset",
              "type": "string",
              "allowedValues": [
                {
                  "value": "letterbox",
                  "alternatives": [],
                  "label": "letterbox",
                  "description": "letterbox"
                },
                {
                  "value": "oar",
                  "description": "original aspect ratio",
                  "alternatives": [],
                  "label": "oar"
                },
                {
                  "value": "standard",
                  "alternatives": [],
                  "label": "standard",
                  "description": "standard"
                },
                {
                  "value": "widescreen",
                  "alternatives": [],
                  "label": "widescreen",
                  "description": "widescreen"
                },
                {
                  "value": "other",
                  "alternatives": [],
                  "label": "other",
                  "description": "other"
                }
              ],
              "example": "widescreen",
              "fieldName": "screenFormat",
              "fieldNamePath": "mediaInfo.screenFormat",
              "allowedValueMappings": {
                "letterbox": "letterbox",
                "oar": "oar",
                "standard": "standard",
                "widescreen": "widescreen",
                "other": "other"
              },
              "typeInfo": {
                "desc": "string",
                "pattern": ".+",
                "name": "string"
              }
            },
            "height": {
              "description": "The overall height in pixels of the media asset",
              "type": "nonNegativeInteger",
              "example": 1920,
              "fieldName": "height",
              "fieldNamePath": "mediaInfo.height",
              "typeInfo": {
                "desc": "non-negative integer",
                "pattern": "\\d+",
                "name": "nonNegativeInteger"
              }
            },
            "frameRate": {
              "description": "The overall frame rate of the media asset",
              "type": "nonNegativeNumber",
              "example": 29.97,
              "fieldName": "frameRate",
              "fieldNamePath": "mediaInfo.frameRate",
              "typeInfo": {
                "desc": "non-negative number",
                "pattern": "\\d+(?:\\.\\d+)?"
              }
            },
            "dubbedLanguages": {
              "description": "Available dubbed languages for the media asset",
              "type": "language",
              "array": true,
              "example": [
                "en",
                "it"
              ],
              "fieldName": "dubbedLanguages",
              "fieldNamePath": "mediaInfo.dubbedLanguages",
              "typeInfo": {
                "keys": {},
                "values": {},
                "desc": "languages",
                "codes": [
                  "ar",
                  "de",
                  "de-AT",
                  "de-CH",
                  "el",
                  "en",
                  "es",
                  "fa",
                  "fr",
                  "fr-CH",
                  "hi",
                  "hu",
                  "it",
                  "it-CH",
                  "nl",
                  "ru",
                  "tl",
                  "tr",
                  "vi",
                  "zh"
                ],
                "pattern": "(ar)|(de)|(de-AT)|(de-CH)|(el)|(en)|(es)|(fa)|(fr)|(fr-CH)|(hi)|(hu)|(it)|(it-CH)|(nl)|(ru)|(tl)|(tr)|(vi)|(zh)"
              }
            },
            "width": {
              "description": "The overall width in pixels of the media asset",
              "type": "nonNegativeInteger",
              "example": 1080,
              "fieldName": "width",
              "fieldNamePath": "mediaInfo.width",
              "typeInfo": {
                "desc": "non-negative integer",
                "pattern": "\\d+",
                "name": "nonNegativeInteger"
              }
            },
            "audioTracks": {
              "description": "Audio specific info for the asset",
              "array": true,
              "fields": {
                "language": {
                  "description": "The language of the audio track",
                  "type": "language",
                  "example": "it",
                  "fieldName": "language",
                  "fieldNamePath": "mediaInfo.audioTracks.language",
                  "typeInfo": {
                    "keys": {},
                    "values": {},
                    "desc": "languages",
                    "codes": [
                      "ar",
                      "de",
                      "de-AT",
                      "de-CH",
                      "el",
                      "en",
                      "es",
                      "fa",
                      "fr",
                      "fr-CH",
                      "hi",
                      "hu",
                      "it",
                      "it-CH",
                      "nl",
                      "ru",
                      "tl",
                      "tr",
                      "vi",
                      "zh"
                    ],
                    "pattern": "(ar)|(de)|(de-AT)|(de-CH)|(el)|(en)|(es)|(fa)|(fr)|(fr-CH)|(hi)|(hu)|(it)|(it-CH)|(nl)|(ru)|(tl)|(tr)|(vi)|(zh)"
                  },
                  "primary": true
                },
                "codec": {
                  "description": "The audio codec of the audio track",
                  "type": "string",
                  "allowedValues": [
                    {
                      "value": "AAC",
                      "alternatives": [],
                      "label": "AAC",
                      "description": "AAC"
                    },
                    {
                      "value": "DST",
                      "alternatives": [],
                      "label": "DST",
                      "description": "DST"
                    },
                    {
                      "value": "other",
                      "alternatives": [],
                      "label": "other",
                      "description": "other"
                    }
                  ],
                  "example": "AAC",
                  "fieldName": "codec",
                  "fieldNamePath": "mediaInfo.audioTracks.codec",
                  "allowedValueMappings": {
                    "AAC": "AAC",
                    "DST": "DST",
                    "other": "other"
                  },
                  "typeInfo": {
                    "desc": "string",
                    "pattern": ".+",
                    "name": "string"
                  },
                  "primary": true
                },
                "duration": {
                  "description": "The duration of the audio track",
                  "type": "duration",
                  "example": "PT1H30M",
                  "fieldName": "duration",
                  "fieldNamePath": "mediaInfo.audioTracks.duration",
                  "typeInfo": {
                    "desc": "represents a duration of time expressed as a number of years, months, days, hours, minutes, and seconds",
                    "pattern": "-?P(?=[T\\d])(\\d+Y)?(\\d+M)?(\\d+D)?(T(?=\\d)(\\d+H)?(\\d+M)?(\\d+(\\.\\d+)?S)?)?"
                  },
                  "primary": true
                },
                "bitrate": {
                  "description": "The audio bitrate in kbps of the audio track",
                  "type": "nonNegativeInteger",
                  "example": 250,
                  "fieldName": "bitrate",
                  "fieldNamePath": "mediaInfo.audioTracks.bitrate",
                  "typeInfo": {
                    "desc": "non-negative integer",
                    "pattern": "\\d+",
                    "name": "nonNegativeInteger"
                  }
                },
                "sampleRate": {
                  "description": "The sample rate of the audio track",
                  "type": "nonNegativeInteger",
                  "example": 250,
                  "fieldName": "sampleRate",
                  "fieldNamePath": "mediaInfo.audioTracks.sampleRate",
                  "typeInfo": {
                    "desc": "non-negative integer",
                    "pattern": "\\d+",
                    "name": "nonNegativeInteger"
                  }
                },
                "channels": {
                  "description": "Total number of audio channels of the audio track",
                  "type": "nonNegativeInteger",
                  "example": 1,
                  "fieldName": "channels",
                  "fieldNamePath": "mediaInfo.audioTracks.channels",
                  "typeInfo": {
                    "desc": "non-negative integer",
                    "pattern": "\\d+",
                    "name": "nonNegativeInteger"
                  }
                }
              },
              "fieldName": "audioTracks",
              "fieldNamePath": "mediaInfo.audioTracks",
              "typeInfo": {}
            },
            "codec": {
              "description": "The overall codec of the media asset",
              "type": "string",
              "allowedValues": [
                {
                  "value": "other",
                  "alternatives": [],
                  "label": "other",
                  "description": "other"
                }
              ],
              "example": "other",
              "fieldName": "codec",
              "fieldNamePath": "mediaInfo.codec",
              "allowedValueMappings": {
                "other": "other"
              },
              "typeInfo": {
                "desc": "string",
                "pattern": ".+",
                "name": "string"
              }
            },
            "duration": {
              "description": "The overall duration of the media asset",
              "type": "duration",
              "example": "PT1H30M",
              "fieldName": "duration",
              "fieldNamePath": "mediaInfo.duration",
              "typeInfo": {
                "desc": "represents a duration of time expressed as a number of years, months, days, hours, minutes, and seconds",
                "pattern": "-?P(?=[T\\d])(\\d+Y)?(\\d+M)?(\\d+D)?(T(?=\\d)(\\d+H)?(\\d+M)?(\\d+(\\.\\d+)?S)?)?"
              }
            },
            "dimensions": {
              "description": "The overall dimensions of the media asset",
              "type": "string",
              "allowedValues": [
                {
                  "value": "2D",
                  "alternatives": [],
                  "label": "2D",
                  "description": "2D"
                },
                {
                  "value": "3D",
                  "alternatives": [],
                  "label": "3D",
                  "description": "3D"
                },
                {
                  "value": "other",
                  "alternatives": [],
                  "label": "other",
                  "description": "other"
                }
              ],
              "example": "2D",
              "fieldName": "dimensions",
              "fieldNamePath": "mediaInfo.dimensions",
              "allowedValueMappings": {
                "2D": "2D",
                "3D": "3D",
                "other": "other"
              },
              "typeInfo": {
                "desc": "string",
                "pattern": ".+",
                "name": "string"
              }
            },
            "subtitleLanguages": {
              "description": "Available subtitle languages for the media asset",
              "type": "language",
              "array": true,
              "example": [
                "en",
                "it"
              ],
              "fieldName": "subtitleLanguages",
              "fieldNamePath": "mediaInfo.subtitleLanguages",
              "typeInfo": {
                "keys": {},
                "values": {},
                "desc": "languages",
                "codes": [
                  "ar",
                  "de",
                  "de-AT",
                  "de-CH",
                  "el",
                  "en",
                  "es",
                  "fa",
                  "fr",
                  "fr-CH",
                  "hi",
                  "hu",
                  "it",
                  "it-CH",
                  "nl",
                  "ru",
                  "tl",
                  "tr",
                  "vi",
                  "zh"
                ],
                "pattern": "(ar)|(de)|(de-AT)|(de-CH)|(el)|(en)|(es)|(fa)|(fr)|(fr-CH)|(hi)|(hu)|(it)|(it-CH)|(nl)|(ru)|(tl)|(tr)|(vi)|(zh)"
              }
            },
            "definition": {
              "description": "The overall video definition of the media asset",
              "type": "string",
              "allowedValues": [
                {
                  "value": "SD",
                  "alternatives": [],
                  "label": "SD",
                  "description": "SD"
                },
                {
                  "value": "HD",
                  "alternatives": [],
                  "label": "HD",
                  "description": "HD"
                },
                {
                  "value": "UHD",
                  "alternatives": [],
                  "label": "UHD",
                  "description": "UHD"
                },
                {
                  "value": "other",
                  "alternatives": [],
                  "label": "other",
                  "description": "other"
                }
              ],
              "example": "HD",
              "fieldName": "definition",
              "fieldNamePath": "mediaInfo.definition",
              "allowedValueMappings": {
                "SD": "SD",
                "HD": "HD",
                "UHD": "UHD",
                "other": "other"
              },
              "typeInfo": {
                "desc": "string",
                "pattern": ".+",
                "name": "string"
              }
            }
          },
          "fieldName": "mediaInfo",
          "fieldNamePath": "mediaInfo",
          "typeInfo": {}
        },
        "protection": {
          "description": "protection applied to the asset",
          "fields": {
            "scheme": {
              "description": "protection scheme",
              "type": "string",
              "allowedValues": [
                {
                  "value": "fairplay",
                  "alternatives": [],
                  "label": "fairplay",
                  "description": "fairplay"
                },
                {
                  "value": "playready",
                  "alternatives": [],
                  "label": "playready",
                  "description": "playready"
                },
                {
                  "value": "widevine",
                  "alternatives": [],
                  "label": "widevine",
                  "description": "widevine"
                },
                {
                  "value": "other",
                  "alternatives": [],
                  "label": "other",
                  "description": "other"
                }
              ],
              "example": "playready",
              "fieldName": "scheme",
              "fieldNamePath": "protection.scheme",
              "allowedValueMappings": {
                "fairplay": "fairplay",
                "playready": "playready",
                "widevine": "widevine",
                "other": "other"
              },
              "typeInfo": {
                "desc": "string",
                "pattern": ".+",
                "name": "string"
              },
              "primary": true
            },
            "contentId": {
              "description": "id for the protection scheme",
              "type": "string",
              "example": "12345",
              "fieldName": "contentId",
              "fieldNamePath": "protection.contentId",
              "typeInfo": {
                "desc": "string",
                "pattern": ".+",
                "name": "string"
              },
              "primary": true
            }
          },
          "fieldName": "protection",
          "fieldNamePath": "protection",
          "typeInfo": {}
        }
      },
      "filters": {
        "q": {
          "type": "q",
          "label": "q",
          "description": "filter by text",
          "includes": [
            "title"
          ],
          "name": "q",
          "valueType": "string",
          "text": true
        },
        "withName": {
          "type": "with",
          "label": "name",
          "fieldNamePath": "name",
          "description": "filter by the supplied name",
          "name": "withName",
          "and": true,
          "or": true,
          "valueType": "name"
        },
        "withRef": {
          "type": "with",
          "label": "ref",
          "fieldNamePath": "ref",
          "description": "filter by the supplied ref",
          "name": "withRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withAlternativeIdentifiers": {
          "type": "with",
          "label": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "description": "filter by the supplied alternative identifiers",
          "prefix": true,
          "name": "withAlternativeIdentifiers",
          "and": true,
          "or": true,
          "valueType": "stringMap"
        },
        "withTags": {
          "type": "with",
          "label": "tags",
          "fieldNamePath": "tags",
          "description": "filter by the supplied tags",
          "name": "withTags",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withScore": {
          "type": "with",
          "label": "scores",
          "fieldNamePath": "scores",
          "description": "filter by the supplied score",
          "range": true,
          "name": "withScore",
          "and": true,
          "or": true,
          "valueType": "scores"
        },
        "withCreatedAt": {
          "type": "with",
          "label": "createdAt",
          "fieldNamePath": "createdAt",
          "description": "filter by the supplied createdAt",
          "range": true,
          "name": "withCreatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withCreatedBy": {
          "type": "with",
          "label": "createdBy",
          "fieldNamePath": "createdBy",
          "description": "filter by the supplied createdBy",
          "name": "withCreatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withUpdatedAt": {
          "type": "with",
          "label": "updatedAt",
          "fieldNamePath": "updatedAt",
          "description": "filter by the supplied updatedAt",
          "range": true,
          "name": "withUpdatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withUpdatedBy": {
          "type": "with",
          "label": "updatedBy",
          "fieldNamePath": "updatedBy",
          "description": "filter by the supplied updatedBy",
          "name": "withUpdatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withDeletedAt": {
          "type": "with",
          "label": "deletedAt",
          "fieldNamePath": "deletedAt",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedAt",
          "range": true,
          "name": "withDeletedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withDeletedBy": {
          "type": "with",
          "label": "deletedBy",
          "fieldNamePath": "deletedBy",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedBy",
          "name": "withDeletedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withReapAt": {
          "type": "with",
          "label": "reapAt",
          "fieldNamePath": "reapAt",
          "prohibited": [
            "enduser",
            "service",
            "admin"
          ],
          "description": "filter by the supplied reapAt",
          "range": true,
          "name": "withReapAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withVersion": {
          "type": "with",
          "label": "version",
          "fieldNamePath": "version",
          "description": "filter by the supplied version",
          "name": "withVersion",
          "and": true,
          "or": true,
          "valueType": "version"
        },
        "withtype": {
          "type": "with",
          "label": "type",
          "description": "filter for type",
          "fieldNamePath": "type",
          "name": "withtype",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withContentRef": {
          "type": "with",
          "label": "contentRef",
          "description": "filter for contentRef",
          "fieldNamePath": "contentRef",
          "name": "withContentRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withBitrate": {
          "type": "with",
          "label": "bitrate",
          "description": "filter by the supplied bitrate",
          "fieldNamePath": "mediaInfo.bitrate",
          "name": "withBitrate",
          "and": true,
          "or": true,
          "valueType": "nonNegativeInteger"
        }
      },
      "restrictions": [
        {
          "type": "ownership",
          "message": "must contain an owner for which you have permission",
          "description": "users can only interact with resources that are owned by a tenant they have access to"
        },
        {
          "type": "unmodifiable",
          "message": "not allowed to modify resources created by root:root",
          "description": "users are not allowed to modify resources that were created by root:root"
        },
        {
          "type": "primaryKey",
          "message": "primaryKey must be unique",
          "description": "the primary key (ref) is derived from owner and name, allowing name to be a tenant specific unique external id"
        },
        {
          "type": "readOnly",
          "userTypes": [
            "enduser"
          ],
          "message": "end user type is not permitted to write to assets",
          "description": "end user type is not permitted to write to assets"
        }
      ],
      "relationships": {
        "content": {
          "type": "direct",
          "description": "The associated content",
          "resourceType": "contents",
          "fieldNamePath": "contentRef",
          "fields": [
            "ref",
            "title",
            "parentRef",
            "memberRefs",
            "type"
          ],
          "batchSize": 10,
          "name": "content"
        }
      },
      "description": "Represents an asset of a content",
      "singularName": "asset",
      "serviceName": "metadata",
      "parameterisedBy": "type",
      "pluralName": "assets",
      "hyphenatedPluralName": "assets",
      "displaySingularName": "asset",
      "displayPluralName": "assets",
      "retentionPeriod": "P30D",
      "typeInfo": {}
    },
    "awards": {
      "path": "/data",
      "consistency": "eventual",
      "stability": "stable",
      "displayPriority": 4,
      "operations": {
        "browse": {
          "description": "Fetches a list of awards that may be filtered",
          "actions": [
            "metadata:awards:read",
            "metadata:awards:read:browse"
          ]
        },
        "get": {
          "description": "Fetches one or more awards using the supplied id(s)",
          "actions": [
            "metadata:awards:read",
            "metadata:awards:read:get"
          ]
        },
        "storeBatch": {
          "description": "Stores one or more awards, either creating or wholly replacing",
          "actions": [
            "metadata:awards:write",
            "metadata:awards:write:store",
            "metadata:awards:write:store:batch"
          ],
          "limit": 100
        },
        "storeOne": {
          "description": "Stores the supplied award with the supplied id, either creating or wholly replacing",
          "actions": [
            "metadata:awards:write",
            "metadata:awards:write:store",
            "metadata:awards:write:store:one"
          ]
        },
        "patch": {
          "enabled": false,
          "description": "Partially updates the existing stored award with the supplied id",
          "actions": [
            "metadata:awards:write",
            "metadata:awards:write:store",
            "metadata:awards:write:store:patch"
          ]
        },
        "delete": {
          "description": "Delete one or more awards using the supplied id(s)",
          "actions": [
            "metadata:awards:write",
            "metadata:awards:write:delete"
          ]
        }
      },
      "pagination": {
        "pageSize": {
          "min": 1,
          "max": 100,
          "default": 100
        },
        "pages": {
          "max": 1000
        }
      },
      "display": {
        "priority": 4,
        "overview": {
          "label": "title",
          "quickInfo": [
            "category",
            "awardingBody"
          ],
          "other": [
            "contentRef"
          ]
        },
        "info": {
          "primary": [
            "ref",
            "owner",
            "name"
          ],
          "secondary": [
            "alternativeIdentifiers",
            "tags",
            "custom"
          ],
          "history": [
            "createdAt",
            "createdBy",
            "updatedAt",
            "updatedBy",
            "deletedAt",
            "deletedBy",
            "reapAt",
            "version"
          ]
        },
        "singularName": "award",
        "pluralName": "awards"
      },
      "fields": {
        "ref": {
          "description": "The derived owner:name reference",
          "type": "ref",
          "readOnly": true,
          "example": "test:resource-name",
          "fieldName": "ref",
          "fieldNamePath": "ref",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withRef"
          ],
          "filters": [
            {
              "type": "with",
              "label": "ref",
              "fieldNamePath": "ref",
              "description": "filter by the supplied ref",
              "name": "withRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "alternativeIdentifiers": {
          "type": "stringMap",
          "description": "A map of alternative identifiers for this resource",
          "example": {
            "tel": "0800100100",
            "said": "something"
          },
          "fieldName": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "desc": "key-value pairs",
            "name": "stringMap"
          },
          "filteredBy": [
            "withAlternativeIdentifiers"
          ],
          "filters": [
            {
              "type": "with",
              "label": "alternativeIdentifiers",
              "fieldNamePath": "alternativeIdentifiers",
              "description": "filter by the supplied alternative identifiers",
              "prefix": true,
              "name": "withAlternativeIdentifiers",
              "and": true,
              "or": true,
              "valueType": "stringMap"
            }
          ]
        },
        "owner": {
          "description": "The tenant owner name",
          "type": "name",
          "required": true,
          "sort": true,
          "example": "test",
          "fieldName": "owner",
          "fieldNamePath": "owner",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          }
        },
        "name": {
          "description": "The tenant specific unique name",
          "type": "name",
          "sort": true,
          "example": "resource-name",
          "fieldName": "name",
          "fieldNamePath": "name",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          },
          "filteredBy": [
            "withName"
          ],
          "filters": [
            {
              "type": "with",
              "label": "name",
              "fieldNamePath": "name",
              "description": "filter by the supplied name",
              "name": "withName",
              "and": true,
              "or": true,
              "valueType": "name"
            }
          ]
        },
        "tags": {
          "description": "tags for the resource",
          "type": "string",
          "array": true,
          "example": [
            "todo",
            "usage:boxart"
          ],
          "fieldName": "tags",
          "fieldNamePath": "tags",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withTags"
          ],
          "filters": [
            {
              "type": "with",
              "label": "tags",
              "fieldNamePath": "tags",
              "description": "filter by the supplied tags",
              "name": "withTags",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "scores": {
          "description": "scores for the resource",
          "type": "scores",
          "example": {
            "imdb.a3431": 0.9,
            "fuse": 2
          },
          "fieldName": "scores",
          "fieldNamePath": "scores",
          "typeInfo": {
            "keys": {
              "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
            },
            "values": {},
            "desc": "Map of FieldNamePath:Number pairs",
            "name": "scores"
          },
          "filteredBy": [
            "withScore"
          ],
          "filters": [
            {
              "type": "with",
              "label": "scores",
              "fieldNamePath": "scores",
              "description": "filter by the supplied score",
              "range": true,
              "name": "withScore",
              "and": true,
              "or": true,
              "valueType": "scores"
            }
          ]
        },
        "custom": {
          "description": "The tenant specific custom fields.  This may be used to hold tenant specific data alongside the document, but it should not be used as a substitute for normal fields.",
          "type": "map",
          "max": 100,
          "fieldName": "custom",
          "fieldNamePath": "custom",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "values": {},
            "desc": "key-value pairs"
          }
        },
        "createdAt": {
          "description": "The timestamp when created",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "createdAt",
          "fieldNamePath": "createdAt",
          "filteredBy": [
            "withCreatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdAt",
              "fieldNamePath": "createdAt",
              "description": "filter by the supplied createdAt",
              "range": true,
              "name": "withCreatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "createdBy": {
          "description": "The user that created",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "createdBy",
          "fieldNamePath": "createdBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withCreatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdBy",
              "fieldNamePath": "createdBy",
              "description": "filter by the supplied createdBy",
              "name": "withCreatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "updatedAt": {
          "description": "The timestamp when last updated",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "updatedAt",
          "fieldNamePath": "updatedAt",
          "filteredBy": [
            "withUpdatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedAt",
              "fieldNamePath": "updatedAt",
              "description": "filter by the supplied updatedAt",
              "range": true,
              "name": "withUpdatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "updatedBy": {
          "description": "The user that last updated",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "updatedBy",
          "fieldNamePath": "updatedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withUpdatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedBy",
              "fieldNamePath": "updatedBy",
              "description": "filter by the supplied updatedBy",
              "name": "withUpdatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "deletedAt": {
          "description": "The timestamp when deleted (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedAt",
          "fieldNamePath": "deletedAt",
          "filteredBy": [
            "withDeletedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedAt",
              "fieldNamePath": "deletedAt",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedAt",
              "range": true,
              "name": "withDeletedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "deletedBy": {
          "description": "The user that deleted (only applicable to deleted  resources)",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedBy",
          "fieldNamePath": "deletedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withDeletedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedBy",
              "fieldNamePath": "deletedBy",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedBy",
              "name": "withDeletedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "reapAt": {
          "description": "The timestamp for reaping (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "reapAt",
          "fieldNamePath": "reapAt",
          "filteredBy": [
            "withReapAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "reapAt",
              "fieldNamePath": "reapAt",
              "prohibited": [
                "enduser",
                "service",
                "admin"
              ],
              "description": "filter by the supplied reapAt",
              "range": true,
              "name": "withReapAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "version": {
          "description": "The version hash (computed)",
          "type": "version",
          "readOnly": true,
          "example": "356b54eb90cd04566159dfb9c95a0426998a2f7b",
          "excludeFromVersion": true,
          "fieldName": "version",
          "fieldNamePath": "version",
          "typeInfo": {
            "desc": "sha1 hex encoded hash",
            "pattern": "[a-f0-9]{40}",
            "name": "version"
          },
          "filteredBy": [
            "withVersion"
          ],
          "filters": [
            {
              "type": "with",
              "label": "version",
              "fieldNamePath": "version",
              "description": "filter by the supplied version",
              "name": "withVersion",
              "and": true,
              "or": true,
              "valueType": "version"
            }
          ]
        },
        "title": {
          "description": "The title of the award",
          "type": "string",
          "primary": true,
          "example": "Oscar",
          "sort": true,
          "fieldName": "title",
          "fieldNamePath": "title",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withTitle"
          ],
          "filters": [
            {
              "type": "with",
              "label": "title",
              "description": "filter by the supplied title",
              "prefix": true,
              "fieldNamePath": "title",
              "name": "withTitle",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ],
          "localisedBy": "localisedTitle",
          "localises": {
            "description": "The localised title of the award",
            "example": {
              "en": "Oscar",
              "it": "Oscar"
            },
            "type": "string",
            "localisationOf": "title",
            "fieldName": "localisedTitle",
            "fieldNamePath": "localisedTitle",
            "typeInfo": {
              "keys": {
                "values": [
                  "ar",
                  "de",
                  "de-AT",
                  "de-CH",
                  "el",
                  "en",
                  "es",
                  "fa",
                  "fr",
                  "fr-CH",
                  "hi",
                  "hu",
                  "it",
                  "it-CH",
                  "nl",
                  "ru",
                  "tl",
                  "tr",
                  "vi",
                  "zh"
                ],
                "pattern": "(ar)|(de)|(de-AT)|(de-CH)|(el)|(en)|(es)|(fa)|(fr)|(fr-CH)|(hi)|(hu)|(it)|(it-CH)|(nl)|(ru)|(tl)|(tr)|(vi)|(zh)"
              },
              "values": {},
              "desc": "localised strings"
            }
          }
        },
        "localisedTitle": {
          "description": "The localised title of the award",
          "example": {
            "en": "Oscar",
            "it": "Oscar"
          },
          "type": "string",
          "localisationOf": "title",
          "fieldName": "localisedTitle",
          "fieldNamePath": "localisedTitle",
          "typeInfo": {
            "keys": {
              "values": [
                "ar",
                "de",
                "de-AT",
                "de-CH",
                "el",
                "en",
                "es",
                "fa",
                "fr",
                "fr-CH",
                "hi",
                "hu",
                "it",
                "it-CH",
                "nl",
                "ru",
                "tl",
                "tr",
                "vi",
                "zh"
              ],
              "pattern": "(ar)|(de)|(de-AT)|(de-CH)|(el)|(en)|(es)|(fa)|(fr)|(fr-CH)|(hi)|(hu)|(it)|(it-CH)|(nl)|(ru)|(tl)|(tr)|(vi)|(zh)"
            },
            "values": {},
            "desc": "localised strings"
          }
        },
        "category": {
          "description": "The category of the award",
          "type": "string",
          "primary": true,
          "example": "Best Picture",
          "fieldName": "category",
          "fieldNamePath": "category",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withCategory"
          ],
          "filters": [
            {
              "type": "with",
              "label": "category",
              "description": "filter by the supplied category",
              "fieldNamePath": "category",
              "name": "withCategory",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ],
          "localisedBy": "localisedCategory",
          "localises": {
            "description": "The localised category of the award",
            "example": {
              "en": "Best Picture",
              "it": "Migliore Film"
            },
            "type": "string",
            "localisationOf": "category",
            "fieldName": "localisedCategory",
            "fieldNamePath": "localisedCategory",
            "typeInfo": {
              "keys": {
                "values": [
                  "ar",
                  "de",
                  "de-AT",
                  "de-CH",
                  "el",
                  "en",
                  "es",
                  "fa",
                  "fr",
                  "fr-CH",
                  "hi",
                  "hu",
                  "it",
                  "it-CH",
                  "nl",
                  "ru",
                  "tl",
                  "tr",
                  "vi",
                  "zh"
                ],
                "pattern": "(ar)|(de)|(de-AT)|(de-CH)|(el)|(en)|(es)|(fa)|(fr)|(fr-CH)|(hi)|(hu)|(it)|(it-CH)|(nl)|(ru)|(tl)|(tr)|(vi)|(zh)"
              },
              "values": {},
              "desc": "localised strings"
            }
          }
        },
        "localisedCategory": {
          "description": "The localised category of the award",
          "example": {
            "en": "Best Picture",
            "it": "Migliore Film"
          },
          "type": "string",
          "localisationOf": "category",
          "fieldName": "localisedCategory",
          "fieldNamePath": "localisedCategory",
          "typeInfo": {
            "keys": {
              "values": [
                "ar",
                "de",
                "de-AT",
                "de-CH",
                "el",
                "en",
                "es",
                "fa",
                "fr",
                "fr-CH",
                "hi",
                "hu",
                "it",
                "it-CH",
                "nl",
                "ru",
                "tl",
                "tr",
                "vi",
                "zh"
              ],
              "pattern": "(ar)|(de)|(de-AT)|(de-CH)|(el)|(en)|(es)|(fa)|(fr)|(fr-CH)|(hi)|(hu)|(it)|(it-CH)|(nl)|(ru)|(tl)|(tr)|(vi)|(zh)"
            },
            "values": {},
            "desc": "localised strings"
          }
        },
        "awardingBody": {
          "description": "The awarding body of the award",
          "type": "string",
          "primary": true,
          "example": "Academy of Motion Picture Arts and Sciences",
          "fieldName": "awardingBody",
          "fieldNamePath": "awardingBody",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withAwardingBody"
          ],
          "filters": [
            {
              "type": "with",
              "label": "awardingBody",
              "description": "filter by the supplied awardingBody",
              "fieldNamePath": "awardingBody",
              "name": "withAwardingBody",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "level": {
          "description": "The level of the award, either a nominee or the winner/recipient",
          "type": "string",
          "allowedValues": [
            {
              "value": "nominee",
              "alternatives": [],
              "label": "nominee",
              "description": "nominee"
            },
            {
              "value": "recipient",
              "alternatives": [],
              "label": "recipient",
              "description": "recipient"
            }
          ],
          "primary": true,
          "example": "nominee",
          "fieldName": "level",
          "fieldNamePath": "level",
          "allowedValueMappings": {
            "nominee": "nominee",
            "recipient": "recipient"
          },
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withLevel"
          ],
          "filters": [
            {
              "type": "with",
              "label": "level",
              "description": "filter by the supplied level",
              "fieldNamePath": "level",
              "name": "withLevel",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "year": {
          "description": "The year of the award",
          "type": "year",
          "primary": true,
          "example": 2014,
          "fieldName": "year",
          "fieldNamePath": "year",
          "typeInfo": {
            "desc": "year",
            "pattern": "(?:\\d{4})",
            "name": "year"
          },
          "filteredBy": [
            "withYear"
          ],
          "filters": [
            {
              "type": "with",
              "label": "year",
              "description": "filter by the supplied year",
              "fieldNamePath": "year",
              "name": "withYear",
              "and": true,
              "or": true,
              "valueType": "year"
            }
          ]
        },
        "contentRef": {
          "description": "Reference to the content that this award refers to",
          "type": "ref",
          "example": "test:content-1",
          "fieldName": "contentRef",
          "fieldNamePath": "contentRef",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "relatedBy": [
            "content"
          ],
          "relationships": [
            {
              "type": "direct",
              "description": "The associated content",
              "resourceType": "contents",
              "fieldNamePath": "contentRef",
              "fields": [
                "ref",
                "title",
                "parentRef",
                "memberRefs",
                "type"
              ],
              "batchSize": 10,
              "name": "content"
            }
          ],
          "filteredBy": [
            "withContentRef"
          ],
          "filters": [
            {
              "type": "with",
              "label": "contentRef",
              "description": "filter by contentRef",
              "fieldNamePath": "contentRef",
              "name": "withContentRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        }
      },
      "filters": {
        "q": {
          "type": "q",
          "label": "q",
          "description": "filter by text",
          "includes": [
            "title",
            "category",
            "awardingBody",
            "level"
          ],
          "name": "q",
          "valueType": "string",
          "text": true
        },
        "withName": {
          "type": "with",
          "label": "name",
          "fieldNamePath": "name",
          "description": "filter by the supplied name",
          "name": "withName",
          "and": true,
          "or": true,
          "valueType": "name"
        },
        "withRef": {
          "type": "with",
          "label": "ref",
          "fieldNamePath": "ref",
          "description": "filter by the supplied ref",
          "name": "withRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withAlternativeIdentifiers": {
          "type": "with",
          "label": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "description": "filter by the supplied alternative identifiers",
          "prefix": true,
          "name": "withAlternativeIdentifiers",
          "and": true,
          "or": true,
          "valueType": "stringMap"
        },
        "withTags": {
          "type": "with",
          "label": "tags",
          "fieldNamePath": "tags",
          "description": "filter by the supplied tags",
          "name": "withTags",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withScore": {
          "type": "with",
          "label": "scores",
          "fieldNamePath": "scores",
          "description": "filter by the supplied score",
          "range": true,
          "name": "withScore",
          "and": true,
          "or": true,
          "valueType": "scores"
        },
        "withCreatedAt": {
          "type": "with",
          "label": "createdAt",
          "fieldNamePath": "createdAt",
          "description": "filter by the supplied createdAt",
          "range": true,
          "name": "withCreatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withCreatedBy": {
          "type": "with",
          "label": "createdBy",
          "fieldNamePath": "createdBy",
          "description": "filter by the supplied createdBy",
          "name": "withCreatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withUpdatedAt": {
          "type": "with",
          "label": "updatedAt",
          "fieldNamePath": "updatedAt",
          "description": "filter by the supplied updatedAt",
          "range": true,
          "name": "withUpdatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withUpdatedBy": {
          "type": "with",
          "label": "updatedBy",
          "fieldNamePath": "updatedBy",
          "description": "filter by the supplied updatedBy",
          "name": "withUpdatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withDeletedAt": {
          "type": "with",
          "label": "deletedAt",
          "fieldNamePath": "deletedAt",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedAt",
          "range": true,
          "name": "withDeletedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withDeletedBy": {
          "type": "with",
          "label": "deletedBy",
          "fieldNamePath": "deletedBy",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedBy",
          "name": "withDeletedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withReapAt": {
          "type": "with",
          "label": "reapAt",
          "fieldNamePath": "reapAt",
          "prohibited": [
            "enduser",
            "service",
            "admin"
          ],
          "description": "filter by the supplied reapAt",
          "range": true,
          "name": "withReapAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withVersion": {
          "type": "with",
          "label": "version",
          "fieldNamePath": "version",
          "description": "filter by the supplied version",
          "name": "withVersion",
          "and": true,
          "or": true,
          "valueType": "version"
        },
        "withTitle": {
          "type": "with",
          "label": "title",
          "description": "filter by the supplied title",
          "prefix": true,
          "fieldNamePath": "title",
          "name": "withTitle",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withCategory": {
          "type": "with",
          "label": "category",
          "description": "filter by the supplied category",
          "fieldNamePath": "category",
          "name": "withCategory",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withAwardingBody": {
          "type": "with",
          "label": "awardingBody",
          "description": "filter by the supplied awardingBody",
          "fieldNamePath": "awardingBody",
          "name": "withAwardingBody",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withLevel": {
          "type": "with",
          "label": "level",
          "description": "filter by the supplied level",
          "fieldNamePath": "level",
          "name": "withLevel",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withYear": {
          "type": "with",
          "label": "year",
          "description": "filter by the supplied year",
          "fieldNamePath": "year",
          "name": "withYear",
          "and": true,
          "or": true,
          "valueType": "year"
        },
        "withContentRef": {
          "type": "with",
          "label": "contentRef",
          "description": "filter by contentRef",
          "fieldNamePath": "contentRef",
          "name": "withContentRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        }
      },
      "restrictions": [
        {
          "type": "ownership",
          "message": "must contain an owner for which you have permission",
          "description": "users can only interact with resources that are owned by a tenant they have access to"
        },
        {
          "type": "unmodifiable",
          "message": "not allowed to modify resources created by root:root",
          "description": "users are not allowed to modify resources that were created by root:root"
        },
        {
          "type": "primaryKey",
          "message": "primaryKey must be unique",
          "description": "the primary key (ref) is derived from owner and name, allowing name to be a tenant specific unique external id"
        },
        {
          "type": "readOnly",
          "userTypes": [
            "enduser"
          ],
          "message": "end user type is not permitted to write to assets",
          "description": "end user type is not permitted to write to assets"
        }
      ],
      "relationships": {
        "content": {
          "type": "direct",
          "description": "The associated content",
          "resourceType": "contents",
          "fieldNamePath": "contentRef",
          "fields": [
            "ref",
            "title",
            "parentRef",
            "memberRefs",
            "type"
          ],
          "batchSize": 10,
          "name": "content"
        }
      },
      "description": "Represents an award of a content",
      "singularName": "award",
      "serviceName": "metadata",
      "pluralName": "awards",
      "hyphenatedPluralName": "awards",
      "displaySingularName": "award",
      "displayPluralName": "awards",
      "retentionPeriod": "P30D",
      "typeInfo": {}
    },
    "categories": {
      "path": "/data",
      "consistency": "eventual",
      "stability": "stable",
      "displayPriority": 4,
      "operations": {
        "browse": {
          "description": "Fetches a list of categories that may be filtered",
          "actions": [
            "metadata:categories:read",
            "metadata:categories:read:browse"
          ]
        },
        "get": {
          "description": "Fetches one or more categories using the supplied id(s)",
          "actions": [
            "metadata:categories:read",
            "metadata:categories:read:get"
          ]
        },
        "storeBatch": {
          "description": "Stores one or more categories, either creating or wholly replacing",
          "actions": [
            "metadata:categories:write",
            "metadata:categories:write:store",
            "metadata:categories:write:store:batch"
          ],
          "limit": 100
        },
        "storeOne": {
          "description": "Stores the supplied category with the supplied id, either creating or wholly replacing",
          "actions": [
            "metadata:categories:write",
            "metadata:categories:write:store",
            "metadata:categories:write:store:one"
          ]
        },
        "patch": {
          "enabled": false,
          "description": "Partially updates the existing stored category with the supplied id",
          "actions": [
            "metadata:categories:write",
            "metadata:categories:write:store",
            "metadata:categories:write:store:patch"
          ]
        },
        "delete": {
          "description": "Delete one or more categories using the supplied id(s)",
          "actions": [
            "metadata:categories:write",
            "metadata:categories:write:delete"
          ]
        }
      },
      "pagination": {
        "pageSize": {
          "min": 1,
          "max": 100,
          "default": 100
        },
        "pages": {
          "max": 1000
        }
      },
      "display": {
        "priority": 4,
        "overview": {
          "label": "title",
          "quickInfo": [
            "scheme",
            "value"
          ],
          "other": [
            "parentRef"
          ]
        },
        "info": {
          "primary": [
            "ref",
            "owner",
            "name"
          ],
          "secondary": [
            "alternativeIdentifiers",
            "tags",
            "custom"
          ],
          "history": [
            "createdAt",
            "createdBy",
            "updatedAt",
            "updatedBy",
            "deletedAt",
            "deletedBy",
            "reapAt",
            "version"
          ]
        },
        "singularName": "category",
        "pluralName": "categories"
      },
      "fields": {
        "ref": {
          "description": "The derived owner:name reference",
          "type": "ref",
          "readOnly": true,
          "example": "test:resource-name",
          "fieldName": "ref",
          "fieldNamePath": "ref",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withRef"
          ],
          "filters": [
            {
              "type": "with",
              "label": "ref",
              "fieldNamePath": "ref",
              "description": "filter by the supplied ref",
              "name": "withRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "alternativeIdentifiers": {
          "type": "stringMap",
          "description": "A map of alternative identifiers for this resource",
          "example": {
            "tel": "0800100100",
            "said": "something"
          },
          "fieldName": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "desc": "key-value pairs",
            "name": "stringMap"
          },
          "filteredBy": [
            "withAlternativeIdentifiers"
          ],
          "filters": [
            {
              "type": "with",
              "label": "alternativeIdentifiers",
              "fieldNamePath": "alternativeIdentifiers",
              "description": "filter by the supplied alternative identifiers",
              "prefix": true,
              "name": "withAlternativeIdentifiers",
              "and": true,
              "or": true,
              "valueType": "stringMap"
            }
          ]
        },
        "owner": {
          "description": "The tenant owner name",
          "type": "name",
          "required": true,
          "sort": true,
          "example": "test",
          "fieldName": "owner",
          "fieldNamePath": "owner",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          }
        },
        "name": {
          "description": "The tenant specific unique name",
          "type": "name",
          "sort": true,
          "example": "resource-name",
          "fieldName": "name",
          "fieldNamePath": "name",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          },
          "filteredBy": [
            "withName"
          ],
          "filters": [
            {
              "type": "with",
              "label": "name",
              "fieldNamePath": "name",
              "description": "filter by the supplied name",
              "name": "withName",
              "and": true,
              "or": true,
              "valueType": "name"
            }
          ]
        },
        "tags": {
          "description": "tags for the resource",
          "type": "string",
          "array": true,
          "example": [
            "todo",
            "usage:boxart"
          ],
          "fieldName": "tags",
          "fieldNamePath": "tags",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withTags"
          ],
          "filters": [
            {
              "type": "with",
              "label": "tags",
              "fieldNamePath": "tags",
              "description": "filter by the supplied tags",
              "name": "withTags",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "scores": {
          "description": "scores for the resource",
          "type": "scores",
          "example": {
            "imdb.a3431": 0.9,
            "fuse": 2
          },
          "fieldName": "scores",
          "fieldNamePath": "scores",
          "typeInfo": {
            "keys": {
              "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
            },
            "values": {},
            "desc": "Map of FieldNamePath:Number pairs",
            "name": "scores"
          },
          "filteredBy": [
            "withScore"
          ],
          "filters": [
            {
              "type": "with",
              "label": "scores",
              "fieldNamePath": "scores",
              "description": "filter by the supplied score",
              "range": true,
              "name": "withScore",
              "and": true,
              "or": true,
              "valueType": "scores"
            }
          ]
        },
        "custom": {
          "description": "The tenant specific custom fields.  This may be used to hold tenant specific data alongside the document, but it should not be used as a substitute for normal fields.",
          "type": "map",
          "max": 100,
          "fieldName": "custom",
          "fieldNamePath": "custom",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "values": {},
            "desc": "key-value pairs"
          }
        },
        "createdAt": {
          "description": "The timestamp when created",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "createdAt",
          "fieldNamePath": "createdAt",
          "filteredBy": [
            "withCreatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdAt",
              "fieldNamePath": "createdAt",
              "description": "filter by the supplied createdAt",
              "range": true,
              "name": "withCreatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "createdBy": {
          "description": "The user that created",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "createdBy",
          "fieldNamePath": "createdBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withCreatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdBy",
              "fieldNamePath": "createdBy",
              "description": "filter by the supplied createdBy",
              "name": "withCreatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "updatedAt": {
          "description": "The timestamp when last updated",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "updatedAt",
          "fieldNamePath": "updatedAt",
          "filteredBy": [
            "withUpdatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedAt",
              "fieldNamePath": "updatedAt",
              "description": "filter by the supplied updatedAt",
              "range": true,
              "name": "withUpdatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "updatedBy": {
          "description": "The user that last updated",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "updatedBy",
          "fieldNamePath": "updatedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withUpdatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedBy",
              "fieldNamePath": "updatedBy",
              "description": "filter by the supplied updatedBy",
              "name": "withUpdatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "deletedAt": {
          "description": "The timestamp when deleted (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedAt",
          "fieldNamePath": "deletedAt",
          "filteredBy": [
            "withDeletedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedAt",
              "fieldNamePath": "deletedAt",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedAt",
              "range": true,
              "name": "withDeletedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "deletedBy": {
          "description": "The user that deleted (only applicable to deleted  resources)",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedBy",
          "fieldNamePath": "deletedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withDeletedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedBy",
              "fieldNamePath": "deletedBy",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedBy",
              "name": "withDeletedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "reapAt": {
          "description": "The timestamp for reaping (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "reapAt",
          "fieldNamePath": "reapAt",
          "filteredBy": [
            "withReapAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "reapAt",
              "fieldNamePath": "reapAt",
              "prohibited": [
                "enduser",
                "service",
                "admin"
              ],
              "description": "filter by the supplied reapAt",
              "range": true,
              "name": "withReapAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "version": {
          "description": "The version hash (computed)",
          "type": "version",
          "readOnly": true,
          "example": "356b54eb90cd04566159dfb9c95a0426998a2f7b",
          "excludeFromVersion": true,
          "fieldName": "version",
          "fieldNamePath": "version",
          "typeInfo": {
            "desc": "sha1 hex encoded hash",
            "pattern": "[a-f0-9]{40}",
            "name": "version"
          },
          "filteredBy": [
            "withVersion"
          ],
          "filters": [
            {
              "type": "with",
              "label": "version",
              "fieldNamePath": "version",
              "description": "filter by the supplied version",
              "name": "withVersion",
              "and": true,
              "or": true,
              "valueType": "version"
            }
          ]
        },
        "title": {
          "description": "The title of the category",
          "type": "string",
          "primary": true,
          "example": "Drama",
          "sort": true,
          "fieldName": "title",
          "fieldNamePath": "title",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withTitle"
          ],
          "filters": [
            {
              "type": "with",
              "label": "title",
              "description": "filter by the supplied title",
              "prefix": true,
              "fieldNamePath": "title",
              "name": "withTitle",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ],
          "localisedBy": "localisedTitle",
          "localises": {
            "description": "The localised title of the category",
            "example": {
              "en": "Drama",
              "it": "Drama"
            },
            "type": "string",
            "localisationOf": "title",
            "fieldName": "localisedTitle",
            "fieldNamePath": "localisedTitle",
            "typeInfo": {
              "keys": {
                "values": [
                  "ar",
                  "de",
                  "de-AT",
                  "de-CH",
                  "el",
                  "en",
                  "es",
                  "fa",
                  "fr",
                  "fr-CH",
                  "hi",
                  "hu",
                  "it",
                  "it-CH",
                  "nl",
                  "ru",
                  "tl",
                  "tr",
                  "vi",
                  "zh"
                ],
                "pattern": "(ar)|(de)|(de-AT)|(de-CH)|(el)|(en)|(es)|(fa)|(fr)|(fr-CH)|(hi)|(hu)|(it)|(it-CH)|(nl)|(ru)|(tl)|(tr)|(vi)|(zh)"
              },
              "values": {},
              "desc": "localised strings"
            }
          }
        },
        "localisedTitle": {
          "description": "The localised title of the category",
          "example": {
            "en": "Drama",
            "it": "Drama"
          },
          "type": "string",
          "localisationOf": "title",
          "fieldName": "localisedTitle",
          "fieldNamePath": "localisedTitle",
          "typeInfo": {
            "keys": {
              "values": [
                "ar",
                "de",
                "de-AT",
                "de-CH",
                "el",
                "en",
                "es",
                "fa",
                "fr",
                "fr-CH",
                "hi",
                "hu",
                "it",
                "it-CH",
                "nl",
                "ru",
                "tl",
                "tr",
                "vi",
                "zh"
              ],
              "pattern": "(ar)|(de)|(de-AT)|(de-CH)|(el)|(en)|(es)|(fa)|(fr)|(fr-CH)|(hi)|(hu)|(it)|(it-CH)|(nl)|(ru)|(tl)|(tr)|(vi)|(zh)"
            },
            "values": {},
            "desc": "localised strings"
          }
        },
        "scheme": {
          "description": "The classification scheme of the category such as genres, keyword, tags, brands",
          "type": "string",
          "primary": true,
          "example": "tags",
          "fieldName": "scheme",
          "fieldNamePath": "scheme",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withScheme"
          ],
          "filters": [
            {
              "type": "with",
              "label": "scheme",
              "description": "filter by the supplied scheme",
              "fieldNamePath": "scheme",
              "name": "withScheme",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "value": {
          "description": "The value of the category",
          "type": "string",
          "primary": true,
          "example": "drama",
          "fieldName": "value",
          "fieldNamePath": "value",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          }
        },
        "parentRef": {
          "description": "The reference to the parent category",
          "type": "ref",
          "example": "test:category-1",
          "fieldName": "parentRef",
          "fieldNamePath": "parentRef",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "relatedBy": [
            "parent"
          ],
          "relationships": [
            {
              "description": "The parent category",
              "type": "direct",
              "resourceType": "categories",
              "fieldNamePath": "parentRef",
              "fields": [
                "ref",
                "title",
                "scheme",
                "value",
                "parentRef"
              ],
              "batchSize": 10,
              "name": "parent"
            }
          ],
          "filteredBy": [
            "withParentRef"
          ],
          "filters": [
            {
              "type": "with",
              "label": "parentRef",
              "description": "filter by parent ref",
              "fieldNamePath": "parentRef",
              "name": "withParentRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        }
      },
      "filters": {
        "q": {
          "type": "q",
          "label": "q",
          "description": "filter by text",
          "includes": [
            "title"
          ],
          "name": "q",
          "valueType": "string",
          "text": true
        },
        "withName": {
          "type": "with",
          "label": "name",
          "fieldNamePath": "name",
          "description": "filter by the supplied name",
          "name": "withName",
          "and": true,
          "or": true,
          "valueType": "name"
        },
        "withRef": {
          "type": "with",
          "label": "ref",
          "fieldNamePath": "ref",
          "description": "filter by the supplied ref",
          "name": "withRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withAlternativeIdentifiers": {
          "type": "with",
          "label": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "description": "filter by the supplied alternative identifiers",
          "prefix": true,
          "name": "withAlternativeIdentifiers",
          "and": true,
          "or": true,
          "valueType": "stringMap"
        },
        "withTags": {
          "type": "with",
          "label": "tags",
          "fieldNamePath": "tags",
          "description": "filter by the supplied tags",
          "name": "withTags",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withScore": {
          "type": "with",
          "label": "scores",
          "fieldNamePath": "scores",
          "description": "filter by the supplied score",
          "range": true,
          "name": "withScore",
          "and": true,
          "or": true,
          "valueType": "scores"
        },
        "withCreatedAt": {
          "type": "with",
          "label": "createdAt",
          "fieldNamePath": "createdAt",
          "description": "filter by the supplied createdAt",
          "range": true,
          "name": "withCreatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withCreatedBy": {
          "type": "with",
          "label": "createdBy",
          "fieldNamePath": "createdBy",
          "description": "filter by the supplied createdBy",
          "name": "withCreatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withUpdatedAt": {
          "type": "with",
          "label": "updatedAt",
          "fieldNamePath": "updatedAt",
          "description": "filter by the supplied updatedAt",
          "range": true,
          "name": "withUpdatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withUpdatedBy": {
          "type": "with",
          "label": "updatedBy",
          "fieldNamePath": "updatedBy",
          "description": "filter by the supplied updatedBy",
          "name": "withUpdatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withDeletedAt": {
          "type": "with",
          "label": "deletedAt",
          "fieldNamePath": "deletedAt",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedAt",
          "range": true,
          "name": "withDeletedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withDeletedBy": {
          "type": "with",
          "label": "deletedBy",
          "fieldNamePath": "deletedBy",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedBy",
          "name": "withDeletedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withReapAt": {
          "type": "with",
          "label": "reapAt",
          "fieldNamePath": "reapAt",
          "prohibited": [
            "enduser",
            "service",
            "admin"
          ],
          "description": "filter by the supplied reapAt",
          "range": true,
          "name": "withReapAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withVersion": {
          "type": "with",
          "label": "version",
          "fieldNamePath": "version",
          "description": "filter by the supplied version",
          "name": "withVersion",
          "and": true,
          "or": true,
          "valueType": "version"
        },
        "withParentRef": {
          "type": "with",
          "label": "parentRef",
          "description": "filter by parent ref",
          "fieldNamePath": "parentRef",
          "name": "withParentRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withTitle": {
          "type": "with",
          "label": "title",
          "description": "filter by the supplied title",
          "prefix": true,
          "fieldNamePath": "title",
          "name": "withTitle",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withScheme": {
          "type": "with",
          "label": "scheme",
          "description": "filter by the supplied scheme",
          "fieldNamePath": "scheme",
          "name": "withScheme",
          "and": true,
          "or": true,
          "valueType": "string"
        }
      },
      "restrictions": [
        {
          "type": "ownership",
          "message": "must contain an owner for which you have permission",
          "description": "users can only interact with resources that are owned by a tenant they have access to"
        },
        {
          "type": "unmodifiable",
          "message": "not allowed to modify resources created by root:root",
          "description": "users are not allowed to modify resources that were created by root:root"
        },
        {
          "type": "primaryKey",
          "message": "primaryKey must be unique",
          "description": "the primary key (ref) is derived from owner and name, allowing name to be a tenant specific unique external id"
        },
        {
          "type": "readOnly",
          "userTypes": [
            "enduser"
          ],
          "message": "end user type is not permitted to write to categories",
          "description": "end user type is not permitted to write to categories"
        }
      ],
      "relationships": {
        "contents": {
          "description": "The contents that are referencing this category",
          "type": "indirect",
          "resourceType": "contents",
          "filterName": "withCategoryRefs",
          "fields": [
            "ref",
            "title",
            "parentRef",
            "memberRefs",
            "type"
          ],
          "batchSize": 10,
          "name": "contents"
        },
        "parent": {
          "description": "The parent category",
          "type": "direct",
          "resourceType": "categories",
          "fieldNamePath": "parentRef",
          "fields": [
            "ref",
            "title",
            "scheme",
            "value",
            "parentRef"
          ],
          "batchSize": 10,
          "name": "parent"
        },
        "children": {
          "description": "The associated child categories",
          "type": "indirect",
          "resourceType": "categories",
          "filterName": "withParentRef",
          "fields": [
            "ref",
            "title",
            "scheme",
            "value",
            "parentRef"
          ],
          "batchSize": 10,
          "name": "children"
        }
      },
      "description": "Represents a category of a content",
      "singularName": "category",
      "pluralName": "categories",
      "serviceName": "metadata",
      "hyphenatedPluralName": "categories",
      "displaySingularName": "category",
      "displayPluralName": "categories",
      "retentionPeriod": "P30D",
      "typeInfo": {}
    },
    "channels": {
      "path": "/data",
      "consistency": "eventual",
      "stability": "experimental",
      "displayPriority": 4,
      "operations": {
        "browse": {
          "description": "Fetches a list of channels that may be filtered",
          "actions": [
            "metadata:channels:read",
            "metadata:channels:read:browse"
          ]
        },
        "get": {
          "description": "Fetches one or more channels using the supplied id(s)",
          "actions": [
            "metadata:channels:read",
            "metadata:channels:read:get"
          ]
        },
        "storeBatch": {
          "description": "Stores one or more channels, either creating or wholly replacing",
          "actions": [
            "metadata:channels:write",
            "metadata:channels:write:store",
            "metadata:channels:write:store:batch"
          ],
          "limit": 100
        },
        "storeOne": {
          "description": "Stores the supplied channel with the supplied id, either creating or wholly replacing",
          "actions": [
            "metadata:channels:write",
            "metadata:channels:write:store",
            "metadata:channels:write:store:one"
          ]
        },
        "patch": {
          "enabled": false,
          "description": "Partially updates the existing stored channel with the supplied id",
          "actions": [
            "metadata:channels:write",
            "metadata:channels:write:store",
            "metadata:channels:write:store:patch"
          ]
        },
        "delete": {
          "description": "Delete one or more channels using the supplied id(s)",
          "actions": [
            "metadata:channels:write",
            "metadata:channels:write:delete"
          ]
        }
      },
      "pagination": {
        "pageSize": {
          "min": 1,
          "max": 100,
          "default": 100
        },
        "pages": {
          "max": 1000
        }
      },
      "display": {
        "priority": 4,
        "overview": {
          "label": "title",
          "descriptive": [
            "description"
          ],
          "quickInfo": [
            "number",
            "stationRef"
          ],
          "other": [
            "locationRefs",
            "providerRef"
          ]
        },
        "info": {
          "primary": [
            "ref",
            "owner",
            "name"
          ],
          "secondary": [
            "alternativeIdentifiers",
            "tags",
            "custom"
          ],
          "history": [
            "createdAt",
            "createdBy",
            "updatedAt",
            "updatedBy",
            "deletedAt",
            "deletedBy",
            "reapAt",
            "version"
          ]
        },
        "singularName": "channel",
        "pluralName": "channels"
      },
      "fields": {
        "ref": {
          "description": "The derived owner:name reference",
          "type": "ref",
          "readOnly": true,
          "example": "test:resource-name",
          "fieldName": "ref",
          "fieldNamePath": "ref",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withRef"
          ],
          "filters": [
            {
              "type": "with",
              "label": "ref",
              "fieldNamePath": "ref",
              "description": "filter by the supplied ref",
              "name": "withRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "alternativeIdentifiers": {
          "type": "stringMap",
          "description": "A map of alternative identifiers for this resource",
          "example": {
            "tel": "0800100100",
            "said": "something"
          },
          "fieldName": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "desc": "key-value pairs",
            "name": "stringMap"
          },
          "filteredBy": [
            "withAlternativeIdentifiers"
          ],
          "filters": [
            {
              "type": "with",
              "label": "alternativeIdentifiers",
              "fieldNamePath": "alternativeIdentifiers",
              "description": "filter by the supplied alternative identifiers",
              "prefix": true,
              "name": "withAlternativeIdentifiers",
              "and": true,
              "or": true,
              "valueType": "stringMap"
            }
          ]
        },
        "owner": {
          "description": "The tenant owner name",
          "type": "name",
          "required": true,
          "sort": true,
          "example": "test",
          "fieldName": "owner",
          "fieldNamePath": "owner",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          }
        },
        "name": {
          "description": "The tenant specific unique name",
          "type": "name",
          "sort": true,
          "example": "resource-name",
          "fieldName": "name",
          "fieldNamePath": "name",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          },
          "filteredBy": [
            "withName"
          ],
          "filters": [
            {
              "type": "with",
              "label": "name",
              "fieldNamePath": "name",
              "description": "filter by the supplied name",
              "name": "withName",
              "and": true,
              "or": true,
              "valueType": "name"
            }
          ]
        },
        "tags": {
          "description": "tags for the resource",
          "type": "string",
          "array": true,
          "example": [
            "todo",
            "usage:boxart"
          ],
          "fieldName": "tags",
          "fieldNamePath": "tags",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withTags"
          ],
          "filters": [
            {
              "type": "with",
              "label": "tags",
              "fieldNamePath": "tags",
              "description": "filter by the supplied tags",
              "name": "withTags",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "scores": {
          "description": "scores for the resource",
          "type": "scores",
          "example": {
            "imdb.a3431": 0.9,
            "fuse": 2
          },
          "fieldName": "scores",
          "fieldNamePath": "scores",
          "typeInfo": {
            "keys": {
              "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
            },
            "values": {},
            "desc": "Map of FieldNamePath:Number pairs",
            "name": "scores"
          },
          "filteredBy": [
            "withScore"
          ],
          "filters": [
            {
              "type": "with",
              "label": "scores",
              "fieldNamePath": "scores",
              "description": "filter by the supplied score",
              "range": true,
              "name": "withScore",
              "and": true,
              "or": true,
              "valueType": "scores"
            }
          ]
        },
        "custom": {
          "description": "The tenant specific custom fields.  This may be used to hold tenant specific data alongside the document, but it should not be used as a substitute for normal fields.",
          "type": "map",
          "max": 100,
          "fieldName": "custom",
          "fieldNamePath": "custom",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "values": {},
            "desc": "key-value pairs"
          }
        },
        "createdAt": {
          "description": "The timestamp when created",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "createdAt",
          "fieldNamePath": "createdAt",
          "filteredBy": [
            "withCreatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdAt",
              "fieldNamePath": "createdAt",
              "description": "filter by the supplied createdAt",
              "range": true,
              "name": "withCreatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "createdBy": {
          "description": "The user that created",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "createdBy",
          "fieldNamePath": "createdBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withCreatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdBy",
              "fieldNamePath": "createdBy",
              "description": "filter by the supplied createdBy",
              "name": "withCreatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "updatedAt": {
          "description": "The timestamp when last updated",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "updatedAt",
          "fieldNamePath": "updatedAt",
          "filteredBy": [
            "withUpdatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedAt",
              "fieldNamePath": "updatedAt",
              "description": "filter by the supplied updatedAt",
              "range": true,
              "name": "withUpdatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "updatedBy": {
          "description": "The user that last updated",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "updatedBy",
          "fieldNamePath": "updatedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withUpdatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedBy",
              "fieldNamePath": "updatedBy",
              "description": "filter by the supplied updatedBy",
              "name": "withUpdatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "deletedAt": {
          "description": "The timestamp when deleted (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedAt",
          "fieldNamePath": "deletedAt",
          "filteredBy": [
            "withDeletedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedAt",
              "fieldNamePath": "deletedAt",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedAt",
              "range": true,
              "name": "withDeletedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "deletedBy": {
          "description": "The user that deleted (only applicable to deleted  resources)",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedBy",
          "fieldNamePath": "deletedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withDeletedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedBy",
              "fieldNamePath": "deletedBy",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedBy",
              "name": "withDeletedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "reapAt": {
          "description": "The timestamp for reaping (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "reapAt",
          "fieldNamePath": "reapAt",
          "filteredBy": [
            "withReapAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "reapAt",
              "fieldNamePath": "reapAt",
              "prohibited": [
                "enduser",
                "service",
                "admin"
              ],
              "description": "filter by the supplied reapAt",
              "range": true,
              "name": "withReapAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "version": {
          "description": "The version hash (computed)",
          "type": "version",
          "readOnly": true,
          "example": "356b54eb90cd04566159dfb9c95a0426998a2f7b",
          "excludeFromVersion": true,
          "fieldName": "version",
          "fieldNamePath": "version",
          "typeInfo": {
            "desc": "sha1 hex encoded hash",
            "pattern": "[a-f0-9]{40}",
            "name": "version"
          },
          "filteredBy": [
            "withVersion"
          ],
          "filters": [
            {
              "type": "with",
              "label": "version",
              "fieldNamePath": "version",
              "description": "filter by the supplied version",
              "name": "withVersion",
              "and": true,
              "or": true,
              "valueType": "version"
            }
          ]
        },
        "title": {
          "description": "The title of the channel",
          "type": "string",
          "primary": true,
          "sort": true,
          "example": "BBC1",
          "fieldName": "title",
          "fieldNamePath": "title",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withTitle"
          ],
          "filters": [
            {
              "type": "with",
              "label": "title",
              "description": "filter by the supplied title",
              "prefix": true,
              "fieldNamePath": "title",
              "name": "withTitle",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ],
          "localisedBy": "localisedTitle",
          "localises": {
            "description": "The localised title of the channel",
            "example": {
              "en": "BBC1",
              "it": "BBC1"
            },
            "type": "string",
            "localisationOf": "title",
            "fieldName": "localisedTitle",
            "fieldNamePath": "localisedTitle",
            "typeInfo": {
              "keys": {
                "values": [
                  "ar",
                  "de",
                  "de-AT",
                  "de-CH",
                  "el",
                  "en",
                  "es",
                  "fa",
                  "fr",
                  "fr-CH",
                  "hi",
                  "hu",
                  "it",
                  "it-CH",
                  "nl",
                  "ru",
                  "tl",
                  "tr",
                  "vi",
                  "zh"
                ],
                "pattern": "(ar)|(de)|(de-AT)|(de-CH)|(el)|(en)|(es)|(fa)|(fr)|(fr-CH)|(hi)|(hu)|(it)|(it-CH)|(nl)|(ru)|(tl)|(tr)|(vi)|(zh)"
              },
              "values": {},
              "desc": "localised strings"
            }
          }
        },
        "localisedTitle": {
          "description": "The localised title of the channel",
          "example": {
            "en": "BBC1",
            "it": "BBC1"
          },
          "type": "string",
          "localisationOf": "title",
          "fieldName": "localisedTitle",
          "fieldNamePath": "localisedTitle",
          "typeInfo": {
            "keys": {
              "values": [
                "ar",
                "de",
                "de-AT",
                "de-CH",
                "el",
                "en",
                "es",
                "fa",
                "fr",
                "fr-CH",
                "hi",
                "hu",
                "it",
                "it-CH",
                "nl",
                "ru",
                "tl",
                "tr",
                "vi",
                "zh"
              ],
              "pattern": "(ar)|(de)|(de-AT)|(de-CH)|(el)|(en)|(es)|(fa)|(fr)|(fr-CH)|(hi)|(hu)|(it)|(it-CH)|(nl)|(ru)|(tl)|(tr)|(vi)|(zh)"
            },
            "values": {},
            "desc": "localised strings"
          }
        },
        "description": {
          "description": "The description of the channel",
          "type": "string",
          "example": "The channel description",
          "fieldName": "description",
          "fieldNamePath": "description",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "localisedBy": "localisedDescription",
          "localises": {
            "description": "The localised description of the channel",
            "example": {
              "en": "The channel description",
              "it": "The channel description"
            },
            "type": "string",
            "localisationOf": "description",
            "fieldName": "localisedDescription",
            "fieldNamePath": "localisedDescription",
            "typeInfo": {
              "keys": {
                "values": [
                  "ar",
                  "de",
                  "de-AT",
                  "de-CH",
                  "el",
                  "en",
                  "es",
                  "fa",
                  "fr",
                  "fr-CH",
                  "hi",
                  "hu",
                  "it",
                  "it-CH",
                  "nl",
                  "ru",
                  "tl",
                  "tr",
                  "vi",
                  "zh"
                ],
                "pattern": "(ar)|(de)|(de-AT)|(de-CH)|(el)|(en)|(es)|(fa)|(fr)|(fr-CH)|(hi)|(hu)|(it)|(it-CH)|(nl)|(ru)|(tl)|(tr)|(vi)|(zh)"
              },
              "values": {},
              "desc": "localised strings"
            }
          }
        },
        "localisedDescription": {
          "description": "The localised description of the channel",
          "example": {
            "en": "The channel description",
            "it": "The channel description"
          },
          "type": "string",
          "localisationOf": "description",
          "fieldName": "localisedDescription",
          "fieldNamePath": "localisedDescription",
          "typeInfo": {
            "keys": {
              "values": [
                "ar",
                "de",
                "de-AT",
                "de-CH",
                "el",
                "en",
                "es",
                "fa",
                "fr",
                "fr-CH",
                "hi",
                "hu",
                "it",
                "it-CH",
                "nl",
                "ru",
                "tl",
                "tr",
                "vi",
                "zh"
              ],
              "pattern": "(ar)|(de)|(de-AT)|(de-CH)|(el)|(en)|(es)|(fa)|(fr)|(fr-CH)|(hi)|(hu)|(it)|(it-CH)|(nl)|(ru)|(tl)|(tr)|(vi)|(zh)"
            },
            "values": {},
            "desc": "localised strings"
          }
        },
        "number": {
          "description": "The channel number",
          "type": "nonNegativeInteger",
          "primary": true,
          "example": 101,
          "fieldName": "number",
          "fieldNamePath": "number",
          "typeInfo": {
            "desc": "non-negative integer",
            "pattern": "\\d+",
            "name": "nonNegativeInteger"
          },
          "filteredBy": [
            "withNumber"
          ],
          "filters": [
            {
              "type": "with",
              "label": "number",
              "description": "filter by the supplied number",
              "fieldNamePath": "number",
              "name": "withNumber",
              "and": true,
              "or": true,
              "valueType": "nonNegativeInteger"
            }
          ]
        },
        "stationRef": {
          "description": "the station reference of the channel",
          "type": "ref",
          "primary": true,
          "example": "acme:bbc1",
          "fieldName": "stationRef",
          "fieldNamePath": "stationRef",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "relatedBy": [
            "station"
          ],
          "relationships": [
            {
              "description": "The station related to this channel",
              "type": "direct",
              "resourceType": "contents",
              "fieldNamePath": "stationRef",
              "fields": [
                "ref",
                "title"
              ],
              "batchSize": 10,
              "name": "station"
            }
          ],
          "filteredBy": [
            "withStationRef"
          ],
          "filters": [
            {
              "description": "filter by the supplied stationRef",
              "type": "with",
              "fieldNamePath": "stationRef",
              "label": "stationRef",
              "name": "withStationRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "locationRefs": {
          "description": "The location references of this channel",
          "type": "ref",
          "array": true,
          "example": [
            "test:uk",
            "test:spain"
          ],
          "fieldName": "locationRefs",
          "fieldNamePath": "locationRefs",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "relatedBy": [
            "locations"
          ],
          "relationships": [
            {
              "type": "direct",
              "resourceType": "locations",
              "fieldNamePath": "locationRefs",
              "description": "The locations related to this channel",
              "fields": [
                "ref",
                "title"
              ],
              "batchSize": 10,
              "name": "locations"
            }
          ],
          "filteredBy": [
            "withLocationRefs"
          ],
          "filters": [
            {
              "type": "with",
              "label": "locationRefs",
              "description": "filter by the supplied location refs",
              "fieldNamePath": "locationRefs",
              "name": "withLocationRefs",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "providerRef": {
          "description": "Reference to the provider of this channel",
          "type": "ref",
          "example": "test:in-demand",
          "fieldName": "providerRef",
          "fieldNamePath": "providerRef",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "relatedBy": [
            "provider"
          ],
          "relationships": [
            {
              "description": "The associated provider of the channel",
              "type": "direct",
              "resourceType": "providers",
              "fieldNamePath": "providerRef",
              "fields": [
                "ref",
                "title"
              ],
              "batchSize": 10,
              "name": "provider"
            }
          ],
          "filteredBy": [
            "withProviderRef"
          ],
          "filters": [
            {
              "type": "with",
              "label": "providerRef",
              "description": "filter by the supplied providerRef",
              "fieldNamePath": "providerRef",
              "name": "withProviderRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        }
      },
      "filters": {
        "q": {
          "type": "q",
          "label": "q",
          "description": "filter by text",
          "includes": [
            "title",
            "description"
          ],
          "name": "q",
          "valueType": "string",
          "text": true
        },
        "withName": {
          "type": "with",
          "label": "name",
          "fieldNamePath": "name",
          "description": "filter by the supplied name",
          "name": "withName",
          "and": true,
          "or": true,
          "valueType": "name"
        },
        "withRef": {
          "type": "with",
          "label": "ref",
          "fieldNamePath": "ref",
          "description": "filter by the supplied ref",
          "name": "withRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withAlternativeIdentifiers": {
          "type": "with",
          "label": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "description": "filter by the supplied alternative identifiers",
          "prefix": true,
          "name": "withAlternativeIdentifiers",
          "and": true,
          "or": true,
          "valueType": "stringMap"
        },
        "withTags": {
          "type": "with",
          "label": "tags",
          "fieldNamePath": "tags",
          "description": "filter by the supplied tags",
          "name": "withTags",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withScore": {
          "type": "with",
          "label": "scores",
          "fieldNamePath": "scores",
          "description": "filter by the supplied score",
          "range": true,
          "name": "withScore",
          "and": true,
          "or": true,
          "valueType": "scores"
        },
        "withCreatedAt": {
          "type": "with",
          "label": "createdAt",
          "fieldNamePath": "createdAt",
          "description": "filter by the supplied createdAt",
          "range": true,
          "name": "withCreatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withCreatedBy": {
          "type": "with",
          "label": "createdBy",
          "fieldNamePath": "createdBy",
          "description": "filter by the supplied createdBy",
          "name": "withCreatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withUpdatedAt": {
          "type": "with",
          "label": "updatedAt",
          "fieldNamePath": "updatedAt",
          "description": "filter by the supplied updatedAt",
          "range": true,
          "name": "withUpdatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withUpdatedBy": {
          "type": "with",
          "label": "updatedBy",
          "fieldNamePath": "updatedBy",
          "description": "filter by the supplied updatedBy",
          "name": "withUpdatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withDeletedAt": {
          "type": "with",
          "label": "deletedAt",
          "fieldNamePath": "deletedAt",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedAt",
          "range": true,
          "name": "withDeletedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withDeletedBy": {
          "type": "with",
          "label": "deletedBy",
          "fieldNamePath": "deletedBy",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedBy",
          "name": "withDeletedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withReapAt": {
          "type": "with",
          "label": "reapAt",
          "fieldNamePath": "reapAt",
          "prohibited": [
            "enduser",
            "service",
            "admin"
          ],
          "description": "filter by the supplied reapAt",
          "range": true,
          "name": "withReapAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withVersion": {
          "type": "with",
          "label": "version",
          "fieldNamePath": "version",
          "description": "filter by the supplied version",
          "name": "withVersion",
          "and": true,
          "or": true,
          "valueType": "version"
        },
        "withTitle": {
          "type": "with",
          "label": "title",
          "description": "filter by the supplied title",
          "prefix": true,
          "fieldNamePath": "title",
          "name": "withTitle",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withLocationRefs": {
          "type": "with",
          "label": "locationRefs",
          "description": "filter by the supplied location refs",
          "fieldNamePath": "locationRefs",
          "name": "withLocationRefs",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withNumber": {
          "type": "with",
          "label": "number",
          "description": "filter by the supplied number",
          "fieldNamePath": "number",
          "name": "withNumber",
          "and": true,
          "or": true,
          "valueType": "nonNegativeInteger"
        },
        "withStationRef": {
          "description": "filter by the supplied stationRef",
          "type": "with",
          "fieldNamePath": "stationRef",
          "label": "stationRef",
          "name": "withStationRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withProviderRef": {
          "type": "with",
          "label": "providerRef",
          "description": "filter by the supplied providerRef",
          "fieldNamePath": "providerRef",
          "name": "withProviderRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        }
      },
      "restrictions": [
        {
          "type": "ownership",
          "message": "must contain an owner for which you have permission",
          "description": "users can only interact with resources that are owned by a tenant they have access to"
        },
        {
          "type": "unmodifiable",
          "message": "not allowed to modify resources created by root:root",
          "description": "users are not allowed to modify resources that were created by root:root"
        },
        {
          "type": "primaryKey",
          "message": "primaryKey must be unique",
          "description": "the primary key (ref) is derived from owner and name, allowing name to be a tenant specific unique external id"
        },
        {
          "type": "readOnly",
          "userTypes": [
            "enduser"
          ],
          "message": "end user type is not permitted to write to assets",
          "description": "end user type is not permitted to write to assets"
        }
      ],
      "relationships": {
        "locations": {
          "type": "direct",
          "resourceType": "locations",
          "fieldNamePath": "locationRefs",
          "description": "The locations related to this channel",
          "fields": [
            "ref",
            "title"
          ],
          "batchSize": 10,
          "name": "locations"
        },
        "station": {
          "description": "The station related to this channel",
          "type": "direct",
          "resourceType": "contents",
          "fieldNamePath": "stationRef",
          "fields": [
            "ref",
            "title"
          ],
          "batchSize": 10,
          "name": "station"
        },
        "provider": {
          "description": "The associated provider of the channel",
          "type": "direct",
          "resourceType": "providers",
          "fieldNamePath": "providerRef",
          "fields": [
            "ref",
            "title"
          ],
          "batchSize": 10,
          "name": "provider"
        }
      },
      "description": "Represents a channel of a linear offer",
      "singularName": "channel",
      "serviceName": "metadata",
      "pluralName": "channels",
      "hyphenatedPluralName": "channels",
      "displaySingularName": "channel",
      "displayPluralName": "channels",
      "retentionPeriod": "P30D",
      "typeInfo": {}
    },
    "contents": {
      "path": "/data",
      "consistency": "eventual",
      "stability": "stable",
      "displayPriority": 1,
      "operations": {
        "browse": {
          "description": "Fetches a list of contents that may be filtered",
          "actions": [
            "metadata:contents:read",
            "metadata:contents:read:browse"
          ]
        },
        "get": {
          "description": "Fetches one or more contents using the supplied id(s)",
          "actions": [
            "metadata:contents:read",
            "metadata:contents:read:get"
          ]
        },
        "storeBatch": {
          "description": "Stores one or more contents, either creating or wholly replacing",
          "actions": [
            "metadata:contents:write",
            "metadata:contents:write:store",
            "metadata:contents:write:store:batch"
          ],
          "limit": 100
        },
        "storeOne": {
          "description": "Stores the supplied content with the supplied id, either creating or wholly replacing",
          "actions": [
            "metadata:contents:write",
            "metadata:contents:write:store",
            "metadata:contents:write:store:one"
          ]
        },
        "patch": {
          "enabled": false,
          "description": "Partially updates the existing stored content with the supplied id",
          "actions": [
            "metadata:contents:write",
            "metadata:contents:write:store",
            "metadata:contents:write:store:patch"
          ]
        },
        "delete": {
          "description": "Delete one or more contents using the supplied id(s)",
          "actions": [
            "metadata:contents:write",
            "metadata:contents:write:delete"
          ]
        }
      },
      "pagination": {
        "pageSize": {
          "min": 1,
          "max": 100,
          "default": 100
        },
        "pages": {
          "max": 1000
        }
      },
      "display": {
        "priority": 1,
        "overview": {
          "label": "title",
          "graphical": {
            "relationship": "assets",
            "rules": [
              {
                "type": "image",
                "tags": [
                  "console:primary"
                ]
              },
              {
                "type": "image"
              }
            ],
            "value": "url"
          },
          "quickInfo": [
            "releaseYear",
            "ratings",
            "duration",
            "categoryRefs"
          ],
          "descriptive": [
            "longSynopsis",
            "mediumSynopsis",
            "shortSynopsis"
          ],
          "other": [
            "type",
            "sortTitle",
            "collateCharacter",
            "order",
            "availabilityStartAt",
            "availabilityEndAt",
            "active"
          ]
        },
        "info": {
          "primary": [
            "ref",
            "owner",
            "name"
          ],
          "secondary": [
            "alternativeIdentifiers",
            "tags",
            "custom"
          ],
          "history": [
            "createdAt",
            "createdBy",
            "updatedAt",
            "updatedBy",
            "deletedAt",
            "deletedBy",
            "reapAt",
            "version"
          ]
        },
        "singularName": "content",
        "pluralName": "contents",
        "grouping": "type"
      },
      "fields": {
        "ref": {
          "description": "The derived owner:name reference",
          "type": "ref",
          "readOnly": true,
          "example": "test:resource-name",
          "fieldName": "ref",
          "fieldNamePath": "ref",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withRef"
          ],
          "filters": [
            {
              "type": "with",
              "label": "ref",
              "fieldNamePath": "ref",
              "description": "filter by the supplied ref",
              "name": "withRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "alternativeIdentifiers": {
          "type": "stringMap",
          "description": "A map of alternative identifiers for this resource",
          "example": {
            "tel": "0800100100",
            "said": "something"
          },
          "fieldName": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "desc": "key-value pairs",
            "name": "stringMap"
          },
          "filteredBy": [
            "withAlternativeIdentifiers"
          ],
          "filters": [
            {
              "type": "with",
              "label": "alternativeIdentifiers",
              "fieldNamePath": "alternativeIdentifiers",
              "description": "filter by the supplied alternative identifiers",
              "prefix": true,
              "name": "withAlternativeIdentifiers",
              "and": true,
              "or": true,
              "valueType": "stringMap"
            }
          ]
        },
        "owner": {
          "description": "The tenant owner name",
          "type": "name",
          "required": true,
          "sort": true,
          "example": "test",
          "fieldName": "owner",
          "fieldNamePath": "owner",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          }
        },
        "name": {
          "description": "The tenant specific unique name",
          "type": "name",
          "sort": true,
          "example": "resource-name",
          "fieldName": "name",
          "fieldNamePath": "name",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          },
          "filteredBy": [
            "withName"
          ],
          "filters": [
            {
              "type": "with",
              "label": "name",
              "fieldNamePath": "name",
              "description": "filter by the supplied name",
              "name": "withName",
              "and": true,
              "or": true,
              "valueType": "name"
            }
          ]
        },
        "tags": {
          "description": "tags for the resource",
          "type": "string",
          "array": true,
          "example": [
            "todo",
            "usage:boxart"
          ],
          "fieldName": "tags",
          "fieldNamePath": "tags",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withTags"
          ],
          "filters": [
            {
              "type": "with",
              "label": "tags",
              "fieldNamePath": "tags",
              "description": "filter by the supplied tags",
              "name": "withTags",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "scores": {
          "description": "scores for the resource",
          "type": "scores",
          "example": {
            "imdb.a3431": 0.9,
            "fuse": 2
          },
          "fieldName": "scores",
          "fieldNamePath": "scores",
          "typeInfo": {
            "keys": {
              "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
            },
            "values": {},
            "desc": "Map of FieldNamePath:Number pairs",
            "name": "scores"
          },
          "filteredBy": [
            "withScore"
          ],
          "filters": [
            {
              "type": "with",
              "label": "scores",
              "fieldNamePath": "scores",
              "description": "filter by the supplied score",
              "range": true,
              "name": "withScore",
              "and": true,
              "or": true,
              "valueType": "scores"
            }
          ]
        },
        "custom": {
          "description": "The tenant specific custom fields.  This may be used to hold tenant specific data alongside the document, but it should not be used as a substitute for normal fields.",
          "type": "map",
          "max": 100,
          "fieldName": "custom",
          "fieldNamePath": "custom",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "values": {},
            "desc": "key-value pairs"
          }
        },
        "createdAt": {
          "description": "The timestamp when created",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "createdAt",
          "fieldNamePath": "createdAt",
          "filteredBy": [
            "withCreatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdAt",
              "fieldNamePath": "createdAt",
              "description": "filter by the supplied createdAt",
              "range": true,
              "name": "withCreatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "createdBy": {
          "description": "The user that created",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "createdBy",
          "fieldNamePath": "createdBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withCreatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdBy",
              "fieldNamePath": "createdBy",
              "description": "filter by the supplied createdBy",
              "name": "withCreatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "updatedAt": {
          "description": "The timestamp when last updated",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "updatedAt",
          "fieldNamePath": "updatedAt",
          "filteredBy": [
            "withUpdatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedAt",
              "fieldNamePath": "updatedAt",
              "description": "filter by the supplied updatedAt",
              "range": true,
              "name": "withUpdatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "updatedBy": {
          "description": "The user that last updated",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "updatedBy",
          "fieldNamePath": "updatedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withUpdatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedBy",
              "fieldNamePath": "updatedBy",
              "description": "filter by the supplied updatedBy",
              "name": "withUpdatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "deletedAt": {
          "description": "The timestamp when deleted (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedAt",
          "fieldNamePath": "deletedAt",
          "filteredBy": [
            "withDeletedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedAt",
              "fieldNamePath": "deletedAt",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedAt",
              "range": true,
              "name": "withDeletedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "deletedBy": {
          "description": "The user that deleted (only applicable to deleted  resources)",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedBy",
          "fieldNamePath": "deletedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withDeletedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedBy",
              "fieldNamePath": "deletedBy",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedBy",
              "name": "withDeletedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "reapAt": {
          "description": "The timestamp for reaping (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "reapAt",
          "fieldNamePath": "reapAt",
          "filteredBy": [
            "withReapAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "reapAt",
              "fieldNamePath": "reapAt",
              "prohibited": [
                "enduser",
                "service",
                "admin"
              ],
              "description": "filter by the supplied reapAt",
              "range": true,
              "name": "withReapAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "version": {
          "description": "The version hash (computed)",
          "type": "version",
          "readOnly": true,
          "example": "356b54eb90cd04566159dfb9c95a0426998a2f7b",
          "excludeFromVersion": true,
          "fieldName": "version",
          "fieldNamePath": "version",
          "typeInfo": {
            "desc": "sha1 hex encoded hash",
            "pattern": "[a-f0-9]{40}",
            "name": "version"
          },
          "filteredBy": [
            "withVersion"
          ],
          "filters": [
            {
              "type": "with",
              "label": "version",
              "fieldNamePath": "version",
              "description": "filter by the supplied version",
              "name": "withVersion",
              "and": true,
              "or": true,
              "valueType": "version"
            }
          ]
        },
        "type": {
          "description": "The type of the content",
          "type": "string",
          "required": true,
          "primary": true,
          "countable": true,
          "allowedValues": [
            {
              "value": "show",
              "description": "TV Show",
              "alternatives": [],
              "label": "show"
            },
            {
              "value": "season",
              "description": "TV Season",
              "alternatives": [],
              "label": "season"
            },
            {
              "value": "episode",
              "description": "TV Episode",
              "alternatives": [],
              "label": "episode"
            },
            {
              "value": "movie",
              "description": "Movie",
              "alternatives": [],
              "label": "movie"
            },
            {
              "value": "collection",
              "description": "Collection",
              "alternatives": [],
              "label": "collection"
            },
            {
              "value": "brand",
              "description": "Brand",
              "alternatives": [],
              "label": "brand"
            },
            {
              "value": "version",
              "description": "Version",
              "alternatives": [],
              "label": "version"
            },
            {
              "value": "clip",
              "description": "Clip",
              "alternatives": [],
              "label": "clip"
            },
            {
              "value": "folder",
              "description": "Folder",
              "alternatives": [],
              "label": "folder"
            },
            {
              "value": "station",
              "description": "Station",
              "alternatives": [],
              "label": "station"
            },
            {
              "value": "other",
              "description": "Other",
              "alternatives": [],
              "label": "other"
            }
          ],
          "example": "episode",
          "fieldName": "type",
          "fieldNamePath": "type",
          "allowedValueMappings": {
            "show": "show",
            "season": "season",
            "episode": "episode",
            "movie": "movie",
            "collection": "collection",
            "brand": "brand",
            "version": "version",
            "clip": "clip",
            "folder": "folder",
            "station": "station",
            "other": "other"
          },
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withType"
          ],
          "filters": [
            {
              "type": "with",
              "label": "type",
              "description": "filter by the supplied content type",
              "fieldNamePath": "type",
              "name": "withType",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "title": {
          "description": "The title of the content",
          "type": "string",
          "sort": true,
          "primary": true,
          "example": "Interstellar",
          "fieldName": "title",
          "fieldNamePath": "title",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withTitle"
          ],
          "filters": [
            {
              "type": "with",
              "label": "title",
              "description": "filter by the supplied title",
              "prefix": true,
              "fieldNamePath": "title",
              "name": "withTitle",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ],
          "localisedBy": "localisedTitle",
          "localises": {
            "description": "The localised title of the content",
            "example": {
              "en": "Interstellar",
              "it": "Interstellar",
              "hu": "A csillagok között"
            },
            "type": "string",
            "localisationOf": "title",
            "fieldName": "localisedTitle",
            "fieldNamePath": "localisedTitle",
            "typeInfo": {
              "keys": {
                "values": [
                  "ar",
                  "de",
                  "de-AT",
                  "de-CH",
                  "el",
                  "en",
                  "es",
                  "fa",
                  "fr",
                  "fr-CH",
                  "hi",
                  "hu",
                  "it",
                  "it-CH",
                  "nl",
                  "ru",
                  "tl",
                  "tr",
                  "vi",
                  "zh"
                ],
                "pattern": "(ar)|(de)|(de-AT)|(de-CH)|(el)|(en)|(es)|(fa)|(fr)|(fr-CH)|(hi)|(hu)|(it)|(it-CH)|(nl)|(ru)|(tl)|(tr)|(vi)|(zh)"
              },
              "values": {},
              "desc": "localised strings"
            }
          }
        },
        "localisedTitle": {
          "description": "The localised title of the content",
          "example": {
            "en": "Interstellar",
            "it": "Interstellar",
            "hu": "A csillagok között"
          },
          "type": "string",
          "localisationOf": "title",
          "fieldName": "localisedTitle",
          "fieldNamePath": "localisedTitle",
          "typeInfo": {
            "keys": {
              "values": [
                "ar",
                "de",
                "de-AT",
                "de-CH",
                "el",
                "en",
                "es",
                "fa",
                "fr",
                "fr-CH",
                "hi",
                "hu",
                "it",
                "it-CH",
                "nl",
                "ru",
                "tl",
                "tr",
                "vi",
                "zh"
              ],
              "pattern": "(ar)|(de)|(de-AT)|(de-CH)|(el)|(en)|(es)|(fa)|(fr)|(fr-CH)|(hi)|(hu)|(it)|(it-CH)|(nl)|(ru)|(tl)|(tr)|(vi)|(zh)"
            },
            "values": {},
            "desc": "localised strings"
          }
        },
        "sortTitle": {
          "description": "The title of the content for use in sorting",
          "type": "string",
          "sort": true,
          "example": "Interstellar",
          "fieldName": "sortTitle",
          "fieldNamePath": "sortTitle",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "localisedBy": "localisedSortTitle",
          "localises": {
            "description": "The localised title of the content for use in sorting",
            "example": {
              "en": "Interstellar",
              "it": "Interstellar",
              "hu": "Csillagok között"
            },
            "type": "string",
            "localisationOf": "sortTitle",
            "fieldName": "localisedSortTitle",
            "fieldNamePath": "localisedSortTitle",
            "typeInfo": {
              "keys": {
                "values": [
                  "ar",
                  "de",
                  "de-AT",
                  "de-CH",
                  "el",
                  "en",
                  "es",
                  "fa",
                  "fr",
                  "fr-CH",
                  "hi",
                  "hu",
                  "it",
                  "it-CH",
                  "nl",
                  "ru",
                  "tl",
                  "tr",
                  "vi",
                  "zh"
                ],
                "pattern": "(ar)|(de)|(de-AT)|(de-CH)|(el)|(en)|(es)|(fa)|(fr)|(fr-CH)|(hi)|(hu)|(it)|(it-CH)|(nl)|(ru)|(tl)|(tr)|(vi)|(zh)"
              },
              "values": {},
              "desc": "localised strings"
            }
          }
        },
        "localisedSortTitle": {
          "description": "The localised title of the content for use in sorting",
          "example": {
            "en": "Interstellar",
            "it": "Interstellar",
            "hu": "Csillagok között"
          },
          "type": "string",
          "localisationOf": "sortTitle",
          "fieldName": "localisedSortTitle",
          "fieldNamePath": "localisedSortTitle",
          "typeInfo": {
            "keys": {
              "values": [
                "ar",
                "de",
                "de-AT",
                "de-CH",
                "el",
                "en",
                "es",
                "fa",
                "fr",
                "fr-CH",
                "hi",
                "hu",
                "it",
                "it-CH",
                "nl",
                "ru",
                "tl",
                "tr",
                "vi",
                "zh"
              ],
              "pattern": "(ar)|(de)|(de-AT)|(de-CH)|(el)|(en)|(es)|(fa)|(fr)|(fr-CH)|(hi)|(hu)|(it)|(it-CH)|(nl)|(ru)|(tl)|(tr)|(vi)|(zh)"
            },
            "values": {},
            "desc": "localised strings"
          }
        },
        "collateCharacter": {
          "description": "The character the content is collated by, useful in browse views",
          "type": "string",
          "sort": true,
          "countable": true,
          "example": "I",
          "fieldName": "collateCharacter",
          "fieldNamePath": "collateCharacter",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "localisedBy": "localisedCollateCharacter",
          "localises": {
            "description": "The localised character the content is collated by, useful in browse views",
            "example": {
              "en": "I",
              "it": "I",
              "hu": "Cs"
            },
            "type": "string",
            "localisationOf": "collateCharacter",
            "fieldName": "localisedCollateCharacter",
            "fieldNamePath": "localisedCollateCharacter",
            "typeInfo": {
              "keys": {
                "values": [
                  "ar",
                  "de",
                  "de-AT",
                  "de-CH",
                  "el",
                  "en",
                  "es",
                  "fa",
                  "fr",
                  "fr-CH",
                  "hi",
                  "hu",
                  "it",
                  "it-CH",
                  "nl",
                  "ru",
                  "tl",
                  "tr",
                  "vi",
                  "zh"
                ],
                "pattern": "(ar)|(de)|(de-AT)|(de-CH)|(el)|(en)|(es)|(fa)|(fr)|(fr-CH)|(hi)|(hu)|(it)|(it-CH)|(nl)|(ru)|(tl)|(tr)|(vi)|(zh)"
              },
              "values": {},
              "desc": "localised strings"
            }
          }
        },
        "localisedCollateCharacter": {
          "description": "The localised character the content is collated by, useful in browse views",
          "example": {
            "en": "I",
            "it": "I",
            "hu": "Cs"
          },
          "type": "string",
          "localisationOf": "collateCharacter",
          "fieldName": "localisedCollateCharacter",
          "fieldNamePath": "localisedCollateCharacter",
          "typeInfo": {
            "keys": {
              "values": [
                "ar",
                "de",
                "de-AT",
                "de-CH",
                "el",
                "en",
                "es",
                "fa",
                "fr",
                "fr-CH",
                "hi",
                "hu",
                "it",
                "it-CH",
                "nl",
                "ru",
                "tl",
                "tr",
                "vi",
                "zh"
              ],
              "pattern": "(ar)|(de)|(de-AT)|(de-CH)|(el)|(en)|(es)|(fa)|(fr)|(fr-CH)|(hi)|(hu)|(it)|(it-CH)|(nl)|(ru)|(tl)|(tr)|(vi)|(zh)"
            },
            "values": {},
            "desc": "localised strings"
          }
        },
        "longSynopsis": {
          "description": "The long synopsis of the content",
          "type": "text",
          "example": "The long synopsis of the content",
          "fieldName": "longSynopsis",
          "fieldNamePath": "longSynopsis",
          "typeInfo": {
            "desc": "text",
            "pattern": ".+"
          },
          "localisedBy": "localisedLongSynopsis",
          "localises": {
            "description": "The localised long synopsis of the content",
            "example": {
              "en": "The long synopsis of the content",
              "it": "Sinopsi lunga del contenuto"
            },
            "type": "text",
            "localisationOf": "longSynopsis",
            "fieldName": "localisedLongSynopsis",
            "fieldNamePath": "localisedLongSynopsis",
            "typeInfo": {
              "keys": {
                "values": [
                  "ar",
                  "de",
                  "de-AT",
                  "de-CH",
                  "el",
                  "en",
                  "es",
                  "fa",
                  "fr",
                  "fr-CH",
                  "hi",
                  "hu",
                  "it",
                  "it-CH",
                  "nl",
                  "ru",
                  "tl",
                  "tr",
                  "vi",
                  "zh"
                ],
                "pattern": "(ar)|(de)|(de-AT)|(de-CH)|(el)|(en)|(es)|(fa)|(fr)|(fr-CH)|(hi)|(hu)|(it)|(it-CH)|(nl)|(ru)|(tl)|(tr)|(vi)|(zh)"
              },
              "values": {},
              "desc": "localised strings"
            }
          }
        },
        "localisedLongSynopsis": {
          "description": "The localised long synopsis of the content",
          "example": {
            "en": "The long synopsis of the content",
            "it": "Sinopsi lunga del contenuto"
          },
          "type": "text",
          "localisationOf": "longSynopsis",
          "fieldName": "localisedLongSynopsis",
          "fieldNamePath": "localisedLongSynopsis",
          "typeInfo": {
            "keys": {
              "values": [
                "ar",
                "de",
                "de-AT",
                "de-CH",
                "el",
                "en",
                "es",
                "fa",
                "fr",
                "fr-CH",
                "hi",
                "hu",
                "it",
                "it-CH",
                "nl",
                "ru",
                "tl",
                "tr",
                "vi",
                "zh"
              ],
              "pattern": "(ar)|(de)|(de-AT)|(de-CH)|(el)|(en)|(es)|(fa)|(fr)|(fr-CH)|(hi)|(hu)|(it)|(it-CH)|(nl)|(ru)|(tl)|(tr)|(vi)|(zh)"
            },
            "values": {},
            "desc": "localised strings"
          }
        },
        "mediumSynopsis": {
          "description": "The medium synopsis of the content",
          "type": "text",
          "primary": true,
          "example": "The medium synopsis of the content",
          "fieldName": "mediumSynopsis",
          "fieldNamePath": "mediumSynopsis",
          "typeInfo": {
            "desc": "text",
            "pattern": ".+"
          },
          "localisedBy": "localisedMediumSynopsis",
          "localises": {
            "description": "The localised medium synopsis of the content",
            "example": {
              "en": "The medium synopsis of the content",
              "it": "Sinopsi media del contenuto"
            },
            "type": "text",
            "localisationOf": "mediumSynopsis",
            "fieldName": "localisedMediumSynopsis",
            "fieldNamePath": "localisedMediumSynopsis",
            "typeInfo": {
              "keys": {
                "values": [
                  "ar",
                  "de",
                  "de-AT",
                  "de-CH",
                  "el",
                  "en",
                  "es",
                  "fa",
                  "fr",
                  "fr-CH",
                  "hi",
                  "hu",
                  "it",
                  "it-CH",
                  "nl",
                  "ru",
                  "tl",
                  "tr",
                  "vi",
                  "zh"
                ],
                "pattern": "(ar)|(de)|(de-AT)|(de-CH)|(el)|(en)|(es)|(fa)|(fr)|(fr-CH)|(hi)|(hu)|(it)|(it-CH)|(nl)|(ru)|(tl)|(tr)|(vi)|(zh)"
              },
              "values": {},
              "desc": "localised strings"
            }
          }
        },
        "localisedMediumSynopsis": {
          "description": "The localised medium synopsis of the content",
          "example": {
            "en": "The medium synopsis of the content",
            "it": "Sinopsi media del contenuto"
          },
          "type": "text",
          "localisationOf": "mediumSynopsis",
          "fieldName": "localisedMediumSynopsis",
          "fieldNamePath": "localisedMediumSynopsis",
          "typeInfo": {
            "keys": {
              "values": [
                "ar",
                "de",
                "de-AT",
                "de-CH",
                "el",
                "en",
                "es",
                "fa",
                "fr",
                "fr-CH",
                "hi",
                "hu",
                "it",
                "it-CH",
                "nl",
                "ru",
                "tl",
                "tr",
                "vi",
                "zh"
              ],
              "pattern": "(ar)|(de)|(de-AT)|(de-CH)|(el)|(en)|(es)|(fa)|(fr)|(fr-CH)|(hi)|(hu)|(it)|(it-CH)|(nl)|(ru)|(tl)|(tr)|(vi)|(zh)"
            },
            "values": {},
            "desc": "localised strings"
          }
        },
        "shortSynopsis": {
          "description": "The short synopsis of the content",
          "type": "text",
          "example": "The short synopsis of the content",
          "fieldName": "shortSynopsis",
          "fieldNamePath": "shortSynopsis",
          "typeInfo": {
            "desc": "text",
            "pattern": ".+"
          },
          "localisedBy": "localisedShortSynopsis",
          "localises": {
            "description": "The localised short synopsis of the content",
            "example": {
              "en": "The short synopsis of the content",
              "it": "Sinopsi corta del contenuto"
            },
            "type": "text",
            "localisationOf": "shortSynopsis",
            "fieldName": "localisedShortSynopsis",
            "fieldNamePath": "localisedShortSynopsis",
            "typeInfo": {
              "keys": {
                "values": [
                  "ar",
                  "de",
                  "de-AT",
                  "de-CH",
                  "el",
                  "en",
                  "es",
                  "fa",
                  "fr",
                  "fr-CH",
                  "hi",
                  "hu",
                  "it",
                  "it-CH",
                  "nl",
                  "ru",
                  "tl",
                  "tr",
                  "vi",
                  "zh"
                ],
                "pattern": "(ar)|(de)|(de-AT)|(de-CH)|(el)|(en)|(es)|(fa)|(fr)|(fr-CH)|(hi)|(hu)|(it)|(it-CH)|(nl)|(ru)|(tl)|(tr)|(vi)|(zh)"
              },
              "values": {},
              "desc": "localised strings"
            }
          }
        },
        "localisedShortSynopsis": {
          "description": "The localised short synopsis of the content",
          "example": {
            "en": "The short synopsis of the content",
            "it": "Sinopsi corta del contenuto"
          },
          "type": "text",
          "localisationOf": "shortSynopsis",
          "fieldName": "localisedShortSynopsis",
          "fieldNamePath": "localisedShortSynopsis",
          "typeInfo": {
            "keys": {
              "values": [
                "ar",
                "de",
                "de-AT",
                "de-CH",
                "el",
                "en",
                "es",
                "fa",
                "fr",
                "fr-CH",
                "hi",
                "hu",
                "it",
                "it-CH",
                "nl",
                "ru",
                "tl",
                "tr",
                "vi",
                "zh"
              ],
              "pattern": "(ar)|(de)|(de-AT)|(de-CH)|(el)|(en)|(es)|(fa)|(fr)|(fr-CH)|(hi)|(hu)|(it)|(it-CH)|(nl)|(ru)|(tl)|(tr)|(vi)|(zh)"
            },
            "values": {},
            "desc": "localised strings"
          }
        },
        "order": {
          "description": "Represent the order of the content inside the content hierarchy",
          "type": "nonNegativeInteger",
          "sort": true,
          "example": 2,
          "fieldName": "order",
          "fieldNamePath": "order",
          "typeInfo": {
            "desc": "non-negative integer",
            "pattern": "\\d+",
            "name": "nonNegativeInteger"
          },
          "filteredBy": [
            "withOrder"
          ],
          "filters": [
            {
              "type": "with",
              "label": "order",
              "description": "filter by the supplied order",
              "fieldNamePath": "order",
              "name": "withOrder",
              "and": true,
              "or": true,
              "valueType": "nonNegativeInteger"
            }
          ]
        },
        "numberOfChildren": {
          "description": "Represent the expected number of children inside the content hierarchy",
          "type": "nonNegativeInteger",
          "example": 2,
          "fieldName": "numberOfChildren",
          "fieldNamePath": "numberOfChildren",
          "typeInfo": {
            "desc": "non-negative integer",
            "pattern": "\\d+",
            "name": "nonNegativeInteger"
          }
        },
        "availabilityStartAt": {
          "description": "The availability start date of the content, or if not present available from the start of time",
          "type": "timestamp",
          "primary": true,
          "nonexistent": "low",
          "sort": true,
          "example": "2016-01-01T12:00:00.000Z",
          "fieldName": "availabilityStartAt",
          "fieldNamePath": "availabilityStartAt",
          "filteredBy": [
            "withAvailabilityStartAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "availabilityStartAt",
              "description": "filter by the supplied availability start timestamp",
              "range": true,
              "fieldNamePath": "availabilityStartAt",
              "name": "withAvailabilityStartAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "availabilityEndAt": {
          "description": "The availability end date of the content, or if not present available till the end of time",
          "type": "timestamp",
          "primary": true,
          "nonexistent": "high",
          "sort": true,
          "example": "2016-04-01T12:00:00.000Z",
          "fieldName": "availabilityEndAt",
          "fieldNamePath": "availabilityEndAt",
          "filteredBy": [
            "withAvailabilityEndAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "availabilityEndAt",
              "description": "filter by the supplied availability end timestamp",
              "range": true,
              "fieldNamePath": "availabilityEndAt",
              "name": "withAvailabilityEndAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "releaseYear": {
          "description": "The release year of the content",
          "type": "year",
          "sort": true,
          "example": "2009",
          "fieldName": "releaseYear",
          "fieldNamePath": "releaseYear",
          "typeInfo": {
            "desc": "year",
            "pattern": "(?:\\d{4})",
            "name": "year"
          }
        },
        "firstAiredAt": {
          "description": "When the content was first aired",
          "type": "timestamp",
          "sort": true,
          "example": "2014-04-01T12:00:00.000Z",
          "fieldName": "firstAiredAt",
          "fieldNamePath": "firstAiredAt"
        },
        "duration": {
          "description": "The content duration",
          "type": "duration",
          "primary": true,
          "example": "PT1H30M",
          "fieldName": "duration",
          "fieldNamePath": "duration",
          "typeInfo": {
            "desc": "represents a duration of time expressed as a number of years, months, days, hours, minutes, and seconds",
            "pattern": "-?P(?=[T\\d])(\\d+Y)?(\\d+M)?(\\d+D)?(T(?=\\d)(\\d+H)?(\\d+M)?(\\d+(\\.\\d+)?S)?)?"
          }
        },
        "ratings": {
          "description": "The content ratings",
          "type": "ratings",
          "example": {
            "BBFC": "PG"
          },
          "fieldName": "ratings",
          "fieldNamePath": "ratings",
          "typeInfo": {
            "keys": {
              "values": [
                "BBFC",
                "FPB",
                "MPAA",
                "TVPG",
                "ESRB",
                "PEGI"
              ],
              "pattern": "(BBFC)|(FPB)|(MPAA)|(TVPG)|(ESRB)|(PEGI)"
            },
            "values": {
              "BBFC": {
                "values": [
                  "Uc",
                  "U",
                  "PG",
                  "12A",
                  "12",
                  "15",
                  "18",
                  "R18"
                ],
                "pattern": "(Uc)|(U)|(PG)|(12A)|(12)|(15)|(18)|(R18)"
              },
              "FPB": {
                "values": [
                  "A",
                  "PG",
                  "7-9-PG",
                  "10-12-PG",
                  "13",
                  "16",
                  "18",
                  "X18",
                  "XX"
                ],
                "pattern": "(A)|(PG)|(7-9-PG)|(10-12-PG)|(13)|(16)|(18)|(X18)|(XX)"
              },
              "MPAA": {
                "values": [
                  "G",
                  "PG",
                  "PG-13",
                  "R",
                  "NC-17"
                ],
                "pattern": "(G)|(PG)|(PG-13)|(R)|(NC-17)"
              },
              "TVPG": {
                "values": [
                  "TV-Y",
                  "TV-Y7",
                  "TV-G",
                  "TV-PG",
                  "TV-14",
                  "TV-MA"
                ],
                "pattern": "(TV-Y)|(TV-Y7)|(TV-G)|(TV-PG)|(TV-14)|(TV-MA)"
              },
              "ESRB": {
                "values": [
                  "RP",
                  "EC",
                  "E",
                  "E10+",
                  "T",
                  "M",
                  "AO"
                ],
                "pattern": "(RP)|(EC)|(E)|(E10+)|(T)|(M)|(AO)"
              },
              "PEGI": {
                "values": [
                  "3",
                  "7",
                  "12",
                  "16",
                  "18"
                ],
                "pattern": "(3)|(7)|(12)|(16)|(18)"
              }
            },
            "desc": "rating (schema:level pairs)"
          }
        },
        "active": {
          "description": "Flag to indicate active, default to true",
          "type": "boolean",
          "default": true,
          "example": true,
          "fieldName": "active",
          "fieldNamePath": "active",
          "typeInfo": {
            "desc": "true or false",
            "pattern": "(?:true|false)",
            "name": "boolean"
          },
          "filteredBy": [
            "withActive"
          ],
          "filters": [
            {
              "type": "with",
              "label": "active",
              "description": "filter by the active field",
              "fieldNamePath": "active",
              "name": "withActive",
              "and": true,
              "or": true,
              "valueType": "boolean"
            }
          ]
        },
        "memberRefs": {
          "description": "References to the members that this collection is comprised of",
          "type": "ref",
          "array": true,
          "example": [
            "test:content-1",
            "test:content-2"
          ],
          "fieldName": "memberRefs",
          "fieldNamePath": "memberRefs",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "relatedBy": [
            "members"
          ],
          "relationships": [
            {
              "description": "The associated members",
              "type": "direct",
              "resourceType": "contents",
              "fieldNamePath": "memberRefs",
              "fields": [
                "ref",
                "title",
                "parentRef",
                "type"
              ],
              "batchSize": 10,
              "name": "members"
            }
          ],
          "filteredBy": [
            "withMemberRefs"
          ],
          "filters": [
            {
              "type": "with",
              "label": "memberRefs",
              "description": "filter by the supplied memberRefs",
              "fieldNamePath": "memberRefs",
              "name": "withMemberRefs",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "parentRef": {
          "description": "Reference to the parent that this content belongs to",
          "type": "ref",
          "sort": true,
          "example": "test:content-2",
          "fieldName": "parentRef",
          "fieldNamePath": "parentRef",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "relatedBy": [
            "parent"
          ],
          "relationships": [
            {
              "description": "The associated parent content",
              "type": "direct",
              "resourceType": "contents",
              "fieldNamePath": "parentRef",
              "fields": [
                "ref",
                "title",
                "parentRef",
                "type"
              ],
              "batchSize": 10,
              "name": "parent"
            }
          ],
          "filteredBy": [
            "withParentRef"
          ],
          "filters": [
            {
              "type": "with",
              "label": "parentRef",
              "description": "filter by the supplied parentRef",
              "fieldNamePath": "parentRef",
              "name": "withParentRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "categoryRefs": {
          "description": "Reference to the categories that this content has",
          "type": "ref",
          "array": true,
          "sort": true,
          "example": [
            "test:category-1",
            "test:category-2"
          ],
          "countable": true,
          "fieldName": "categoryRefs",
          "fieldNamePath": "categoryRefs",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "relatedBy": [
            "categories"
          ],
          "relationships": [
            {
              "description": "The associated categories",
              "type": "direct",
              "resourceType": "categories",
              "fieldNamePath": "categoryRefs",
              "fields": [
                "ref",
                "title",
                "parentRef",
                "scheme",
                "value"
              ],
              "name": "categories",
              "batchSize": 10
            }
          ],
          "filteredBy": [
            "withCategoryRefs"
          ],
          "filters": [
            {
              "type": "with",
              "label": "categoryRefs",
              "description": "filter by the supplied categoryRefs",
              "fieldNamePath": "categoryRefs",
              "name": "withCategoryRefs",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "providerRef": {
          "description": "Reference to the provider of this content",
          "type": "ref",
          "example": "test:in-demand",
          "countable": true,
          "fieldName": "providerRef",
          "fieldNamePath": "providerRef",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "relatedBy": [
            "provider"
          ],
          "relationships": [
            {
              "description": "The associated provider of the content",
              "type": "direct",
              "resourceType": "providers",
              "fieldNamePath": "providerRef",
              "fields": [
                "ref",
                "title"
              ],
              "batchSize": 10,
              "name": "provider"
            }
          ],
          "filteredBy": [
            "withProviderRef"
          ],
          "filters": [
            {
              "type": "with",
              "label": "providerRef",
              "description": "filter by the supplied providerRef",
              "fieldNamePath": "providerRef",
              "name": "withProviderRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        }
      },
      "filters": {
        "q": {
          "type": "q",
          "label": "q",
          "description": "filter by text",
          "includes": [
            "title",
            "longSynopsis"
          ],
          "name": "q",
          "valueType": "string",
          "text": true
        },
        "withName": {
          "type": "with",
          "label": "name",
          "fieldNamePath": "name",
          "description": "filter by the supplied name",
          "name": "withName",
          "and": true,
          "or": true,
          "valueType": "name"
        },
        "withRef": {
          "type": "with",
          "label": "ref",
          "fieldNamePath": "ref",
          "description": "filter by the supplied ref",
          "name": "withRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withAlternativeIdentifiers": {
          "type": "with",
          "label": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "description": "filter by the supplied alternative identifiers",
          "prefix": true,
          "name": "withAlternativeIdentifiers",
          "and": true,
          "or": true,
          "valueType": "stringMap"
        },
        "withTags": {
          "type": "with",
          "label": "tags",
          "fieldNamePath": "tags",
          "description": "filter by the supplied tags",
          "name": "withTags",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withScore": {
          "type": "with",
          "label": "scores",
          "fieldNamePath": "scores",
          "description": "filter by the supplied score",
          "range": true,
          "name": "withScore",
          "and": true,
          "or": true,
          "valueType": "scores"
        },
        "withCreatedAt": {
          "type": "with",
          "label": "createdAt",
          "fieldNamePath": "createdAt",
          "description": "filter by the supplied createdAt",
          "range": true,
          "name": "withCreatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withCreatedBy": {
          "type": "with",
          "label": "createdBy",
          "fieldNamePath": "createdBy",
          "description": "filter by the supplied createdBy",
          "name": "withCreatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withUpdatedAt": {
          "type": "with",
          "label": "updatedAt",
          "fieldNamePath": "updatedAt",
          "description": "filter by the supplied updatedAt",
          "range": true,
          "name": "withUpdatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withUpdatedBy": {
          "type": "with",
          "label": "updatedBy",
          "fieldNamePath": "updatedBy",
          "description": "filter by the supplied updatedBy",
          "name": "withUpdatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withDeletedAt": {
          "type": "with",
          "label": "deletedAt",
          "fieldNamePath": "deletedAt",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedAt",
          "range": true,
          "name": "withDeletedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withDeletedBy": {
          "type": "with",
          "label": "deletedBy",
          "fieldNamePath": "deletedBy",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedBy",
          "name": "withDeletedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withReapAt": {
          "type": "with",
          "label": "reapAt",
          "fieldNamePath": "reapAt",
          "prohibited": [
            "enduser",
            "service",
            "admin"
          ],
          "description": "filter by the supplied reapAt",
          "range": true,
          "name": "withReapAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withVersion": {
          "type": "with",
          "label": "version",
          "fieldNamePath": "version",
          "description": "filter by the supplied version",
          "name": "withVersion",
          "and": true,
          "or": true,
          "valueType": "version"
        },
        "withType": {
          "type": "with",
          "label": "type",
          "description": "filter by the supplied content type",
          "fieldNamePath": "type",
          "name": "withType",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withTitle": {
          "type": "with",
          "label": "title",
          "description": "filter by the supplied title",
          "prefix": true,
          "fieldNamePath": "title",
          "name": "withTitle",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withOrder": {
          "type": "with",
          "label": "order",
          "description": "filter by the supplied order",
          "fieldNamePath": "order",
          "name": "withOrder",
          "and": true,
          "or": true,
          "valueType": "nonNegativeInteger"
        },
        "withAvailabilityStartAt": {
          "type": "with",
          "label": "availabilityStartAt",
          "description": "filter by the supplied availability start timestamp",
          "range": true,
          "fieldNamePath": "availabilityStartAt",
          "name": "withAvailabilityStartAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withAvailabilityEndAt": {
          "type": "with",
          "label": "availabilityEndAt",
          "description": "filter by the supplied availability end timestamp",
          "range": true,
          "fieldNamePath": "availabilityEndAt",
          "name": "withAvailabilityEndAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withParentRef": {
          "type": "with",
          "label": "parentRef",
          "description": "filter by the supplied parentRef",
          "fieldNamePath": "parentRef",
          "name": "withParentRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withCategoryRefs": {
          "type": "with",
          "label": "categoryRefs",
          "description": "filter by the supplied categoryRefs",
          "fieldNamePath": "categoryRefs",
          "name": "withCategoryRefs",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withActive": {
          "type": "with",
          "label": "active",
          "description": "filter by the active field",
          "fieldNamePath": "active",
          "name": "withActive",
          "and": true,
          "or": true,
          "valueType": "boolean"
        },
        "withProviderRef": {
          "type": "with",
          "label": "providerRef",
          "description": "filter by the supplied providerRef",
          "fieldNamePath": "providerRef",
          "name": "withProviderRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withMemberRefs": {
          "type": "with",
          "label": "memberRefs",
          "description": "filter by the supplied memberRefs",
          "fieldNamePath": "memberRefs",
          "name": "withMemberRefs",
          "and": true,
          "or": true,
          "valueType": "ref"
        }
      },
      "restrictions": [
        {
          "type": "ownership",
          "message": "must contain an owner for which you have permission",
          "description": "users can only interact with resources that are owned by a tenant they have access to"
        },
        {
          "type": "unmodifiable",
          "message": "not allowed to modify resources created by root:root",
          "description": "users are not allowed to modify resources that were created by root:root"
        },
        {
          "type": "primaryKey",
          "message": "primaryKey must be unique",
          "description": "the primary key (ref) is derived from owner and name, allowing name to be a tenant specific unique external id"
        },
        {
          "type": "readOnly",
          "userTypes": [
            "enduser"
          ],
          "message": "end user type is not permitted to write to contents",
          "description": "end user type is not permitted to write to contents"
        }
      ],
      "relationships": {
        "parent": {
          "description": "The associated parent content",
          "type": "direct",
          "resourceType": "contents",
          "fieldNamePath": "parentRef",
          "fields": [
            "ref",
            "title",
            "parentRef",
            "type"
          ],
          "batchSize": 10,
          "name": "parent"
        },
        "children": {
          "description": "The associated child contents",
          "type": "indirect",
          "resourceType": "contents",
          "filterName": "withParentRef",
          "fields": [
            "ref",
            "title",
            "parentRef",
            "type"
          ],
          "batchSize": 10,
          "name": "children"
        },
        "assets": {
          "description": "The associated assets",
          "type": "indirect",
          "resourceType": "assets",
          "filterName": "withContentRef",
          "fields": [
            "ref",
            "name",
            "contentRef",
            "type",
            "url",
            "fileFormat",
            "title",
            "fileSize",
            "tags"
          ],
          "batchSize": 10,
          "name": "assets"
        },
        "categories": {
          "description": "The associated categories",
          "type": "direct",
          "resourceType": "categories",
          "fieldNamePath": "categoryRefs",
          "fields": [
            "ref",
            "title",
            "parentRef",
            "scheme",
            "value"
          ],
          "name": "categories",
          "batchSize": 10
        },
        "credits": {
          "description": "The associated credits",
          "type": "indirect",
          "resourceType": "credits",
          "filterName": "withContentRef",
          "fields": [
            "ref",
            "characterName",
            "order",
            "personRef",
            "roleRef",
            "contentRef"
          ],
          "batchSize": 10,
          "name": "credits"
        },
        "collections": {
          "description": "The associated collections",
          "type": "indirect",
          "resourceType": "contents",
          "filterName": "withMemberRefs",
          "fields": [
            "ref",
            "title",
            "parentRef",
            "type"
          ],
          "batchSize": 10,
          "name": "collections"
        },
        "channels": {
          "description": "The associated channels",
          "type": "indirect",
          "resourceType": "channels",
          "filterName": "withStationRef",
          "fields": [
            "ref",
            "title",
            "locationRefs",
            "providerRef"
          ],
          "batchSize": 10,
          "name": "channels"
        },
        "members": {
          "description": "The associated members",
          "type": "direct",
          "resourceType": "contents",
          "fieldNamePath": "memberRefs",
          "fields": [
            "ref",
            "title",
            "parentRef",
            "type"
          ],
          "batchSize": 10,
          "name": "members"
        },
        "provider": {
          "description": "The associated provider of the content",
          "type": "direct",
          "resourceType": "providers",
          "fieldNamePath": "providerRef",
          "fields": [
            "ref",
            "title"
          ],
          "batchSize": 10,
          "name": "provider"
        },
        "segments": {
          "description": "The associated segments",
          "type": "indirect",
          "resourceType": "segments",
          "filterName": "withContentRef",
          "fields": [
            "ref",
            "title",
            "type",
            "startOffset",
            "endOffset"
          ],
          "batchSize": 10,
          "name": "segments"
        },
        "offers": {
          "description": "The offers that are referencing this content either as the description or scope of the offer",
          "type": "indirect",
          "resourceType": "offers",
          "filterName": "withContentRefs",
          "fields": [
            "ref",
            "title",
            "type"
          ],
          "batchSize": 10,
          "name": "offers"
        },
        "descriptiveOffers": {
          "description": "The offers that are referencing this content as the description of the offer",
          "type": "indirect",
          "resourceType": "offers",
          "filterName": "withDescriptiveContentRef",
          "fields": [
            "ref",
            "title",
            "type"
          ],
          "batchSize": 10,
          "name": "descriptiveOffers"
        },
        "scopeOffers": {
          "description": "The offers that are referencing this content as the scope of the offer",
          "type": "indirect",
          "resourceType": "offers",
          "filterName": "withScopeContentRefs",
          "fields": [
            "ref",
            "title",
            "type"
          ],
          "batchSize": 10,
          "name": "scopeOffers"
        },
        "awards": {
          "description": "The awards that are referencing this content",
          "type": "indirect",
          "resourceType": "awards",
          "filterName": "withContentRef",
          "fields": [
            "ref",
            "title"
          ],
          "batchSize": 10,
          "name": "awards"
        }
      },
      "description": "Represents a piece of content",
      "singularName": "content",
      "serviceName": "metadata",
      "parameterisedBy": "type",
      "pluralName": "contents",
      "hyphenatedPluralName": "contents",
      "displaySingularName": "content",
      "displayPluralName": "contents",
      "retentionPeriod": "P30D",
      "typeInfo": {}
    },
    "credits": {
      "path": "/data",
      "consistency": "eventual",
      "stability": "stable",
      "displayPriority": 4,
      "operations": {
        "browse": {
          "description": "Fetches a list of credits that may be filtered",
          "actions": [
            "metadata:credits:read",
            "metadata:credits:read:browse"
          ]
        },
        "get": {
          "description": "Fetches one or more credits using the supplied id(s)",
          "actions": [
            "metadata:credits:read",
            "metadata:credits:read:get"
          ]
        },
        "storeBatch": {
          "description": "Stores one or more credits, either creating or wholly replacing",
          "actions": [
            "metadata:credits:write",
            "metadata:credits:write:store",
            "metadata:credits:write:store:batch"
          ],
          "limit": 100
        },
        "storeOne": {
          "description": "Stores the supplied credit with the supplied id, either creating or wholly replacing",
          "actions": [
            "metadata:credits:write",
            "metadata:credits:write:store",
            "metadata:credits:write:store:one"
          ]
        },
        "patch": {
          "enabled": false,
          "description": "Partially updates the existing stored credit with the supplied id",
          "actions": [
            "metadata:credits:write",
            "metadata:credits:write:store",
            "metadata:credits:write:store:patch"
          ]
        },
        "delete": {
          "description": "Delete one or more credits using the supplied id(s)",
          "actions": [
            "metadata:credits:write",
            "metadata:credits:write:delete"
          ]
        }
      },
      "pagination": {
        "pageSize": {
          "min": 1,
          "max": 100,
          "default": 100
        },
        "pages": {
          "max": 1000
        }
      },
      "display": {
        "priority": 4,
        "overview": {
          "label": "characterName",
          "other": [
            "order",
            "personRef",
            "roleRef",
            "contentRef"
          ]
        },
        "info": {
          "primary": [
            "ref",
            "owner",
            "name"
          ],
          "secondary": [
            "alternativeIdentifiers",
            "tags",
            "custom"
          ],
          "history": [
            "createdAt",
            "createdBy",
            "updatedAt",
            "updatedBy",
            "deletedAt",
            "deletedBy",
            "reapAt",
            "version"
          ]
        },
        "singularName": "credit",
        "pluralName": "credits"
      },
      "fields": {
        "ref": {
          "description": "The derived owner:name reference",
          "type": "ref",
          "readOnly": true,
          "example": "test:resource-name",
          "fieldName": "ref",
          "fieldNamePath": "ref",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withRef"
          ],
          "filters": [
            {
              "type": "with",
              "label": "ref",
              "fieldNamePath": "ref",
              "description": "filter by the supplied ref",
              "name": "withRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "alternativeIdentifiers": {
          "type": "stringMap",
          "description": "A map of alternative identifiers for this resource",
          "example": {
            "tel": "0800100100",
            "said": "something"
          },
          "fieldName": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "desc": "key-value pairs",
            "name": "stringMap"
          },
          "filteredBy": [
            "withAlternativeIdentifiers"
          ],
          "filters": [
            {
              "type": "with",
              "label": "alternativeIdentifiers",
              "fieldNamePath": "alternativeIdentifiers",
              "description": "filter by the supplied alternative identifiers",
              "prefix": true,
              "name": "withAlternativeIdentifiers",
              "and": true,
              "or": true,
              "valueType": "stringMap"
            }
          ]
        },
        "owner": {
          "description": "The tenant owner name",
          "type": "name",
          "required": true,
          "sort": true,
          "example": "test",
          "fieldName": "owner",
          "fieldNamePath": "owner",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          }
        },
        "name": {
          "description": "The tenant specific unique name",
          "type": "name",
          "sort": true,
          "example": "resource-name",
          "fieldName": "name",
          "fieldNamePath": "name",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          },
          "filteredBy": [
            "withName"
          ],
          "filters": [
            {
              "type": "with",
              "label": "name",
              "fieldNamePath": "name",
              "description": "filter by the supplied name",
              "name": "withName",
              "and": true,
              "or": true,
              "valueType": "name"
            }
          ]
        },
        "tags": {
          "description": "tags for the resource",
          "type": "string",
          "array": true,
          "example": [
            "todo",
            "usage:boxart"
          ],
          "fieldName": "tags",
          "fieldNamePath": "tags",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withTags"
          ],
          "filters": [
            {
              "type": "with",
              "label": "tags",
              "fieldNamePath": "tags",
              "description": "filter by the supplied tags",
              "name": "withTags",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "scores": {
          "description": "scores for the resource",
          "type": "scores",
          "example": {
            "imdb.a3431": 0.9,
            "fuse": 2
          },
          "fieldName": "scores",
          "fieldNamePath": "scores",
          "typeInfo": {
            "keys": {
              "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
            },
            "values": {},
            "desc": "Map of FieldNamePath:Number pairs",
            "name": "scores"
          },
          "filteredBy": [
            "withScore"
          ],
          "filters": [
            {
              "type": "with",
              "label": "scores",
              "fieldNamePath": "scores",
              "description": "filter by the supplied score",
              "range": true,
              "name": "withScore",
              "and": true,
              "or": true,
              "valueType": "scores"
            }
          ]
        },
        "custom": {
          "description": "The tenant specific custom fields.  This may be used to hold tenant specific data alongside the document, but it should not be used as a substitute for normal fields.",
          "type": "map",
          "max": 100,
          "fieldName": "custom",
          "fieldNamePath": "custom",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "values": {},
            "desc": "key-value pairs"
          }
        },
        "createdAt": {
          "description": "The timestamp when created",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "createdAt",
          "fieldNamePath": "createdAt",
          "filteredBy": [
            "withCreatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdAt",
              "fieldNamePath": "createdAt",
              "description": "filter by the supplied createdAt",
              "range": true,
              "name": "withCreatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "createdBy": {
          "description": "The user that created",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "createdBy",
          "fieldNamePath": "createdBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withCreatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdBy",
              "fieldNamePath": "createdBy",
              "description": "filter by the supplied createdBy",
              "name": "withCreatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "updatedAt": {
          "description": "The timestamp when last updated",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "updatedAt",
          "fieldNamePath": "updatedAt",
          "filteredBy": [
            "withUpdatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedAt",
              "fieldNamePath": "updatedAt",
              "description": "filter by the supplied updatedAt",
              "range": true,
              "name": "withUpdatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "updatedBy": {
          "description": "The user that last updated",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "updatedBy",
          "fieldNamePath": "updatedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withUpdatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedBy",
              "fieldNamePath": "updatedBy",
              "description": "filter by the supplied updatedBy",
              "name": "withUpdatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "deletedAt": {
          "description": "The timestamp when deleted (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedAt",
          "fieldNamePath": "deletedAt",
          "filteredBy": [
            "withDeletedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedAt",
              "fieldNamePath": "deletedAt",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedAt",
              "range": true,
              "name": "withDeletedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "deletedBy": {
          "description": "The user that deleted (only applicable to deleted  resources)",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedBy",
          "fieldNamePath": "deletedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withDeletedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedBy",
              "fieldNamePath": "deletedBy",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedBy",
              "name": "withDeletedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "reapAt": {
          "description": "The timestamp for reaping (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "reapAt",
          "fieldNamePath": "reapAt",
          "filteredBy": [
            "withReapAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "reapAt",
              "fieldNamePath": "reapAt",
              "prohibited": [
                "enduser",
                "service",
                "admin"
              ],
              "description": "filter by the supplied reapAt",
              "range": true,
              "name": "withReapAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "version": {
          "description": "The version hash (computed)",
          "type": "version",
          "readOnly": true,
          "example": "356b54eb90cd04566159dfb9c95a0426998a2f7b",
          "excludeFromVersion": true,
          "fieldName": "version",
          "fieldNamePath": "version",
          "typeInfo": {
            "desc": "sha1 hex encoded hash",
            "pattern": "[a-f0-9]{40}",
            "name": "version"
          },
          "filteredBy": [
            "withVersion"
          ],
          "filters": [
            {
              "type": "with",
              "label": "version",
              "fieldNamePath": "version",
              "description": "filter by the supplied version",
              "name": "withVersion",
              "and": true,
              "or": true,
              "valueType": "version"
            }
          ]
        },
        "characterName": {
          "description": "The character name of the credit in the content",
          "type": "string",
          "primary": true,
          "example": "Wolverine",
          "fieldName": "characterName",
          "fieldNamePath": "characterName",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withCharacterName"
          ],
          "filters": [
            {
              "type": "with",
              "label": "characterName",
              "description": "filter by the supplied character name",
              "fieldNamePath": "characterName",
              "name": "withCharacterName",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "order": {
          "description": "Represent the order of the credit, to support concepts such as \"in order of appearance\"",
          "type": "nonNegativeInteger",
          "sort": true,
          "primary": true,
          "example": 2,
          "fieldName": "order",
          "fieldNamePath": "order",
          "typeInfo": {
            "desc": "non-negative integer",
            "pattern": "\\d+",
            "name": "nonNegativeInteger"
          }
        },
        "personRef": {
          "description": "Reference to the person that this credit belongs to",
          "type": "ref",
          "required": true,
          "primary": true,
          "example": "test:person-1",
          "fieldName": "personRef",
          "fieldNamePath": "personRef",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "relatedBy": [
            "person"
          ],
          "relationships": [
            {
              "type": "direct",
              "description": "The associated person",
              "resourceType": "people",
              "fieldNamePath": "personRef",
              "fields": [
                "ref",
                "fullName"
              ],
              "batchSize": 10,
              "name": "person"
            }
          ],
          "filteredBy": [
            "withPersonRef"
          ],
          "filters": [
            {
              "type": "with",
              "label": "personRef",
              "description": "filter by the supplied person ref",
              "fieldNamePath": "personRef",
              "name": "withPersonRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "roleRef": {
          "description": "The reference to the role of the credit",
          "required": true,
          "type": "ref",
          "primary": true,
          "example": "test:actor",
          "fieldName": "roleRef",
          "fieldNamePath": "roleRef",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "relatedBy": [
            "role"
          ],
          "relationships": [
            {
              "type": "direct",
              "description": "The associated role",
              "resourceType": "roles",
              "fieldNamePath": "roleRef",
              "fields": [
                "ref",
                "title"
              ],
              "batchSize": 10,
              "name": "role"
            }
          ],
          "filteredBy": [
            "withRoleRef"
          ],
          "filters": [
            {
              "type": "with",
              "label": "roleRef",
              "description": "filter by the supplied role ref",
              "fieldNamePath": "roleRef",
              "name": "withRoleRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "contentRef": {
          "description": "Reference to the content that this credit belongs to",
          "type": "ref",
          "required": true,
          "primary": true,
          "example": "test:content-1",
          "fieldName": "contentRef",
          "fieldNamePath": "contentRef",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "relatedBy": [
            "content"
          ],
          "relationships": [
            {
              "type": "direct",
              "description": "The associated content",
              "resourceType": "contents",
              "fieldNamePath": "contentRef",
              "fields": [
                "ref",
                "title",
                "parentRef",
                "type"
              ],
              "batchSize": 10,
              "name": "content"
            }
          ],
          "filteredBy": [
            "withContentRef"
          ],
          "filters": [
            {
              "type": "with",
              "label": "contentRef",
              "description": "filter by the supplied content ref",
              "fieldNamePath": "contentRef",
              "name": "withContentRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        }
      },
      "filters": {
        "q": {
          "type": "q",
          "label": "q",
          "description": "filter by text",
          "includes": [
            "characterName"
          ],
          "name": "q",
          "valueType": "string",
          "text": true
        },
        "withName": {
          "type": "with",
          "label": "name",
          "fieldNamePath": "name",
          "description": "filter by the supplied name",
          "name": "withName",
          "and": true,
          "or": true,
          "valueType": "name"
        },
        "withRef": {
          "type": "with",
          "label": "ref",
          "fieldNamePath": "ref",
          "description": "filter by the supplied ref",
          "name": "withRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withAlternativeIdentifiers": {
          "type": "with",
          "label": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "description": "filter by the supplied alternative identifiers",
          "prefix": true,
          "name": "withAlternativeIdentifiers",
          "and": true,
          "or": true,
          "valueType": "stringMap"
        },
        "withTags": {
          "type": "with",
          "label": "tags",
          "fieldNamePath": "tags",
          "description": "filter by the supplied tags",
          "name": "withTags",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withScore": {
          "type": "with",
          "label": "scores",
          "fieldNamePath": "scores",
          "description": "filter by the supplied score",
          "range": true,
          "name": "withScore",
          "and": true,
          "or": true,
          "valueType": "scores"
        },
        "withCreatedAt": {
          "type": "with",
          "label": "createdAt",
          "fieldNamePath": "createdAt",
          "description": "filter by the supplied createdAt",
          "range": true,
          "name": "withCreatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withCreatedBy": {
          "type": "with",
          "label": "createdBy",
          "fieldNamePath": "createdBy",
          "description": "filter by the supplied createdBy",
          "name": "withCreatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withUpdatedAt": {
          "type": "with",
          "label": "updatedAt",
          "fieldNamePath": "updatedAt",
          "description": "filter by the supplied updatedAt",
          "range": true,
          "name": "withUpdatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withUpdatedBy": {
          "type": "with",
          "label": "updatedBy",
          "fieldNamePath": "updatedBy",
          "description": "filter by the supplied updatedBy",
          "name": "withUpdatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withDeletedAt": {
          "type": "with",
          "label": "deletedAt",
          "fieldNamePath": "deletedAt",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedAt",
          "range": true,
          "name": "withDeletedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withDeletedBy": {
          "type": "with",
          "label": "deletedBy",
          "fieldNamePath": "deletedBy",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedBy",
          "name": "withDeletedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withReapAt": {
          "type": "with",
          "label": "reapAt",
          "fieldNamePath": "reapAt",
          "prohibited": [
            "enduser",
            "service",
            "admin"
          ],
          "description": "filter by the supplied reapAt",
          "range": true,
          "name": "withReapAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withVersion": {
          "type": "with",
          "label": "version",
          "fieldNamePath": "version",
          "description": "filter by the supplied version",
          "name": "withVersion",
          "and": true,
          "or": true,
          "valueType": "version"
        },
        "withCharacterName": {
          "type": "with",
          "label": "characterName",
          "description": "filter by the supplied character name",
          "fieldNamePath": "characterName",
          "name": "withCharacterName",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withContentRef": {
          "type": "with",
          "label": "contentRef",
          "description": "filter by the supplied content ref",
          "fieldNamePath": "contentRef",
          "name": "withContentRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withRoleRef": {
          "type": "with",
          "label": "roleRef",
          "description": "filter by the supplied role ref",
          "fieldNamePath": "roleRef",
          "name": "withRoleRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withPersonRef": {
          "type": "with",
          "label": "personRef",
          "description": "filter by the supplied person ref",
          "fieldNamePath": "personRef",
          "name": "withPersonRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        }
      },
      "restrictions": [
        {
          "type": "ownership",
          "message": "must contain an owner for which you have permission",
          "description": "users can only interact with resources that are owned by a tenant they have access to"
        },
        {
          "type": "unmodifiable",
          "message": "not allowed to modify resources created by root:root",
          "description": "users are not allowed to modify resources that were created by root:root"
        },
        {
          "type": "primaryKey",
          "message": "primaryKey must be unique",
          "description": "the primary key (ref) is derived from owner and name, allowing name to be a tenant specific unique external id"
        },
        {
          "type": "readOnly",
          "userTypes": [
            "enduser"
          ],
          "message": "end user type is not permitted to write to assets",
          "description": "end user type is not permitted to write to assets"
        }
      ],
      "relationships": {
        "content": {
          "type": "direct",
          "description": "The associated content",
          "resourceType": "contents",
          "fieldNamePath": "contentRef",
          "fields": [
            "ref",
            "title",
            "parentRef",
            "type"
          ],
          "batchSize": 10,
          "name": "content",
          "intersectable": false
        },
        "person": {
          "type": "direct",
          "description": "The associated person",
          "resourceType": "people",
          "fieldNamePath": "personRef",
          "fields": [
            "ref",
            "fullName"
          ],
          "batchSize": 10,
          "name": "person",
          "intersectable": false
        },
        "role": {
          "type": "direct",
          "description": "The associated role",
          "resourceType": "roles",
          "fieldNamePath": "roleRef",
          "fields": [
            "ref",
            "title"
          ],
          "batchSize": 10,
          "name": "role",
          "intersectable": false
        },
        "character": {
          "description": "The associated characters",
          "type": "direct",
          "resourceType": "characters",
          "fieldNamePath": "characterRef",
          "fields": [
            "ref",
            "title",
            "type"
          ],
          "name": "character",
          "intersectable": false,
          "batchSize": 10
        },
        "relatedMaterials": {
          "type": "direct",
          "description": "The associated content folder containing materials related to this Credit",
          "resourceType": "contents",
          "fieldNamePath": "relatedMaterialRefs",
          "fields": [
            "ref",
            "title",
            "parentRef",
            "memberRefs",
            "type"
          ],
          "batchSize": 10,
          "name": "relatedMaterials",
          "intersectable": false
        },
        "relatedMaterials.assets": {
          "type": "indirect",
          "description": "The associated assets through associated folders containing materials related to the Credit",
          "through": "relatedMaterials",
          "resourceType": "assets",
          "filterName": "withContentRef",
          "fields": [
            "ref",
            "name",
            "contentRef",
            "type",
            "url",
            "fileFormat",
            "title",
            "fileSize",
            "tags"
          ],
          "batchSize": 10,
          "name": "relatedMaterials.assets",
          "intersectable": false
        }
      },
      "description": "Represents a credit of a content",
      "singularName": "credit",
      "serviceName": "metadata",
      "pluralName": "credits",
      "hyphenatedPluralName": "credits",
      "displaySingularName": "credit",
      "displayPluralName": "credits",
      "retentionPeriod": "P30D",
      "typeInfo": {}
    },
    "locations": {
      "path": "/data",
      "consistency": "eventual",
      "stability": "experimental",
      "displayPriority": 4,
      "operations": {
        "browse": {
          "description": "Fetches a list of locations that may be filtered",
          "actions": [
            "metadata:locations:read",
            "metadata:locations:read:browse"
          ]
        },
        "get": {
          "description": "Fetches one or more locations using the supplied id(s)",
          "actions": [
            "metadata:locations:read",
            "metadata:locations:read:get"
          ]
        },
        "storeBatch": {
          "description": "Stores one or more locations, either creating or wholly replacing",
          "actions": [
            "metadata:locations:write",
            "metadata:locations:write:store",
            "metadata:locations:write:store:batch"
          ],
          "limit": 100
        },
        "storeOne": {
          "description": "Stores the supplied location with the supplied id, either creating or wholly replacing",
          "actions": [
            "metadata:locations:write",
            "metadata:locations:write:store",
            "metadata:locations:write:store:one"
          ]
        },
        "patch": {
          "enabled": false,
          "description": "Partially updates the existing stored location with the supplied id",
          "actions": [
            "metadata:locations:write",
            "metadata:locations:write:store",
            "metadata:locations:write:store:patch"
          ]
        },
        "delete": {
          "description": "Delete one or more locations using the supplied id(s)",
          "actions": [
            "metadata:locations:write",
            "metadata:locations:write:delete"
          ]
        }
      },
      "pagination": {
        "pageSize": {
          "min": 1,
          "max": 100,
          "default": 100
        },
        "pages": {
          "max": 1000
        }
      },
      "display": {
        "priority": 4,
        "overview": {
          "label": "title"
        },
        "info": {
          "primary": [
            "ref",
            "owner",
            "name"
          ],
          "secondary": [
            "alternativeIdentifiers",
            "tags",
            "custom"
          ],
          "history": [
            "createdAt",
            "createdBy",
            "updatedAt",
            "updatedBy",
            "deletedAt",
            "deletedBy",
            "reapAt",
            "version"
          ]
        },
        "singularName": "location",
        "pluralName": "locations"
      },
      "fields": {
        "ref": {
          "description": "The derived owner:name reference",
          "type": "ref",
          "readOnly": true,
          "example": "test:resource-name",
          "fieldName": "ref",
          "fieldNamePath": "ref",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withRef"
          ],
          "filters": [
            {
              "type": "with",
              "label": "ref",
              "fieldNamePath": "ref",
              "description": "filter by the supplied ref",
              "name": "withRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "alternativeIdentifiers": {
          "type": "stringMap",
          "description": "A map of alternative identifiers for this resource",
          "example": {
            "tel": "0800100100",
            "said": "something"
          },
          "fieldName": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "desc": "key-value pairs",
            "name": "stringMap"
          },
          "filteredBy": [
            "withAlternativeIdentifiers"
          ],
          "filters": [
            {
              "type": "with",
              "label": "alternativeIdentifiers",
              "fieldNamePath": "alternativeIdentifiers",
              "description": "filter by the supplied alternative identifiers",
              "prefix": true,
              "name": "withAlternativeIdentifiers",
              "and": true,
              "or": true,
              "valueType": "stringMap"
            }
          ]
        },
        "owner": {
          "description": "The tenant owner name",
          "type": "name",
          "required": true,
          "sort": true,
          "example": "test",
          "fieldName": "owner",
          "fieldNamePath": "owner",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          }
        },
        "name": {
          "description": "The tenant specific unique name",
          "type": "name",
          "sort": true,
          "example": "resource-name",
          "fieldName": "name",
          "fieldNamePath": "name",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          },
          "filteredBy": [
            "withName"
          ],
          "filters": [
            {
              "type": "with",
              "label": "name",
              "fieldNamePath": "name",
              "description": "filter by the supplied name",
              "name": "withName",
              "and": true,
              "or": true,
              "valueType": "name"
            }
          ]
        },
        "tags": {
          "description": "tags for the resource",
          "type": "string",
          "array": true,
          "example": [
            "todo",
            "usage:boxart"
          ],
          "fieldName": "tags",
          "fieldNamePath": "tags",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withTags"
          ],
          "filters": [
            {
              "type": "with",
              "label": "tags",
              "fieldNamePath": "tags",
              "description": "filter by the supplied tags",
              "name": "withTags",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "scores": {
          "description": "scores for the resource",
          "type": "scores",
          "example": {
            "imdb.a3431": 0.9,
            "fuse": 2
          },
          "fieldName": "scores",
          "fieldNamePath": "scores",
          "typeInfo": {
            "keys": {
              "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
            },
            "values": {},
            "desc": "Map of FieldNamePath:Number pairs",
            "name": "scores"
          },
          "filteredBy": [
            "withScore"
          ],
          "filters": [
            {
              "type": "with",
              "label": "scores",
              "fieldNamePath": "scores",
              "description": "filter by the supplied score",
              "range": true,
              "name": "withScore",
              "and": true,
              "or": true,
              "valueType": "scores"
            }
          ]
        },
        "custom": {
          "description": "The tenant specific custom fields.  This may be used to hold tenant specific data alongside the document, but it should not be used as a substitute for normal fields.",
          "type": "map",
          "max": 100,
          "fieldName": "custom",
          "fieldNamePath": "custom",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "values": {},
            "desc": "key-value pairs"
          }
        },
        "createdAt": {
          "description": "The timestamp when created",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "createdAt",
          "fieldNamePath": "createdAt",
          "filteredBy": [
            "withCreatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdAt",
              "fieldNamePath": "createdAt",
              "description": "filter by the supplied createdAt",
              "range": true,
              "name": "withCreatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "createdBy": {
          "description": "The user that created",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "createdBy",
          "fieldNamePath": "createdBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withCreatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdBy",
              "fieldNamePath": "createdBy",
              "description": "filter by the supplied createdBy",
              "name": "withCreatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "updatedAt": {
          "description": "The timestamp when last updated",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "updatedAt",
          "fieldNamePath": "updatedAt",
          "filteredBy": [
            "withUpdatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedAt",
              "fieldNamePath": "updatedAt",
              "description": "filter by the supplied updatedAt",
              "range": true,
              "name": "withUpdatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "updatedBy": {
          "description": "The user that last updated",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "updatedBy",
          "fieldNamePath": "updatedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withUpdatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedBy",
              "fieldNamePath": "updatedBy",
              "description": "filter by the supplied updatedBy",
              "name": "withUpdatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "deletedAt": {
          "description": "The timestamp when deleted (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedAt",
          "fieldNamePath": "deletedAt",
          "filteredBy": [
            "withDeletedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedAt",
              "fieldNamePath": "deletedAt",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedAt",
              "range": true,
              "name": "withDeletedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "deletedBy": {
          "description": "The user that deleted (only applicable to deleted  resources)",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedBy",
          "fieldNamePath": "deletedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withDeletedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedBy",
              "fieldNamePath": "deletedBy",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedBy",
              "name": "withDeletedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "reapAt": {
          "description": "The timestamp for reaping (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "reapAt",
          "fieldNamePath": "reapAt",
          "filteredBy": [
            "withReapAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "reapAt",
              "fieldNamePath": "reapAt",
              "prohibited": [
                "enduser",
                "service",
                "admin"
              ],
              "description": "filter by the supplied reapAt",
              "range": true,
              "name": "withReapAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "version": {
          "description": "The version hash (computed)",
          "type": "version",
          "readOnly": true,
          "example": "356b54eb90cd04566159dfb9c95a0426998a2f7b",
          "excludeFromVersion": true,
          "fieldName": "version",
          "fieldNamePath": "version",
          "typeInfo": {
            "desc": "sha1 hex encoded hash",
            "pattern": "[a-f0-9]{40}",
            "name": "version"
          },
          "filteredBy": [
            "withVersion"
          ],
          "filters": [
            {
              "type": "with",
              "label": "version",
              "fieldNamePath": "version",
              "description": "filter by the supplied version",
              "name": "withVersion",
              "and": true,
              "or": true,
              "valueType": "version"
            }
          ]
        },
        "title": {
          "description": "The title of the location",
          "type": "string",
          "primary": true,
          "sort": true,
          "example": "Europe",
          "fieldName": "title",
          "fieldNamePath": "title",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withTitle"
          ],
          "filters": [
            {
              "type": "with",
              "label": "title",
              "description": "filter by title",
              "prefix": true,
              "fieldNamePath": "title",
              "name": "withTitle",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ],
          "localisedBy": "localisedTitle",
          "localises": {
            "description": "The localised title of the location",
            "example": {
              "en": "Europe",
              "it": "Europa",
              "hu": "Európa"
            },
            "type": "string",
            "localisationOf": "title",
            "fieldName": "localisedTitle",
            "fieldNamePath": "localisedTitle",
            "typeInfo": {
              "keys": {
                "values": [
                  "ar",
                  "de",
                  "de-AT",
                  "de-CH",
                  "el",
                  "en",
                  "es",
                  "fa",
                  "fr",
                  "fr-CH",
                  "hi",
                  "hu",
                  "it",
                  "it-CH",
                  "nl",
                  "ru",
                  "tl",
                  "tr",
                  "vi",
                  "zh"
                ],
                "pattern": "(ar)|(de)|(de-AT)|(de-CH)|(el)|(en)|(es)|(fa)|(fr)|(fr-CH)|(hi)|(hu)|(it)|(it-CH)|(nl)|(ru)|(tl)|(tr)|(vi)|(zh)"
              },
              "values": {},
              "desc": "localised strings"
            }
          }
        },
        "localisedTitle": {
          "description": "The localised title of the location",
          "example": {
            "en": "Europe",
            "it": "Europa",
            "hu": "Európa"
          },
          "type": "string",
          "localisationOf": "title",
          "fieldName": "localisedTitle",
          "fieldNamePath": "localisedTitle",
          "typeInfo": {
            "keys": {
              "values": [
                "ar",
                "de",
                "de-AT",
                "de-CH",
                "el",
                "en",
                "es",
                "fa",
                "fr",
                "fr-CH",
                "hi",
                "hu",
                "it",
                "it-CH",
                "nl",
                "ru",
                "tl",
                "tr",
                "vi",
                "zh"
              ],
              "pattern": "(ar)|(de)|(de-AT)|(de-CH)|(el)|(en)|(es)|(fa)|(fr)|(fr-CH)|(hi)|(hu)|(it)|(it-CH)|(nl)|(ru)|(tl)|(tr)|(vi)|(zh)"
            },
            "values": {},
            "desc": "localised strings"
          }
        }
      },
      "filters": {
        "q": {
          "type": "q",
          "label": "q",
          "description": "filter by text",
          "includes": [
            "title"
          ],
          "name": "q",
          "valueType": "string",
          "text": true
        },
        "withName": {
          "type": "with",
          "label": "name",
          "fieldNamePath": "name",
          "description": "filter by the supplied name",
          "name": "withName",
          "and": true,
          "or": true,
          "valueType": "name"
        },
        "withRef": {
          "type": "with",
          "label": "ref",
          "fieldNamePath": "ref",
          "description": "filter by the supplied ref",
          "name": "withRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withAlternativeIdentifiers": {
          "type": "with",
          "label": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "description": "filter by the supplied alternative identifiers",
          "prefix": true,
          "name": "withAlternativeIdentifiers",
          "and": true,
          "or": true,
          "valueType": "stringMap"
        },
        "withTags": {
          "type": "with",
          "label": "tags",
          "fieldNamePath": "tags",
          "description": "filter by the supplied tags",
          "name": "withTags",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withScore": {
          "type": "with",
          "label": "scores",
          "fieldNamePath": "scores",
          "description": "filter by the supplied score",
          "range": true,
          "name": "withScore",
          "and": true,
          "or": true,
          "valueType": "scores"
        },
        "withCreatedAt": {
          "type": "with",
          "label": "createdAt",
          "fieldNamePath": "createdAt",
          "description": "filter by the supplied createdAt",
          "range": true,
          "name": "withCreatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withCreatedBy": {
          "type": "with",
          "label": "createdBy",
          "fieldNamePath": "createdBy",
          "description": "filter by the supplied createdBy",
          "name": "withCreatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withUpdatedAt": {
          "type": "with",
          "label": "updatedAt",
          "fieldNamePath": "updatedAt",
          "description": "filter by the supplied updatedAt",
          "range": true,
          "name": "withUpdatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withUpdatedBy": {
          "type": "with",
          "label": "updatedBy",
          "fieldNamePath": "updatedBy",
          "description": "filter by the supplied updatedBy",
          "name": "withUpdatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withDeletedAt": {
          "type": "with",
          "label": "deletedAt",
          "fieldNamePath": "deletedAt",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedAt",
          "range": true,
          "name": "withDeletedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withDeletedBy": {
          "type": "with",
          "label": "deletedBy",
          "fieldNamePath": "deletedBy",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedBy",
          "name": "withDeletedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withReapAt": {
          "type": "with",
          "label": "reapAt",
          "fieldNamePath": "reapAt",
          "prohibited": [
            "enduser",
            "service",
            "admin"
          ],
          "description": "filter by the supplied reapAt",
          "range": true,
          "name": "withReapAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withVersion": {
          "type": "with",
          "label": "version",
          "fieldNamePath": "version",
          "description": "filter by the supplied version",
          "name": "withVersion",
          "and": true,
          "or": true,
          "valueType": "version"
        },
        "withTitle": {
          "type": "with",
          "label": "title",
          "description": "filter by title",
          "prefix": true,
          "fieldNamePath": "title",
          "name": "withTitle",
          "and": true,
          "or": true,
          "valueType": "string"
        }
      },
      "restrictions": [
        {
          "type": "ownership",
          "message": "must contain an owner for which you have permission",
          "description": "users can only interact with resources that are owned by a tenant they have access to"
        },
        {
          "type": "unmodifiable",
          "message": "not allowed to modify resources created by root:root",
          "description": "users are not allowed to modify resources that were created by root:root"
        },
        {
          "type": "primaryKey",
          "message": "primaryKey must be unique",
          "description": "the primary key (ref) is derived from owner and name, allowing name to be a tenant specific unique external id"
        },
        {
          "type": "readOnly",
          "userTypes": [
            "enduser"
          ],
          "message": "end user type is not permitted to write to assets",
          "description": "end user type is not permitted to write to assets"
        }
      ],
      "relationships": {
        "channels": {
          "description": "The channels that have a reference to this location",
          "type": "indirect",
          "resourceType": "channels",
          "filterName": "withLocationRefs",
          "fields": [
            "ref",
            "title"
          ],
          "batchSize": 10,
          "name": "channels"
        }
      },
      "description": "Represents a location to support regional lineups",
      "singularName": "location",
      "pluralName": "locations",
      "serviceName": "metadata",
      "hyphenatedPluralName": "locations",
      "displaySingularName": "location",
      "displayPluralName": "locations",
      "retentionPeriod": "P30D",
      "typeInfo": {}
    },
    "offerTemplates": {
      "path": "/data",
      "consistency": "eventual",
      "stability": "experimental",
      "displayPriority": 4,
      "operations": {
        "browse": {
          "description": "Fetches a list of offer templates that may be filtered",
          "actions": [
            "metadata:offer-templates:read",
            "metadata:offer-templates:read:browse"
          ]
        },
        "get": {
          "description": "Fetches one or more offer templates using the supplied id(s)",
          "actions": [
            "metadata:offer-templates:read",
            "metadata:offer-templates:read:get"
          ]
        },
        "storeBatch": {
          "description": "Stores one or more offer templates, either creating or wholly replacing",
          "actions": [
            "metadata:offer-templates:write",
            "metadata:offer-templates:write:store",
            "metadata:offer-templates:write:store:batch"
          ],
          "limit": 100
        },
        "storeOne": {
          "description": "Stores the supplied offer template with the supplied id, either creating or wholly replacing",
          "actions": [
            "metadata:offer-templates:write",
            "metadata:offer-templates:write:store",
            "metadata:offer-templates:write:store:one"
          ]
        },
        "patch": {
          "enabled": false,
          "description": "Partially updates the existing stored offer template with the supplied id",
          "actions": [
            "metadata:offer-templates:write",
            "metadata:offer-templates:write:store",
            "metadata:offer-templates:write:store:patch"
          ]
        },
        "delete": {
          "description": "Delete one or more offer templates using the supplied id(s)",
          "actions": [
            "metadata:offer-templates:write",
            "metadata:offer-templates:write:delete"
          ]
        }
      },
      "pagination": {
        "pageSize": {
          "min": 1,
          "max": 100,
          "default": 100
        },
        "pages": {
          "max": 1000
        }
      },
      "display": {
        "priority": 4,
        "overview": {
          "label": "title",
          "quickInfo": [
            "price"
          ],
          "other": [
            "rights"
          ]
        },
        "info": {
          "primary": [
            "ref",
            "owner",
            "name"
          ],
          "secondary": [
            "alternativeIdentifiers",
            "tags",
            "custom"
          ],
          "history": [
            "createdAt",
            "createdBy",
            "updatedAt",
            "updatedBy",
            "deletedAt",
            "deletedBy",
            "reapAt",
            "version"
          ]
        },
        "singularName": "offer template",
        "pluralName": "offer templates"
      },
      "fields": {
        "ref": {
          "description": "The derived owner:name reference",
          "type": "ref",
          "readOnly": true,
          "example": "test:resource-name",
          "fieldName": "ref",
          "fieldNamePath": "ref",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withRef"
          ],
          "filters": [
            {
              "type": "with",
              "label": "ref",
              "fieldNamePath": "ref",
              "description": "filter by the supplied ref",
              "name": "withRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "alternativeIdentifiers": {
          "type": "stringMap",
          "description": "A map of alternative identifiers for this resource",
          "example": {
            "tel": "0800100100",
            "said": "something"
          },
          "fieldName": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "desc": "key-value pairs",
            "name": "stringMap"
          },
          "filteredBy": [
            "withAlternativeIdentifiers"
          ],
          "filters": [
            {
              "type": "with",
              "label": "alternativeIdentifiers",
              "fieldNamePath": "alternativeIdentifiers",
              "description": "filter by the supplied alternative identifiers",
              "prefix": true,
              "name": "withAlternativeIdentifiers",
              "and": true,
              "or": true,
              "valueType": "stringMap"
            }
          ]
        },
        "owner": {
          "description": "The tenant owner name",
          "type": "name",
          "required": true,
          "sort": true,
          "example": "test",
          "fieldName": "owner",
          "fieldNamePath": "owner",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          }
        },
        "name": {
          "description": "The tenant specific unique name",
          "type": "name",
          "sort": true,
          "example": "resource-name",
          "fieldName": "name",
          "fieldNamePath": "name",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          },
          "filteredBy": [
            "withName"
          ],
          "filters": [
            {
              "type": "with",
              "label": "name",
              "fieldNamePath": "name",
              "description": "filter by the supplied name",
              "name": "withName",
              "and": true,
              "or": true,
              "valueType": "name"
            }
          ]
        },
        "tags": {
          "description": "tags for the resource",
          "type": "string",
          "array": true,
          "example": [
            "todo",
            "usage:boxart"
          ],
          "fieldName": "tags",
          "fieldNamePath": "tags",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withTags"
          ],
          "filters": [
            {
              "type": "with",
              "label": "tags",
              "fieldNamePath": "tags",
              "description": "filter by the supplied tags",
              "name": "withTags",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "scores": {
          "description": "scores for the resource",
          "type": "scores",
          "example": {
            "imdb.a3431": 0.9,
            "fuse": 2
          },
          "fieldName": "scores",
          "fieldNamePath": "scores",
          "typeInfo": {
            "keys": {
              "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
            },
            "values": {},
            "desc": "Map of FieldNamePath:Number pairs",
            "name": "scores"
          },
          "filteredBy": [
            "withScore"
          ],
          "filters": [
            {
              "type": "with",
              "label": "scores",
              "fieldNamePath": "scores",
              "description": "filter by the supplied score",
              "range": true,
              "name": "withScore",
              "and": true,
              "or": true,
              "valueType": "scores"
            }
          ]
        },
        "custom": {
          "description": "The tenant specific custom fields.  This may be used to hold tenant specific data alongside the document, but it should not be used as a substitute for normal fields.",
          "type": "map",
          "max": 100,
          "fieldName": "custom",
          "fieldNamePath": "custom",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "values": {},
            "desc": "key-value pairs"
          }
        },
        "createdAt": {
          "description": "The timestamp when created",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "createdAt",
          "fieldNamePath": "createdAt",
          "filteredBy": [
            "withCreatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdAt",
              "fieldNamePath": "createdAt",
              "description": "filter by the supplied createdAt",
              "range": true,
              "name": "withCreatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "createdBy": {
          "description": "The user that created",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "createdBy",
          "fieldNamePath": "createdBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withCreatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdBy",
              "fieldNamePath": "createdBy",
              "description": "filter by the supplied createdBy",
              "name": "withCreatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "updatedAt": {
          "description": "The timestamp when last updated",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "updatedAt",
          "fieldNamePath": "updatedAt",
          "filteredBy": [
            "withUpdatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedAt",
              "fieldNamePath": "updatedAt",
              "description": "filter by the supplied updatedAt",
              "range": true,
              "name": "withUpdatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "updatedBy": {
          "description": "The user that last updated",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "updatedBy",
          "fieldNamePath": "updatedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withUpdatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedBy",
              "fieldNamePath": "updatedBy",
              "description": "filter by the supplied updatedBy",
              "name": "withUpdatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "deletedAt": {
          "description": "The timestamp when deleted (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedAt",
          "fieldNamePath": "deletedAt",
          "filteredBy": [
            "withDeletedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedAt",
              "fieldNamePath": "deletedAt",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedAt",
              "range": true,
              "name": "withDeletedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "deletedBy": {
          "description": "The user that deleted (only applicable to deleted  resources)",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedBy",
          "fieldNamePath": "deletedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withDeletedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedBy",
              "fieldNamePath": "deletedBy",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedBy",
              "name": "withDeletedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "reapAt": {
          "description": "The timestamp for reaping (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "reapAt",
          "fieldNamePath": "reapAt",
          "filteredBy": [
            "withReapAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "reapAt",
              "fieldNamePath": "reapAt",
              "prohibited": [
                "enduser",
                "service",
                "admin"
              ],
              "description": "filter by the supplied reapAt",
              "range": true,
              "name": "withReapAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "version": {
          "description": "The version hash (computed)",
          "type": "version",
          "readOnly": true,
          "example": "356b54eb90cd04566159dfb9c95a0426998a2f7b",
          "excludeFromVersion": true,
          "fieldName": "version",
          "fieldNamePath": "version",
          "typeInfo": {
            "desc": "sha1 hex encoded hash",
            "pattern": "[a-f0-9]{40}",
            "name": "version"
          },
          "filteredBy": [
            "withVersion"
          ],
          "filters": [
            {
              "type": "with",
              "label": "version",
              "fieldNamePath": "version",
              "description": "filter by the supplied version",
              "name": "withVersion",
              "and": true,
              "or": true,
              "valueType": "version"
            }
          ]
        },
        "title": {
          "description": "The title of the offer template - this does not template the offer's title",
          "type": "string",
          "primary": true,
          "sort": true,
          "example": "Kids Movies",
          "fieldName": "title",
          "fieldNamePath": "title",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withTitle"
          ],
          "filters": [
            {
              "type": "with",
              "label": "title",
              "description": "filter by the supplied title",
              "prefix": true,
              "fieldNamePath": "title",
              "name": "withTitle",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ],
          "localisedBy": "localisedTitle",
          "localises": {
            "description": "The localised title of the offer template",
            "example": {
              "en": "Kids Movies",
              "it": "Film per bambini"
            },
            "type": "string",
            "localisationOf": "title",
            "fieldName": "localisedTitle",
            "fieldNamePath": "localisedTitle",
            "typeInfo": {
              "keys": {
                "values": [
                  "ar",
                  "de",
                  "de-AT",
                  "de-CH",
                  "el",
                  "en",
                  "es",
                  "fa",
                  "fr",
                  "fr-CH",
                  "hi",
                  "hu",
                  "it",
                  "it-CH",
                  "nl",
                  "ru",
                  "tl",
                  "tr",
                  "vi",
                  "zh"
                ],
                "pattern": "(ar)|(de)|(de-AT)|(de-CH)|(el)|(en)|(es)|(fa)|(fr)|(fr-CH)|(hi)|(hu)|(it)|(it-CH)|(nl)|(ru)|(tl)|(tr)|(vi)|(zh)"
              },
              "values": {},
              "desc": "localised strings"
            }
          }
        },
        "localisedTitle": {
          "description": "The localised title of the offer template",
          "example": {
            "en": "Kids Movies",
            "it": "Film per bambini"
          },
          "type": "string",
          "localisationOf": "title",
          "fieldName": "localisedTitle",
          "fieldNamePath": "localisedTitle",
          "typeInfo": {
            "keys": {
              "values": [
                "ar",
                "de",
                "de-AT",
                "de-CH",
                "el",
                "en",
                "es",
                "fa",
                "fr",
                "fr-CH",
                "hi",
                "hu",
                "it",
                "it-CH",
                "nl",
                "ru",
                "tl",
                "tr",
                "vi",
                "zh"
              ],
              "pattern": "(ar)|(de)|(de-AT)|(de-CH)|(el)|(en)|(es)|(fa)|(fr)|(fr-CH)|(hi)|(hu)|(it)|(it-CH)|(nl)|(ru)|(tl)|(tr)|(vi)|(zh)"
            },
            "values": {},
            "desc": "localised strings"
          }
        },
        "price": {
          "description": "The default price for offers using this offer template",
          "type": "money",
          "primary": true,
          "example": {
            "GBP": 3.99,
            "EUR": 5.99
          },
          "fieldName": "price",
          "fieldNamePath": "price",
          "typeInfo": {
            "keys": {
              "values": [
                "CHF",
                "EUR",
                "GBP",
                "USD"
              ],
              "pattern": "(CHF)|(EUR)|(GBP)|(USD)"
            },
            "values": {},
            "desc": "money"
          }
        },
        "rights": {
          "description": "Rights/restrictions that apply for this offer",
          "fields": {
            "deviceTypes": {
              "description": "List of device types that this offer applies to",
              "array": true,
              "type": "string",
              "example": [
                "Smartphone",
                "Tablet"
              ],
              "fieldName": "deviceTypes",
              "fieldNamePath": "rights.deviceTypes",
              "typeInfo": {
                "desc": "string",
                "pattern": ".+",
                "name": "string"
              },
              "primary": true
            },
            "usagePeriod": {
              "description": "The maximun duration of time the offer can be made available",
              "type": "duration",
              "example": "P7D",
              "fieldName": "usagePeriod",
              "fieldNamePath": "rights.usagePeriod",
              "typeInfo": {
                "desc": "represents a duration of time expressed as a number of years, months, days, hours, minutes, and seconds",
                "pattern": "-?P(?=[T\\d])(\\d+Y)?(\\d+M)?(\\d+D)?(T(?=\\d)(\\d+H)?(\\d+M)?(\\d+(\\.\\d+)?S)?)?"
              },
              "primary": true
            },
            "gracePeriod": {
              "description": "How long the customer can watch the content at no charge",
              "type": "duration",
              "example": "P7D",
              "fieldName": "gracePeriod",
              "fieldNamePath": "rights.gracePeriod",
              "typeInfo": {
                "desc": "represents a duration of time expressed as a number of years, months, days, hours, minutes, and seconds",
                "pattern": "-?P(?=[T\\d])(\\d+Y)?(\\d+M)?(\\d+D)?(T(?=\\d)(\\d+H)?(\\d+M)?(\\d+(\\.\\d+)?S)?)?"
              },
              "primary": true
            },
            "rentalPeriod": {
              "description": "How long the content can be rented",
              "type": "duration",
              "example": "P7D",
              "fieldName": "rentalPeriod",
              "fieldNamePath": "rights.rentalPeriod",
              "typeInfo": {
                "desc": "represents a duration of time expressed as a number of years, months, days, hours, minutes, and seconds",
                "pattern": "-?P(?=[T\\d])(\\d+Y)?(\\d+M)?(\\d+D)?(T(?=\\d)(\\d+H)?(\\d+M)?(\\d+(\\.\\d+)?S)?)?"
              }
            },
            "airplay": {
              "description": "The right to use airplay",
              "type": "boolean",
              "example": true,
              "fieldName": "airplay",
              "fieldNamePath": "rights.airplay",
              "typeInfo": {
                "desc": "true or false",
                "pattern": "(?:true|false)",
                "name": "boolean"
              }
            },
            "mirrorcast": {
              "description": "The right to use mirrorcast",
              "type": "boolean",
              "example": true,
              "fieldName": "mirrorcast",
              "fieldNamePath": "rights.mirrorcast",
              "typeInfo": {
                "desc": "true or false",
                "pattern": "(?:true|false)",
                "name": "boolean"
              }
            }
          },
          "fieldName": "rights",
          "fieldNamePath": "rights",
          "typeInfo": {}
        }
      },
      "filters": {
        "q": {
          "type": "q",
          "label": "q",
          "description": "filter by text",
          "includes": [
            "title"
          ],
          "name": "q",
          "valueType": "string",
          "text": true
        },
        "withName": {
          "type": "with",
          "label": "name",
          "fieldNamePath": "name",
          "description": "filter by the supplied name",
          "name": "withName",
          "and": true,
          "or": true,
          "valueType": "name"
        },
        "withRef": {
          "type": "with",
          "label": "ref",
          "fieldNamePath": "ref",
          "description": "filter by the supplied ref",
          "name": "withRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withAlternativeIdentifiers": {
          "type": "with",
          "label": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "description": "filter by the supplied alternative identifiers",
          "prefix": true,
          "name": "withAlternativeIdentifiers",
          "and": true,
          "or": true,
          "valueType": "stringMap"
        },
        "withTags": {
          "type": "with",
          "label": "tags",
          "fieldNamePath": "tags",
          "description": "filter by the supplied tags",
          "name": "withTags",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withScore": {
          "type": "with",
          "label": "scores",
          "fieldNamePath": "scores",
          "description": "filter by the supplied score",
          "range": true,
          "name": "withScore",
          "and": true,
          "or": true,
          "valueType": "scores"
        },
        "withCreatedAt": {
          "type": "with",
          "label": "createdAt",
          "fieldNamePath": "createdAt",
          "description": "filter by the supplied createdAt",
          "range": true,
          "name": "withCreatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withCreatedBy": {
          "type": "with",
          "label": "createdBy",
          "fieldNamePath": "createdBy",
          "description": "filter by the supplied createdBy",
          "name": "withCreatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withUpdatedAt": {
          "type": "with",
          "label": "updatedAt",
          "fieldNamePath": "updatedAt",
          "description": "filter by the supplied updatedAt",
          "range": true,
          "name": "withUpdatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withUpdatedBy": {
          "type": "with",
          "label": "updatedBy",
          "fieldNamePath": "updatedBy",
          "description": "filter by the supplied updatedBy",
          "name": "withUpdatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withDeletedAt": {
          "type": "with",
          "label": "deletedAt",
          "fieldNamePath": "deletedAt",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedAt",
          "range": true,
          "name": "withDeletedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withDeletedBy": {
          "type": "with",
          "label": "deletedBy",
          "fieldNamePath": "deletedBy",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedBy",
          "name": "withDeletedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withReapAt": {
          "type": "with",
          "label": "reapAt",
          "fieldNamePath": "reapAt",
          "prohibited": [
            "enduser",
            "service",
            "admin"
          ],
          "description": "filter by the supplied reapAt",
          "range": true,
          "name": "withReapAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withVersion": {
          "type": "with",
          "label": "version",
          "fieldNamePath": "version",
          "description": "filter by the supplied version",
          "name": "withVersion",
          "and": true,
          "or": true,
          "valueType": "version"
        },
        "withTitle": {
          "type": "with",
          "label": "title",
          "description": "filter by the supplied title",
          "prefix": true,
          "fieldNamePath": "title",
          "name": "withTitle",
          "and": true,
          "or": true,
          "valueType": "string"
        }
      },
      "restrictions": [
        {
          "type": "ownership",
          "message": "must contain an owner for which you have permission",
          "description": "users can only interact with resources that are owned by a tenant they have access to"
        },
        {
          "type": "unmodifiable",
          "message": "not allowed to modify resources created by root:root",
          "description": "users are not allowed to modify resources that were created by root:root"
        },
        {
          "type": "primaryKey",
          "message": "primaryKey must be unique",
          "description": "the primary key (ref) is derived from owner and name, allowing name to be a tenant specific unique external id"
        },
        {
          "type": "readOnly",
          "userTypes": [
            "enduser"
          ],
          "message": "end user type is not permitted to write to assets",
          "description": "end user type is not permitted to write to assets"
        }
      ],
      "relationships": {
        "offers": {
          "description": "The offers that have a reference to this offer template",
          "type": "indirect",
          "resourceType": "offers",
          "filterName": "withOfferTemplateRef",
          "fields": [
            "ref",
            "title"
          ],
          "batchSize": 10,
          "name": "offers"
        }
      },
      "description": "Represents an offer template that is used to provide defaults for offers",
      "singularName": "offerTemplate",
      "pluralName": "offerTemplates",
      "serviceName": "metadata",
      "hyphenatedPluralName": "offer-templates",
      "displaySingularName": "offer template",
      "displayPluralName": "offer templates",
      "retentionPeriod": "P30D",
      "typeInfo": {}
    },
    "offers": {
      "path": "/data",
      "consistency": "eventual",
      "stability": "experimental",
      "displayPriority": 2,
      "operations": {
        "browse": {
          "description": "Fetches a list of offers that may be filtered",
          "actions": [
            "metadata:offers:read",
            "metadata:offers:read:browse"
          ]
        },
        "get": {
          "description": "Fetches one or more offers using the supplied id(s)",
          "actions": [
            "metadata:offers:read",
            "metadata:offers:read:get"
          ]
        },
        "storeBatch": {
          "description": "Stores one or more offers, either creating or wholly replacing",
          "actions": [
            "metadata:offers:write",
            "metadata:offers:write:store",
            "metadata:offers:write:store:batch"
          ],
          "limit": 100
        },
        "storeOne": {
          "description": "Stores the supplied offer with the supplied id, either creating or wholly replacing",
          "actions": [
            "metadata:offers:write",
            "metadata:offers:write:store",
            "metadata:offers:write:store:one"
          ]
        },
        "patch": {
          "enabled": false,
          "description": "Partially updates the existing stored offer with the supplied id",
          "actions": [
            "metadata:offers:write",
            "metadata:offers:write:store",
            "metadata:offers:write:store:patch"
          ]
        },
        "delete": {
          "description": "Delete one or more offers using the supplied id(s)",
          "actions": [
            "metadata:offers:write",
            "metadata:offers:write:delete"
          ]
        }
      },
      "pagination": {
        "pageSize": {
          "min": 1,
          "max": 100,
          "default": 100
        },
        "pages": {
          "max": 1000
        }
      },
      "display": {
        "priority": 2,
        "overview": {
          "label": "title",
          "quickInfo": [
            "price"
          ],
          "other": [
            "type",
            "live",
            "repeat",
            "premiere",
            "availabilityStartAt",
            "availabilityEndAt",
            "active"
          ]
        },
        "info": {
          "primary": [
            "ref",
            "owner",
            "name"
          ],
          "secondary": [
            "alternativeIdentifiers",
            "tags",
            "custom"
          ],
          "history": [
            "createdAt",
            "createdBy",
            "updatedAt",
            "updatedBy",
            "deletedAt",
            "deletedBy",
            "reapAt",
            "version"
          ]
        },
        "singularName": "offer",
        "pluralName": "offers",
        "grouping": "type"
      },
      "fields": {
        "ref": {
          "description": "The derived owner:name reference",
          "type": "ref",
          "readOnly": true,
          "example": "test:resource-name",
          "fieldName": "ref",
          "fieldNamePath": "ref",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withRef"
          ],
          "filters": [
            {
              "type": "with",
              "label": "ref",
              "fieldNamePath": "ref",
              "description": "filter by the supplied ref",
              "name": "withRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "alternativeIdentifiers": {
          "type": "stringMap",
          "description": "A map of alternative identifiers for this resource",
          "example": {
            "tel": "0800100100",
            "said": "something"
          },
          "fieldName": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "desc": "key-value pairs",
            "name": "stringMap"
          },
          "filteredBy": [
            "withAlternativeIdentifiers"
          ],
          "filters": [
            {
              "type": "with",
              "label": "alternativeIdentifiers",
              "fieldNamePath": "alternativeIdentifiers",
              "description": "filter by the supplied alternative identifiers",
              "prefix": true,
              "name": "withAlternativeIdentifiers",
              "and": true,
              "or": true,
              "valueType": "stringMap"
            }
          ]
        },
        "owner": {
          "description": "The tenant owner name",
          "type": "name",
          "required": true,
          "sort": true,
          "example": "test",
          "fieldName": "owner",
          "fieldNamePath": "owner",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          }
        },
        "name": {
          "description": "The tenant specific unique name",
          "type": "name",
          "sort": true,
          "example": "resource-name",
          "fieldName": "name",
          "fieldNamePath": "name",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          },
          "filteredBy": [
            "withName"
          ],
          "filters": [
            {
              "type": "with",
              "label": "name",
              "fieldNamePath": "name",
              "description": "filter by the supplied name",
              "name": "withName",
              "and": true,
              "or": true,
              "valueType": "name"
            }
          ]
        },
        "tags": {
          "description": "tags for the resource",
          "type": "string",
          "array": true,
          "example": [
            "todo",
            "usage:boxart"
          ],
          "fieldName": "tags",
          "fieldNamePath": "tags",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withTags"
          ],
          "filters": [
            {
              "type": "with",
              "label": "tags",
              "fieldNamePath": "tags",
              "description": "filter by the supplied tags",
              "name": "withTags",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "scores": {
          "description": "scores for the resource",
          "type": "scores",
          "example": {
            "imdb.a3431": 0.9,
            "fuse": 2
          },
          "fieldName": "scores",
          "fieldNamePath": "scores",
          "typeInfo": {
            "keys": {
              "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
            },
            "values": {},
            "desc": "Map of FieldNamePath:Number pairs",
            "name": "scores"
          },
          "filteredBy": [
            "withScore"
          ],
          "filters": [
            {
              "type": "with",
              "label": "scores",
              "fieldNamePath": "scores",
              "description": "filter by the supplied score",
              "range": true,
              "name": "withScore",
              "and": true,
              "or": true,
              "valueType": "scores"
            }
          ]
        },
        "custom": {
          "description": "The tenant specific custom fields.  This may be used to hold tenant specific data alongside the document, but it should not be used as a substitute for normal fields.",
          "type": "map",
          "max": 100,
          "fieldName": "custom",
          "fieldNamePath": "custom",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "values": {},
            "desc": "key-value pairs"
          }
        },
        "createdAt": {
          "description": "The timestamp when created",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "createdAt",
          "fieldNamePath": "createdAt",
          "filteredBy": [
            "withCreatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdAt",
              "fieldNamePath": "createdAt",
              "description": "filter by the supplied createdAt",
              "range": true,
              "name": "withCreatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "createdBy": {
          "description": "The user that created",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "createdBy",
          "fieldNamePath": "createdBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withCreatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdBy",
              "fieldNamePath": "createdBy",
              "description": "filter by the supplied createdBy",
              "name": "withCreatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "updatedAt": {
          "description": "The timestamp when last updated",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "updatedAt",
          "fieldNamePath": "updatedAt",
          "filteredBy": [
            "withUpdatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedAt",
              "fieldNamePath": "updatedAt",
              "description": "filter by the supplied updatedAt",
              "range": true,
              "name": "withUpdatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "updatedBy": {
          "description": "The user that last updated",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "updatedBy",
          "fieldNamePath": "updatedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withUpdatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedBy",
              "fieldNamePath": "updatedBy",
              "description": "filter by the supplied updatedBy",
              "name": "withUpdatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "deletedAt": {
          "description": "The timestamp when deleted (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedAt",
          "fieldNamePath": "deletedAt",
          "filteredBy": [
            "withDeletedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedAt",
              "fieldNamePath": "deletedAt",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedAt",
              "range": true,
              "name": "withDeletedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "deletedBy": {
          "description": "The user that deleted (only applicable to deleted  resources)",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedBy",
          "fieldNamePath": "deletedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withDeletedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedBy",
              "fieldNamePath": "deletedBy",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedBy",
              "name": "withDeletedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "reapAt": {
          "description": "The timestamp for reaping (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "reapAt",
          "fieldNamePath": "reapAt",
          "filteredBy": [
            "withReapAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "reapAt",
              "fieldNamePath": "reapAt",
              "prohibited": [
                "enduser",
                "service",
                "admin"
              ],
              "description": "filter by the supplied reapAt",
              "range": true,
              "name": "withReapAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "version": {
          "description": "The version hash (computed)",
          "type": "version",
          "readOnly": true,
          "example": "356b54eb90cd04566159dfb9c95a0426998a2f7b",
          "excludeFromVersion": true,
          "fieldName": "version",
          "fieldNamePath": "version",
          "typeInfo": {
            "desc": "sha1 hex encoded hash",
            "pattern": "[a-f0-9]{40}",
            "name": "version"
          },
          "filteredBy": [
            "withVersion"
          ],
          "filters": [
            {
              "type": "with",
              "label": "version",
              "fieldNamePath": "version",
              "description": "filter by the supplied version",
              "name": "withVersion",
              "and": true,
              "or": true,
              "valueType": "version"
            }
          ]
        },
        "type": {
          "description": "The offer type based on how it can be consumed, either linearly or on demand",
          "type": "string",
          "allowedValues": [
            {
              "value": "linear",
              "alternatives": [],
              "label": "linear",
              "description": "linear"
            },
            {
              "value": "ondemand",
              "alternatives": [],
              "label": "ondemand",
              "description": "ondemand"
            }
          ],
          "required": true,
          "primary": true,
          "countable": true,
          "example": "ondemand",
          "fieldName": "type",
          "fieldNamePath": "type",
          "allowedValueMappings": {
            "linear": "linear",
            "ondemand": "ondemand"
          },
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withType"
          ],
          "filters": [
            {
              "type": "with",
              "label": "type",
              "description": "filter by the supplied type",
              "fieldNamePath": "type",
              "name": "withType",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "title": {
          "description": "The title of the offer",
          "type": "string",
          "primary": true,
          "sort": true,
          "example": "Interstellar",
          "fieldName": "title",
          "fieldNamePath": "title",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withTitle"
          ],
          "filters": [
            {
              "type": "with",
              "label": "title",
              "description": "filter by the supplied title",
              "prefix": true,
              "fieldNamePath": "title",
              "name": "withTitle",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ],
          "localisedBy": "localisedTitle",
          "localises": {
            "description": "The localised title of the offer",
            "example": {
              "en": "Interstellar",
              "it": "Interstellar"
            },
            "type": "string",
            "localisationOf": "title",
            "fieldName": "localisedTitle",
            "fieldNamePath": "localisedTitle",
            "typeInfo": {
              "keys": {
                "values": [
                  "ar",
                  "de",
                  "de-AT",
                  "de-CH",
                  "el",
                  "en",
                  "es",
                  "fa",
                  "fr",
                  "fr-CH",
                  "hi",
                  "hu",
                  "it",
                  "it-CH",
                  "nl",
                  "ru",
                  "tl",
                  "tr",
                  "vi",
                  "zh"
                ],
                "pattern": "(ar)|(de)|(de-AT)|(de-CH)|(el)|(en)|(es)|(fa)|(fr)|(fr-CH)|(hi)|(hu)|(it)|(it-CH)|(nl)|(ru)|(tl)|(tr)|(vi)|(zh)"
              },
              "values": {},
              "desc": "localised strings"
            }
          }
        },
        "localisedTitle": {
          "description": "The localised title of the offer",
          "example": {
            "en": "Interstellar",
            "it": "Interstellar"
          },
          "type": "string",
          "localisationOf": "title",
          "fieldName": "localisedTitle",
          "fieldNamePath": "localisedTitle",
          "typeInfo": {
            "keys": {
              "values": [
                "ar",
                "de",
                "de-AT",
                "de-CH",
                "el",
                "en",
                "es",
                "fa",
                "fr",
                "fr-CH",
                "hi",
                "hu",
                "it",
                "it-CH",
                "nl",
                "ru",
                "tl",
                "tr",
                "vi",
                "zh"
              ],
              "pattern": "(ar)|(de)|(de-AT)|(de-CH)|(el)|(en)|(es)|(fa)|(fr)|(fr-CH)|(hi)|(hu)|(it)|(it-CH)|(nl)|(ru)|(tl)|(tr)|(vi)|(zh)"
            },
            "values": {},
            "desc": "localised strings"
          }
        },
        "availabilityStartAt": {
          "description": "The availability start date of the offer, or if not present available from the start of time",
          "type": "timestamp",
          "nonexistent": "low",
          "primary": true,
          "sort": true,
          "example": "2016-01-01T12:00:00.000Z",
          "fieldName": "availabilityStartAt",
          "fieldNamePath": "availabilityStartAt",
          "filteredBy": [
            "withAvailabilityStartAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "availabilityStartAt",
              "description": "filter by the supplied availability start date",
              "range": true,
              "fieldNamePath": "availabilityStartAt",
              "name": "withAvailabilityStartAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "availabilityEndAt": {
          "description": "The availability end date of the offer, or if not present available till the end of time",
          "type": "timestamp",
          "nonexistent": "high",
          "primary": true,
          "sort": true,
          "example": "2016-04-01T12:00:00.000Z",
          "fieldName": "availabilityEndAt",
          "fieldNamePath": "availabilityEndAt",
          "filteredBy": [
            "withAvailabilityEndAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "availabilityEndAt",
              "description": "filter by the supplied availability end date",
              "range": true,
              "fieldNamePath": "availabilityEndAt",
              "name": "withAvailabilityEndAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "price": {
          "description": "The price for this offer",
          "type": "money",
          "primary": true,
          "example": {
            "GBP": 3.99,
            "EUR": 5.99
          },
          "fieldName": "price",
          "fieldNamePath": "price",
          "typeInfo": {
            "keys": {
              "values": [
                "CHF",
                "EUR",
                "GBP",
                "USD"
              ],
              "pattern": "(CHF)|(EUR)|(GBP)|(USD)"
            },
            "values": {},
            "desc": "money"
          }
        },
        "live": {
          "description": "Flag to indicate live offers",
          "type": "boolean",
          "example": true,
          "fieldName": "live",
          "fieldNamePath": "live",
          "typeInfo": {
            "desc": "true or false",
            "pattern": "(?:true|false)",
            "name": "boolean"
          }
        },
        "repeat": {
          "description": "Flag to indicate repeated offers",
          "type": "boolean",
          "example": true,
          "fieldName": "repeat",
          "fieldNamePath": "repeat",
          "typeInfo": {
            "desc": "true or false",
            "pattern": "(?:true|false)",
            "name": "boolean"
          }
        },
        "premiere": {
          "description": "Flag to indicate premiere offers",
          "type": "boolean",
          "example": true,
          "fieldName": "premiere",
          "fieldNamePath": "premiere",
          "typeInfo": {
            "desc": "true or false",
            "pattern": "(?:true|false)",
            "name": "boolean"
          }
        },
        "active": {
          "description": "Flag to indicate active, default to true",
          "type": "boolean",
          "default": true,
          "example": true,
          "fieldName": "active",
          "fieldNamePath": "active",
          "typeInfo": {
            "desc": "true or false",
            "pattern": "(?:true|false)",
            "name": "boolean"
          },
          "filteredBy": [
            "withActive"
          ],
          "filters": [
            {
              "type": "with",
              "label": "active",
              "description": "filter by the active field",
              "fieldNamePath": "active",
              "name": "withActive",
              "and": true,
              "or": true,
              "valueType": "boolean"
            }
          ]
        },
        "subscriptionCodes": {
          "type": "string",
          "array": true,
          "primary": true,
          "example": [
            "1234",
            "5678"
          ],
          "description": "The subscription codes",
          "fieldName": "subscriptionCodes",
          "fieldNamePath": "subscriptionCodes",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          }
        },
        "rights": {
          "description": "Rights/restrictions that apply for this offer",
          "fields": {
            "deviceTypes": {
              "description": "List of device types that this offer applies to",
              "array": true,
              "type": "string",
              "example": [
                "Smartphone",
                "Tablet"
              ],
              "fieldName": "deviceTypes",
              "fieldNamePath": "rights.deviceTypes",
              "typeInfo": {
                "desc": "string",
                "pattern": ".+",
                "name": "string"
              },
              "primary": true
            },
            "usagePeriod": {
              "description": "The maximun duration of time the offer can be made available",
              "type": "duration",
              "example": "P7D",
              "fieldName": "usagePeriod",
              "fieldNamePath": "rights.usagePeriod",
              "typeInfo": {
                "desc": "represents a duration of time expressed as a number of years, months, days, hours, minutes, and seconds",
                "pattern": "-?P(?=[T\\d])(\\d+Y)?(\\d+M)?(\\d+D)?(T(?=\\d)(\\d+H)?(\\d+M)?(\\d+(\\.\\d+)?S)?)?"
              },
              "primary": true
            },
            "gracePeriod": {
              "description": "How long the customer can watch the content at no charge",
              "type": "duration",
              "example": "P7D",
              "fieldName": "gracePeriod",
              "fieldNamePath": "rights.gracePeriod",
              "typeInfo": {
                "desc": "represents a duration of time expressed as a number of years, months, days, hours, minutes, and seconds",
                "pattern": "-?P(?=[T\\d])(\\d+Y)?(\\d+M)?(\\d+D)?(T(?=\\d)(\\d+H)?(\\d+M)?(\\d+(\\.\\d+)?S)?)?"
              },
              "primary": true
            },
            "rentalPeriod": {
              "description": "How long the content can be rented",
              "type": "duration",
              "example": "P7D",
              "fieldName": "rentalPeriod",
              "fieldNamePath": "rights.rentalPeriod",
              "typeInfo": {
                "desc": "represents a duration of time expressed as a number of years, months, days, hours, minutes, and seconds",
                "pattern": "-?P(?=[T\\d])(\\d+Y)?(\\d+M)?(\\d+D)?(T(?=\\d)(\\d+H)?(\\d+M)?(\\d+(\\.\\d+)?S)?)?"
              }
            },
            "airplay": {
              "description": "The right to use airplay",
              "type": "boolean",
              "example": true,
              "fieldName": "airplay",
              "fieldNamePath": "rights.airplay",
              "typeInfo": {
                "desc": "true or false",
                "pattern": "(?:true|false)",
                "name": "boolean"
              }
            },
            "mirrorcast": {
              "description": "The right to use mirrorcast",
              "type": "boolean",
              "example": true,
              "fieldName": "mirrorcast",
              "fieldNamePath": "rights.mirrorcast",
              "typeInfo": {
                "desc": "true or false",
                "pattern": "(?:true|false)",
                "name": "boolean"
              }
            }
          },
          "fieldName": "rights",
          "fieldNamePath": "rights",
          "typeInfo": {}
        },
        "contentRefs": {
          "description": "Reference to the contents that either describe or are the scope of this offer",
          "type": "ref",
          "array": true,
          "example": [
            "test:the-best-of-got",
            "test:got-season-1-episode-01",
            "test:got-season-3-episode-10",
            "test:got-season-6-episode-06"
          ],
          "fieldName": "contentRefs",
          "fieldNamePath": "contentRefs",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "readOnly": true,
          "relatedBy": [
            "contents"
          ],
          "relationships": [
            {
              "type": "direct",
              "description": "The associated contents that are either describe or are the scope of this offer",
              "resourceType": "contents",
              "fieldNamePath": "contentRefs",
              "fields": [
                "ref",
                "title",
                "parentRef",
                "memberRefs",
                "type"
              ],
              "batchSize": 10,
              "name": "contents"
            }
          ],
          "filteredBy": [
            "withContentRefs"
          ],
          "filters": [
            {
              "type": "with",
              "label": "contentRefs",
              "description": "filter by the supplied content ref",
              "fieldNamePath": "contentRefs",
              "name": "withContentRefs",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "descriptiveContentRef": {
          "description": "Reference to the content that describes this offer",
          "type": "ref",
          "example": [
            "test:the-best-of-got"
          ],
          "fieldName": "descriptiveContentRef",
          "fieldNamePath": "descriptiveContentRef",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "relatedBy": [
            "descriptiveContent"
          ],
          "relationships": [
            {
              "type": "direct",
              "description": "The associated content that describes this offer",
              "resourceType": "contents",
              "fieldNamePath": "descriptiveContentRef",
              "fields": [
                "ref",
                "title",
                "parentRef",
                "memberRefs",
                "type"
              ],
              "batchSize": 10,
              "name": "descriptiveContent"
            }
          ],
          "filteredBy": [
            "withDescriptiveContentRef"
          ],
          "filters": [
            {
              "type": "with",
              "label": "descriptiveContentRef",
              "description": "filter by the supplied descriptive content ref",
              "fieldNamePath": "descriptiveContentRef",
              "name": "withDescriptiveContentRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "scopeContentRefs": {
          "description": "Reference to the contents that are the scope of this offer",
          "type": "ref",
          "array": true,
          "example": [
            "test:got-season-1-episode-01",
            "test:got-season-3-episode-10",
            "test:got-season-6-episode-06"
          ],
          "fieldName": "scopeContentRefs",
          "fieldNamePath": "scopeContentRefs",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "relatedBy": [
            "scopeContents"
          ],
          "relationships": [
            {
              "type": "direct",
              "description": "The associated contents that are the scope of this offer",
              "resourceType": "contents",
              "fieldNamePath": "scopeContentRefs",
              "fields": [
                "ref",
                "title",
                "parentRef",
                "memberRefs",
                "type"
              ],
              "batchSize": 10,
              "name": "scopeContents"
            }
          ],
          "filteredBy": [
            "withScopeContentRefs"
          ],
          "filters": [
            {
              "type": "with",
              "label": "scopeContentRefs",
              "description": "filter by the supplied scope content refs",
              "fieldNamePath": "scopeContentRefs",
              "name": "withScopeContentRefs",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "termsRef": {
          "description": "Reference to the terms that this offer refers to",
          "type": "ref",
          "example": "test:terms-1",
          "fieldName": "termsRef",
          "fieldNamePath": "termsRef",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "relatedBy": [
            "terms"
          ],
          "relationships": [
            {
              "type": "direct",
              "description": "The associated terms",
              "resourceType": "terms",
              "fieldNamePath": "termsRef",
              "fields": [
                "ref",
                "title"
              ],
              "batchSize": 10,
              "name": "terms"
            }
          ],
          "filteredBy": [
            "withTermsRef"
          ],
          "filters": [
            {
              "type": "with",
              "label": "termsRef",
              "description": "filter by the supplied terms ref",
              "fieldNamePath": "termsRef",
              "name": "withTermsRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "offerTemplateRef": {
          "description": "Reference to the offer template that this offer refers to",
          "type": "ref",
          "example": "test:offerTemplate-1",
          "fieldName": "offerTemplateRef",
          "fieldNamePath": "offerTemplateRef",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "relatedBy": [
            "offerTemplate"
          ],
          "relationships": [
            {
              "type": "direct",
              "description": "The associated offer template",
              "resourceType": "offerTemplates",
              "fieldNamePath": "offerTemplateRef",
              "fields": [
                "ref",
                "title"
              ],
              "batchSize": 10,
              "name": "offerTemplate"
            }
          ],
          "filteredBy": [
            "withOfferTemplateRef"
          ],
          "filters": [
            {
              "type": "with",
              "label": "offerTemplateRef",
              "description": "filter by the supplied offer template ref",
              "fieldNamePath": "offerTemplateRef",
              "name": "withOfferTemplateRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "locationRefs": {
          "description": "The location references of this offer",
          "type": "ref",
          "array": true,
          "example": [
            "test:uk",
            "test:spain"
          ],
          "fieldName": "locationRefs",
          "fieldNamePath": "locationRefs",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "relatedBy": [
            "locations"
          ],
          "relationships": [
            {
              "type": "direct",
              "resourceType": "locations",
              "fieldNamePath": "locationRefs",
              "description": "The locations related to this offer",
              "fields": [
                "ref",
                "title"
              ],
              "batchSize": 10,
              "name": "locations"
            }
          ],
          "filteredBy": [
            "withLocationRefs"
          ],
          "filters": [
            {
              "type": "with",
              "label": "locationRefs",
              "description": "filter by the supplied location refs",
              "fieldNamePath": "locationRefs",
              "name": "withLocationRefs",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        }
      },
      "filters": {
        "q": {
          "type": "q",
          "label": "q",
          "description": "filter by text",
          "includes": [
            "title"
          ],
          "name": "q",
          "valueType": "string",
          "text": true
        },
        "withName": {
          "type": "with",
          "label": "name",
          "fieldNamePath": "name",
          "description": "filter by the supplied name",
          "name": "withName",
          "and": true,
          "or": true,
          "valueType": "name"
        },
        "withRef": {
          "type": "with",
          "label": "ref",
          "fieldNamePath": "ref",
          "description": "filter by the supplied ref",
          "name": "withRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withAlternativeIdentifiers": {
          "type": "with",
          "label": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "description": "filter by the supplied alternative identifiers",
          "prefix": true,
          "name": "withAlternativeIdentifiers",
          "and": true,
          "or": true,
          "valueType": "stringMap"
        },
        "withTags": {
          "type": "with",
          "label": "tags",
          "fieldNamePath": "tags",
          "description": "filter by the supplied tags",
          "name": "withTags",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withScore": {
          "type": "with",
          "label": "scores",
          "fieldNamePath": "scores",
          "description": "filter by the supplied score",
          "range": true,
          "name": "withScore",
          "and": true,
          "or": true,
          "valueType": "scores"
        },
        "withCreatedAt": {
          "type": "with",
          "label": "createdAt",
          "fieldNamePath": "createdAt",
          "description": "filter by the supplied createdAt",
          "range": true,
          "name": "withCreatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withCreatedBy": {
          "type": "with",
          "label": "createdBy",
          "fieldNamePath": "createdBy",
          "description": "filter by the supplied createdBy",
          "name": "withCreatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withUpdatedAt": {
          "type": "with",
          "label": "updatedAt",
          "fieldNamePath": "updatedAt",
          "description": "filter by the supplied updatedAt",
          "range": true,
          "name": "withUpdatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withUpdatedBy": {
          "type": "with",
          "label": "updatedBy",
          "fieldNamePath": "updatedBy",
          "description": "filter by the supplied updatedBy",
          "name": "withUpdatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withDeletedAt": {
          "type": "with",
          "label": "deletedAt",
          "fieldNamePath": "deletedAt",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedAt",
          "range": true,
          "name": "withDeletedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withDeletedBy": {
          "type": "with",
          "label": "deletedBy",
          "fieldNamePath": "deletedBy",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedBy",
          "name": "withDeletedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withReapAt": {
          "type": "with",
          "label": "reapAt",
          "fieldNamePath": "reapAt",
          "prohibited": [
            "enduser",
            "service",
            "admin"
          ],
          "description": "filter by the supplied reapAt",
          "range": true,
          "name": "withReapAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withVersion": {
          "type": "with",
          "label": "version",
          "fieldNamePath": "version",
          "description": "filter by the supplied version",
          "name": "withVersion",
          "and": true,
          "or": true,
          "valueType": "version"
        },
        "withType": {
          "type": "with",
          "label": "type",
          "description": "filter by the supplied type",
          "fieldNamePath": "type",
          "name": "withType",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withTitle": {
          "type": "with",
          "label": "title",
          "description": "filter by the supplied title",
          "prefix": true,
          "fieldNamePath": "title",
          "name": "withTitle",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withAvailabilityStartAt": {
          "type": "with",
          "label": "availabilityStartAt",
          "description": "filter by the supplied availability start date",
          "range": true,
          "fieldNamePath": "availabilityStartAt",
          "name": "withAvailabilityStartAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withAvailabilityEndAt": {
          "type": "with",
          "label": "availabilityEndAt",
          "description": "filter by the supplied availability end date",
          "range": true,
          "fieldNamePath": "availabilityEndAt",
          "name": "withAvailabilityEndAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withContentRefs": {
          "type": "with",
          "label": "contentRefs",
          "description": "filter by the supplied content ref",
          "fieldNamePath": "contentRefs",
          "name": "withContentRefs",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withDescriptiveContentRef": {
          "type": "with",
          "label": "descriptiveContentRef",
          "description": "filter by the supplied descriptive content ref",
          "fieldNamePath": "descriptiveContentRef",
          "name": "withDescriptiveContentRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withScopeContentRefs": {
          "type": "with",
          "label": "scopeContentRefs",
          "description": "filter by the supplied scope content refs",
          "fieldNamePath": "scopeContentRefs",
          "name": "withScopeContentRefs",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withTermsRef": {
          "type": "with",
          "label": "termsRef",
          "description": "filter by the supplied terms ref",
          "fieldNamePath": "termsRef",
          "name": "withTermsRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withLocationRefs": {
          "type": "with",
          "label": "locationRefs",
          "description": "filter by the supplied location refs",
          "fieldNamePath": "locationRefs",
          "name": "withLocationRefs",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withOfferTemplateRef": {
          "type": "with",
          "label": "offerTemplateRef",
          "description": "filter by the supplied offer template ref",
          "fieldNamePath": "offerTemplateRef",
          "name": "withOfferTemplateRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withActive": {
          "type": "with",
          "label": "active",
          "description": "filter by the active field",
          "fieldNamePath": "active",
          "name": "withActive",
          "and": true,
          "or": true,
          "valueType": "boolean"
        }
      },
      "restrictions": [
        {
          "type": "ownership",
          "message": "must contain an owner for which you have permission",
          "description": "users can only interact with resources that are owned by a tenant they have access to"
        },
        {
          "type": "unmodifiable",
          "message": "not allowed to modify resources created by root:root",
          "description": "users are not allowed to modify resources that were created by root:root"
        },
        {
          "type": "primaryKey",
          "message": "primaryKey must be unique",
          "description": "the primary key (ref) is derived from owner and name, allowing name to be a tenant specific unique external id"
        },
        {
          "type": "readOnly",
          "userTypes": [
            "enduser"
          ],
          "message": "end user type is not permitted to write to assets",
          "description": "end user type is not permitted to write to assets"
        }
      ],
      "relationships": {
        "contents": {
          "type": "direct",
          "description": "The associated contents that are either describe or are the scope of this offer",
          "resourceType": "contents",
          "fieldNamePath": "contentRefs",
          "fields": [
            "ref",
            "title",
            "parentRef",
            "memberRefs",
            "type"
          ],
          "batchSize": 10,
          "name": "contents"
        },
        "descriptiveContent": {
          "type": "direct",
          "description": "The associated content that describes this offer",
          "resourceType": "contents",
          "fieldNamePath": "descriptiveContentRef",
          "fields": [
            "ref",
            "title",
            "parentRef",
            "memberRefs",
            "type"
          ],
          "batchSize": 10,
          "name": "descriptiveContent"
        },
        "scopeContents": {
          "type": "direct",
          "description": "The associated contents that are the scope of this offer",
          "resourceType": "contents",
          "fieldNamePath": "scopeContentRefs",
          "fields": [
            "ref",
            "title",
            "parentRef",
            "memberRefs",
            "type"
          ],
          "batchSize": 10,
          "name": "scopeContents"
        },
        "locations": {
          "type": "direct",
          "resourceType": "locations",
          "fieldNamePath": "locationRefs",
          "description": "The locations related to this offer",
          "fields": [
            "ref",
            "title"
          ],
          "batchSize": 10,
          "name": "locations"
        },
        "offerTemplate": {
          "type": "direct",
          "description": "The associated offer template",
          "resourceType": "offerTemplates",
          "fieldNamePath": "offerTemplateRef",
          "fields": [
            "ref",
            "title"
          ],
          "batchSize": 10,
          "name": "offerTemplate"
        },
        "terms": {
          "type": "direct",
          "description": "The associated terms",
          "resourceType": "terms",
          "fieldNamePath": "termsRef",
          "fields": [
            "ref",
            "title"
          ],
          "batchSize": 10,
          "name": "terms"
        }
      },
      "description": "Represents an offer for a content",
      "singularName": "offer",
      "serviceName": "metadata",
      "parameterisedBy": "type",
      "pluralName": "offers",
      "hyphenatedPluralName": "offers",
      "displaySingularName": "offer",
      "displayPluralName": "offers",
      "retentionPeriod": "P30D",
      "typeInfo": {}
    },
    "people": {
      "path": "/data",
      "consistency": "eventual",
      "stability": "stable",
      "displayPriority": 4,
      "operations": {
        "browse": {
          "description": "Fetches a list of people that may be filtered",
          "actions": [
            "metadata:people:read",
            "metadata:people:read:browse"
          ]
        },
        "get": {
          "description": "Fetches one or more people using the supplied id(s)",
          "actions": [
            "metadata:people:read",
            "metadata:people:read:get"
          ]
        },
        "storeBatch": {
          "description": "Stores one or more people, either creating or wholly replacing",
          "actions": [
            "metadata:people:write",
            "metadata:people:write:store",
            "metadata:people:write:store:batch"
          ],
          "limit": 100
        },
        "storeOne": {
          "description": "Stores the supplied person with the supplied id, either creating or wholly replacing",
          "actions": [
            "metadata:people:write",
            "metadata:people:write:store",
            "metadata:people:write:store:one"
          ]
        },
        "patch": {
          "enabled": false,
          "description": "Partially updates the existing stored person with the supplied id",
          "actions": [
            "metadata:people:write",
            "metadata:people:write:store",
            "metadata:people:write:store:patch"
          ]
        },
        "delete": {
          "description": "Delete one or more people using the supplied id(s)",
          "actions": [
            "metadata:people:write",
            "metadata:people:write:delete"
          ]
        }
      },
      "pagination": {
        "pageSize": {
          "min": 1,
          "max": 100,
          "default": 100
        },
        "pages": {
          "max": 1000
        }
      },
      "display": {
        "priority": 4,
        "overview": {
          "label": "fullName",
          "quickInfo": [
            "sortName",
            "givenName",
            "otherNames",
            "familyName"
          ],
          "other": [
            "yearOfDebut",
            "placeOfBirth"
          ]
        },
        "info": {
          "primary": [
            "ref",
            "owner",
            "name"
          ],
          "secondary": [
            "alternativeIdentifiers",
            "tags",
            "custom"
          ],
          "history": [
            "createdAt",
            "createdBy",
            "updatedAt",
            "updatedBy",
            "deletedAt",
            "deletedBy",
            "reapAt",
            "version"
          ]
        },
        "singularName": "person",
        "pluralName": "people"
      },
      "fields": {
        "ref": {
          "description": "The derived owner:name reference",
          "type": "ref",
          "readOnly": true,
          "example": "test:resource-name",
          "fieldName": "ref",
          "fieldNamePath": "ref",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withRef"
          ],
          "filters": [
            {
              "type": "with",
              "label": "ref",
              "fieldNamePath": "ref",
              "description": "filter by the supplied ref",
              "name": "withRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "alternativeIdentifiers": {
          "type": "stringMap",
          "description": "A map of alternative identifiers for this resource",
          "example": {
            "tel": "0800100100",
            "said": "something"
          },
          "fieldName": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "desc": "key-value pairs",
            "name": "stringMap"
          },
          "filteredBy": [
            "withAlternativeIdentifiers"
          ],
          "filters": [
            {
              "type": "with",
              "label": "alternativeIdentifiers",
              "fieldNamePath": "alternativeIdentifiers",
              "description": "filter by the supplied alternative identifiers",
              "prefix": true,
              "name": "withAlternativeIdentifiers",
              "and": true,
              "or": true,
              "valueType": "stringMap"
            }
          ]
        },
        "owner": {
          "description": "The tenant owner name",
          "type": "name",
          "required": true,
          "sort": true,
          "example": "test",
          "fieldName": "owner",
          "fieldNamePath": "owner",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          }
        },
        "name": {
          "description": "The tenant specific unique name",
          "type": "name",
          "sort": true,
          "example": "resource-name",
          "fieldName": "name",
          "fieldNamePath": "name",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          },
          "filteredBy": [
            "withName"
          ],
          "filters": [
            {
              "type": "with",
              "label": "name",
              "fieldNamePath": "name",
              "description": "filter by the supplied name",
              "name": "withName",
              "and": true,
              "or": true,
              "valueType": "name"
            }
          ]
        },
        "tags": {
          "description": "tags for the resource",
          "type": "string",
          "array": true,
          "example": [
            "todo",
            "usage:boxart"
          ],
          "fieldName": "tags",
          "fieldNamePath": "tags",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withTags"
          ],
          "filters": [
            {
              "type": "with",
              "label": "tags",
              "fieldNamePath": "tags",
              "description": "filter by the supplied tags",
              "name": "withTags",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "scores": {
          "description": "scores for the resource",
          "type": "scores",
          "example": {
            "imdb.a3431": 0.9,
            "fuse": 2
          },
          "fieldName": "scores",
          "fieldNamePath": "scores",
          "typeInfo": {
            "keys": {
              "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
            },
            "values": {},
            "desc": "Map of FieldNamePath:Number pairs",
            "name": "scores"
          },
          "filteredBy": [
            "withScore"
          ],
          "filters": [
            {
              "type": "with",
              "label": "scores",
              "fieldNamePath": "scores",
              "description": "filter by the supplied score",
              "range": true,
              "name": "withScore",
              "and": true,
              "or": true,
              "valueType": "scores"
            }
          ]
        },
        "custom": {
          "description": "The tenant specific custom fields.  This may be used to hold tenant specific data alongside the document, but it should not be used as a substitute for normal fields.",
          "type": "map",
          "max": 100,
          "fieldName": "custom",
          "fieldNamePath": "custom",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "values": {},
            "desc": "key-value pairs"
          }
        },
        "createdAt": {
          "description": "The timestamp when created",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "createdAt",
          "fieldNamePath": "createdAt",
          "filteredBy": [
            "withCreatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdAt",
              "fieldNamePath": "createdAt",
              "description": "filter by the supplied createdAt",
              "range": true,
              "name": "withCreatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "createdBy": {
          "description": "The user that created",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "createdBy",
          "fieldNamePath": "createdBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withCreatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdBy",
              "fieldNamePath": "createdBy",
              "description": "filter by the supplied createdBy",
              "name": "withCreatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "updatedAt": {
          "description": "The timestamp when last updated",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "updatedAt",
          "fieldNamePath": "updatedAt",
          "filteredBy": [
            "withUpdatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedAt",
              "fieldNamePath": "updatedAt",
              "description": "filter by the supplied updatedAt",
              "range": true,
              "name": "withUpdatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "updatedBy": {
          "description": "The user that last updated",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "updatedBy",
          "fieldNamePath": "updatedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withUpdatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedBy",
              "fieldNamePath": "updatedBy",
              "description": "filter by the supplied updatedBy",
              "name": "withUpdatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "deletedAt": {
          "description": "The timestamp when deleted (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedAt",
          "fieldNamePath": "deletedAt",
          "filteredBy": [
            "withDeletedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedAt",
              "fieldNamePath": "deletedAt",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedAt",
              "range": true,
              "name": "withDeletedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "deletedBy": {
          "description": "The user that deleted (only applicable to deleted  resources)",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedBy",
          "fieldNamePath": "deletedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withDeletedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedBy",
              "fieldNamePath": "deletedBy",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedBy",
              "name": "withDeletedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "reapAt": {
          "description": "The timestamp for reaping (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "reapAt",
          "fieldNamePath": "reapAt",
          "filteredBy": [
            "withReapAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "reapAt",
              "fieldNamePath": "reapAt",
              "prohibited": [
                "enduser",
                "service",
                "admin"
              ],
              "description": "filter by the supplied reapAt",
              "range": true,
              "name": "withReapAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "version": {
          "description": "The version hash (computed)",
          "type": "version",
          "readOnly": true,
          "example": "356b54eb90cd04566159dfb9c95a0426998a2f7b",
          "excludeFromVersion": true,
          "fieldName": "version",
          "fieldNamePath": "version",
          "typeInfo": {
            "desc": "sha1 hex encoded hash",
            "pattern": "[a-f0-9]{40}",
            "name": "version"
          },
          "filteredBy": [
            "withVersion"
          ],
          "filters": [
            {
              "type": "with",
              "label": "version",
              "fieldNamePath": "version",
              "description": "filter by the supplied version",
              "name": "withVersion",
              "and": true,
              "or": true,
              "valueType": "version"
            }
          ]
        },
        "fullName": {
          "description": "The full name of the person",
          "type": "string",
          "primary": true,
          "example": "Keira Knightley",
          "fieldName": "fullName",
          "fieldNamePath": "fullName",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withFullName"
          ],
          "filters": [
            {
              "type": "with",
              "label": "fullName",
              "description": "filter by full name",
              "prefix": true,
              "fieldNamePath": "fullName",
              "name": "withFullName",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "sortName": {
          "description": "The full name of the person in sort order",
          "type": "string",
          "sort": true,
          "example": "Knightley, Kiera",
          "fieldName": "sortName",
          "fieldNamePath": "sortName",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          }
        },
        "givenName": {
          "description": "The given name of the person",
          "type": "string",
          "primary": true,
          "example": "Keira",
          "fieldName": "givenName",
          "fieldNamePath": "givenName",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          }
        },
        "otherNames": {
          "description": "The other names of the person",
          "type": "string",
          "primary": true,
          "example": "Christina",
          "fieldName": "otherNames",
          "fieldNamePath": "otherNames",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          }
        },
        "familyName": {
          "description": "The family name of the person",
          "type": "string",
          "primary": true,
          "example": "Knightley",
          "fieldName": "familyName",
          "fieldNamePath": "familyName",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          }
        },
        "yearOfDebut": {
          "description": "The year of debut of the person",
          "type": "year",
          "primary": true,
          "example": 1995,
          "fieldName": "yearOfDebut",
          "fieldNamePath": "yearOfDebut",
          "typeInfo": {
            "desc": "year",
            "pattern": "(?:\\d{4})",
            "name": "year"
          }
        },
        "placeOfBirth": {
          "description": "The place of birth of the person",
          "type": "string",
          "primary": true,
          "example": "Teddington, Middlesex, England, UK",
          "fieldName": "placeOfBirth",
          "fieldNamePath": "placeOfBirth",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          }
        }
      },
      "filters": {
        "q": {
          "type": "q",
          "label": "q",
          "description": "filter by text",
          "includes": [
            "fullName"
          ],
          "name": "q",
          "valueType": "string",
          "text": true
        },
        "withName": {
          "type": "with",
          "label": "name",
          "fieldNamePath": "name",
          "description": "filter by the supplied name",
          "name": "withName",
          "and": true,
          "or": true,
          "valueType": "name"
        },
        "withRef": {
          "type": "with",
          "label": "ref",
          "fieldNamePath": "ref",
          "description": "filter by the supplied ref",
          "name": "withRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withAlternativeIdentifiers": {
          "type": "with",
          "label": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "description": "filter by the supplied alternative identifiers",
          "prefix": true,
          "name": "withAlternativeIdentifiers",
          "and": true,
          "or": true,
          "valueType": "stringMap"
        },
        "withTags": {
          "type": "with",
          "label": "tags",
          "fieldNamePath": "tags",
          "description": "filter by the supplied tags",
          "name": "withTags",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withScore": {
          "type": "with",
          "label": "scores",
          "fieldNamePath": "scores",
          "description": "filter by the supplied score",
          "range": true,
          "name": "withScore",
          "and": true,
          "or": true,
          "valueType": "scores"
        },
        "withCreatedAt": {
          "type": "with",
          "label": "createdAt",
          "fieldNamePath": "createdAt",
          "description": "filter by the supplied createdAt",
          "range": true,
          "name": "withCreatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withCreatedBy": {
          "type": "with",
          "label": "createdBy",
          "fieldNamePath": "createdBy",
          "description": "filter by the supplied createdBy",
          "name": "withCreatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withUpdatedAt": {
          "type": "with",
          "label": "updatedAt",
          "fieldNamePath": "updatedAt",
          "description": "filter by the supplied updatedAt",
          "range": true,
          "name": "withUpdatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withUpdatedBy": {
          "type": "with",
          "label": "updatedBy",
          "fieldNamePath": "updatedBy",
          "description": "filter by the supplied updatedBy",
          "name": "withUpdatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withDeletedAt": {
          "type": "with",
          "label": "deletedAt",
          "fieldNamePath": "deletedAt",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedAt",
          "range": true,
          "name": "withDeletedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withDeletedBy": {
          "type": "with",
          "label": "deletedBy",
          "fieldNamePath": "deletedBy",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedBy",
          "name": "withDeletedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withReapAt": {
          "type": "with",
          "label": "reapAt",
          "fieldNamePath": "reapAt",
          "prohibited": [
            "enduser",
            "service",
            "admin"
          ],
          "description": "filter by the supplied reapAt",
          "range": true,
          "name": "withReapAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withVersion": {
          "type": "with",
          "label": "version",
          "fieldNamePath": "version",
          "description": "filter by the supplied version",
          "name": "withVersion",
          "and": true,
          "or": true,
          "valueType": "version"
        },
        "withFullName": {
          "type": "with",
          "label": "fullName",
          "description": "filter by full name",
          "prefix": true,
          "fieldNamePath": "fullName",
          "name": "withFullName",
          "and": true,
          "or": true,
          "valueType": "string"
        }
      },
      "restrictions": [
        {
          "type": "ownership",
          "message": "must contain an owner for which you have permission",
          "description": "users can only interact with resources that are owned by a tenant they have access to"
        },
        {
          "type": "unmodifiable",
          "message": "not allowed to modify resources created by root:root",
          "description": "users are not allowed to modify resources that were created by root:root"
        },
        {
          "type": "primaryKey",
          "message": "primaryKey must be unique",
          "description": "the primary key (ref) is derived from owner and name, allowing name to be a tenant specific unique external id"
        },
        {
          "type": "readOnly",
          "userTypes": [
            "enduser"
          ],
          "message": "end user type is not permitted to write to assets",
          "description": "end user type is not permitted to write to assets"
        }
      ],
      "relationships": {
        "credits": {
          "description": "The credits that have a reference to this person",
          "type": "indirect",
          "resourceType": "credits",
          "filterName": "withPersonRef",
          "fields": [
            "ref",
            "characterName"
          ],
          "batchSize": 10,
          "name": "credits"
        },
        "relatedMaterials": {
          "type": "direct",
          "description": "The associated content folder containing materials related to this Person",
          "resourceType": "contents",
          "fieldNamePath": "relatedMaterialRefs",
          "fields": [
            "ref",
            "title",
            "parentRef",
            "memberRefs",
            "type"
          ],
          "batchSize": 10,
          "name": "relatedMaterials",
          "intersectable": false
        },
        "relatedMaterials.assets": {
          "type": "indirect",
          "description": "The associated assets through associated folders containing materials related to the Person",
          "through": "relatedMaterials",
          "resourceType": "assets",
          "filterName": "withContentRef",
          "fields": [
            "ref",
            "name",
            "contentRef",
            "type",
            "url",
            "fileFormat",
            "title",
            "fileSize",
            "tags"
          ],
          "batchSize": 10,
          "name": "relatedMaterials.assets",
          "intersectable": false
        }
      },
      "description": "Represents a person",
      "singularName": "person",
      "pluralName": "people",
      "serviceName": "metadata",
      "hyphenatedPluralName": "people",
      "displaySingularName": "person",
      "displayPluralName": "people",
      "retentionPeriod": "P30D",
      "typeInfo": {}
    },
    "providers": {
      "path": "/data",
      "consistency": "eventual",
      "stability": "experimental",
      "displayPriority": 4,
      "operations": {
        "browse": {
          "description": "Fetches a list of providers that may be filtered",
          "actions": [
            "metadata:providers:read",
            "metadata:providers:read:browse"
          ]
        },
        "get": {
          "description": "Fetches one or more providers using the supplied id(s)",
          "actions": [
            "metadata:providers:read",
            "metadata:providers:read:get"
          ]
        },
        "storeBatch": {
          "description": "Stores one or more providers, either creating or wholly replacing",
          "actions": [
            "metadata:providers:write",
            "metadata:providers:write:store",
            "metadata:providers:write:store:batch"
          ],
          "limit": 100
        },
        "storeOne": {
          "description": "Stores the supplied provider with the supplied id, either creating or wholly replacing",
          "actions": [
            "metadata:providers:write",
            "metadata:providers:write:store",
            "metadata:providers:write:store:one"
          ]
        },
        "patch": {
          "enabled": false,
          "description": "Partially updates the existing stored provider with the supplied id",
          "actions": [
            "metadata:providers:write",
            "metadata:providers:write:store",
            "metadata:providers:write:store:patch"
          ]
        },
        "delete": {
          "description": "Delete one or more providers using the supplied id(s)",
          "actions": [
            "metadata:providers:write",
            "metadata:providers:write:delete"
          ]
        }
      },
      "pagination": {
        "pageSize": {
          "min": 1,
          "max": 100,
          "default": 100
        },
        "pages": {
          "max": 1000
        }
      },
      "display": {
        "priority": 4,
        "overview": {
          "label": "title"
        },
        "info": {
          "primary": [
            "ref",
            "owner",
            "name"
          ],
          "secondary": [
            "alternativeIdentifiers",
            "tags",
            "custom"
          ],
          "history": [
            "createdAt",
            "createdBy",
            "updatedAt",
            "updatedBy",
            "deletedAt",
            "deletedBy",
            "reapAt",
            "version"
          ]
        },
        "singularName": "provider",
        "pluralName": "providers"
      },
      "fields": {
        "ref": {
          "description": "The derived owner:name reference",
          "type": "ref",
          "readOnly": true,
          "example": "test:resource-name",
          "fieldName": "ref",
          "fieldNamePath": "ref",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withRef"
          ],
          "filters": [
            {
              "type": "with",
              "label": "ref",
              "fieldNamePath": "ref",
              "description": "filter by the supplied ref",
              "name": "withRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "alternativeIdentifiers": {
          "type": "stringMap",
          "description": "A map of alternative identifiers for this resource",
          "example": {
            "tel": "0800100100",
            "said": "something"
          },
          "fieldName": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "desc": "key-value pairs",
            "name": "stringMap"
          },
          "filteredBy": [
            "withAlternativeIdentifiers"
          ],
          "filters": [
            {
              "type": "with",
              "label": "alternativeIdentifiers",
              "fieldNamePath": "alternativeIdentifiers",
              "description": "filter by the supplied alternative identifiers",
              "prefix": true,
              "name": "withAlternativeIdentifiers",
              "and": true,
              "or": true,
              "valueType": "stringMap"
            }
          ]
        },
        "owner": {
          "description": "The tenant owner name",
          "type": "name",
          "required": true,
          "sort": true,
          "example": "test",
          "fieldName": "owner",
          "fieldNamePath": "owner",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          }
        },
        "name": {
          "description": "The tenant specific unique name",
          "type": "name",
          "sort": true,
          "example": "resource-name",
          "fieldName": "name",
          "fieldNamePath": "name",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          },
          "filteredBy": [
            "withName"
          ],
          "filters": [
            {
              "type": "with",
              "label": "name",
              "fieldNamePath": "name",
              "description": "filter by the supplied name",
              "name": "withName",
              "and": true,
              "or": true,
              "valueType": "name"
            }
          ]
        },
        "tags": {
          "description": "tags for the resource",
          "type": "string",
          "array": true,
          "example": [
            "todo",
            "usage:boxart"
          ],
          "fieldName": "tags",
          "fieldNamePath": "tags",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withTags"
          ],
          "filters": [
            {
              "type": "with",
              "label": "tags",
              "fieldNamePath": "tags",
              "description": "filter by the supplied tags",
              "name": "withTags",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "scores": {
          "description": "scores for the resource",
          "type": "scores",
          "example": {
            "imdb.a3431": 0.9,
            "fuse": 2
          },
          "fieldName": "scores",
          "fieldNamePath": "scores",
          "typeInfo": {
            "keys": {
              "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
            },
            "values": {},
            "desc": "Map of FieldNamePath:Number pairs",
            "name": "scores"
          },
          "filteredBy": [
            "withScore"
          ],
          "filters": [
            {
              "type": "with",
              "label": "scores",
              "fieldNamePath": "scores",
              "description": "filter by the supplied score",
              "range": true,
              "name": "withScore",
              "and": true,
              "or": true,
              "valueType": "scores"
            }
          ]
        },
        "custom": {
          "description": "The tenant specific custom fields.  This may be used to hold tenant specific data alongside the document, but it should not be used as a substitute for normal fields.",
          "type": "map",
          "max": 100,
          "fieldName": "custom",
          "fieldNamePath": "custom",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "values": {},
            "desc": "key-value pairs"
          }
        },
        "createdAt": {
          "description": "The timestamp when created",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "createdAt",
          "fieldNamePath": "createdAt",
          "filteredBy": [
            "withCreatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdAt",
              "fieldNamePath": "createdAt",
              "description": "filter by the supplied createdAt",
              "range": true,
              "name": "withCreatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "createdBy": {
          "description": "The user that created",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "createdBy",
          "fieldNamePath": "createdBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withCreatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdBy",
              "fieldNamePath": "createdBy",
              "description": "filter by the supplied createdBy",
              "name": "withCreatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "updatedAt": {
          "description": "The timestamp when last updated",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "updatedAt",
          "fieldNamePath": "updatedAt",
          "filteredBy": [
            "withUpdatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedAt",
              "fieldNamePath": "updatedAt",
              "description": "filter by the supplied updatedAt",
              "range": true,
              "name": "withUpdatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "updatedBy": {
          "description": "The user that last updated",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "updatedBy",
          "fieldNamePath": "updatedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withUpdatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedBy",
              "fieldNamePath": "updatedBy",
              "description": "filter by the supplied updatedBy",
              "name": "withUpdatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "deletedAt": {
          "description": "The timestamp when deleted (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedAt",
          "fieldNamePath": "deletedAt",
          "filteredBy": [
            "withDeletedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedAt",
              "fieldNamePath": "deletedAt",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedAt",
              "range": true,
              "name": "withDeletedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "deletedBy": {
          "description": "The user that deleted (only applicable to deleted  resources)",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedBy",
          "fieldNamePath": "deletedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withDeletedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedBy",
              "fieldNamePath": "deletedBy",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedBy",
              "name": "withDeletedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "reapAt": {
          "description": "The timestamp for reaping (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "reapAt",
          "fieldNamePath": "reapAt",
          "filteredBy": [
            "withReapAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "reapAt",
              "fieldNamePath": "reapAt",
              "prohibited": [
                "enduser",
                "service",
                "admin"
              ],
              "description": "filter by the supplied reapAt",
              "range": true,
              "name": "withReapAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "version": {
          "description": "The version hash (computed)",
          "type": "version",
          "readOnly": true,
          "example": "356b54eb90cd04566159dfb9c95a0426998a2f7b",
          "excludeFromVersion": true,
          "fieldName": "version",
          "fieldNamePath": "version",
          "typeInfo": {
            "desc": "sha1 hex encoded hash",
            "pattern": "[a-f0-9]{40}",
            "name": "version"
          },
          "filteredBy": [
            "withVersion"
          ],
          "filters": [
            {
              "type": "with",
              "label": "version",
              "fieldNamePath": "version",
              "description": "filter by the supplied version",
              "name": "withVersion",
              "and": true,
              "or": true,
              "valueType": "version"
            }
          ]
        },
        "title": {
          "description": "The title of the provider",
          "sort": true,
          "primary": true,
          "type": "string",
          "example": "InDemand",
          "fieldName": "title",
          "fieldNamePath": "title",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withTitle"
          ],
          "filters": [
            {
              "type": "with",
              "label": "title",
              "description": "filter by the supplied title",
              "prefix": true,
              "fieldNamePath": "title",
              "name": "withTitle",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ],
          "localisedBy": "localisedTitle",
          "localises": {
            "description": "The localised title of the provider",
            "example": {
              "en": "InDemand",
              "it": "Sotto domanda"
            },
            "type": "string",
            "localisationOf": "title",
            "fieldName": "localisedTitle",
            "fieldNamePath": "localisedTitle",
            "typeInfo": {
              "keys": {
                "values": [
                  "ar",
                  "de",
                  "de-AT",
                  "de-CH",
                  "el",
                  "en",
                  "es",
                  "fa",
                  "fr",
                  "fr-CH",
                  "hi",
                  "hu",
                  "it",
                  "it-CH",
                  "nl",
                  "ru",
                  "tl",
                  "tr",
                  "vi",
                  "zh"
                ],
                "pattern": "(ar)|(de)|(de-AT)|(de-CH)|(el)|(en)|(es)|(fa)|(fr)|(fr-CH)|(hi)|(hu)|(it)|(it-CH)|(nl)|(ru)|(tl)|(tr)|(vi)|(zh)"
              },
              "values": {},
              "desc": "localised strings"
            }
          }
        },
        "localisedTitle": {
          "description": "The localised title of the provider",
          "example": {
            "en": "InDemand",
            "it": "Sotto domanda"
          },
          "type": "string",
          "localisationOf": "title",
          "fieldName": "localisedTitle",
          "fieldNamePath": "localisedTitle",
          "typeInfo": {
            "keys": {
              "values": [
                "ar",
                "de",
                "de-AT",
                "de-CH",
                "el",
                "en",
                "es",
                "fa",
                "fr",
                "fr-CH",
                "hi",
                "hu",
                "it",
                "it-CH",
                "nl",
                "ru",
                "tl",
                "tr",
                "vi",
                "zh"
              ],
              "pattern": "(ar)|(de)|(de-AT)|(de-CH)|(el)|(en)|(es)|(fa)|(fr)|(fr-CH)|(hi)|(hu)|(it)|(it-CH)|(nl)|(ru)|(tl)|(tr)|(vi)|(zh)"
            },
            "values": {},
            "desc": "localised strings"
          }
        }
      },
      "filters": {
        "q": {
          "type": "q",
          "label": "q",
          "description": "filter by text",
          "includes": [
            "title"
          ],
          "name": "q",
          "valueType": "string",
          "text": true
        },
        "withName": {
          "type": "with",
          "label": "name",
          "fieldNamePath": "name",
          "description": "filter by the supplied name",
          "name": "withName",
          "and": true,
          "or": true,
          "valueType": "name"
        },
        "withRef": {
          "type": "with",
          "label": "ref",
          "fieldNamePath": "ref",
          "description": "filter by the supplied ref",
          "name": "withRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withAlternativeIdentifiers": {
          "type": "with",
          "label": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "description": "filter by the supplied alternative identifiers",
          "prefix": true,
          "name": "withAlternativeIdentifiers",
          "and": true,
          "or": true,
          "valueType": "stringMap"
        },
        "withTags": {
          "type": "with",
          "label": "tags",
          "fieldNamePath": "tags",
          "description": "filter by the supplied tags",
          "name": "withTags",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withScore": {
          "type": "with",
          "label": "scores",
          "fieldNamePath": "scores",
          "description": "filter by the supplied score",
          "range": true,
          "name": "withScore",
          "and": true,
          "or": true,
          "valueType": "scores"
        },
        "withCreatedAt": {
          "type": "with",
          "label": "createdAt",
          "fieldNamePath": "createdAt",
          "description": "filter by the supplied createdAt",
          "range": true,
          "name": "withCreatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withCreatedBy": {
          "type": "with",
          "label": "createdBy",
          "fieldNamePath": "createdBy",
          "description": "filter by the supplied createdBy",
          "name": "withCreatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withUpdatedAt": {
          "type": "with",
          "label": "updatedAt",
          "fieldNamePath": "updatedAt",
          "description": "filter by the supplied updatedAt",
          "range": true,
          "name": "withUpdatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withUpdatedBy": {
          "type": "with",
          "label": "updatedBy",
          "fieldNamePath": "updatedBy",
          "description": "filter by the supplied updatedBy",
          "name": "withUpdatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withDeletedAt": {
          "type": "with",
          "label": "deletedAt",
          "fieldNamePath": "deletedAt",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedAt",
          "range": true,
          "name": "withDeletedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withDeletedBy": {
          "type": "with",
          "label": "deletedBy",
          "fieldNamePath": "deletedBy",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedBy",
          "name": "withDeletedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withReapAt": {
          "type": "with",
          "label": "reapAt",
          "fieldNamePath": "reapAt",
          "prohibited": [
            "enduser",
            "service",
            "admin"
          ],
          "description": "filter by the supplied reapAt",
          "range": true,
          "name": "withReapAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withVersion": {
          "type": "with",
          "label": "version",
          "fieldNamePath": "version",
          "description": "filter by the supplied version",
          "name": "withVersion",
          "and": true,
          "or": true,
          "valueType": "version"
        },
        "withTitle": {
          "type": "with",
          "label": "title",
          "description": "filter by the supplied title",
          "prefix": true,
          "fieldNamePath": "title",
          "name": "withTitle",
          "and": true,
          "or": true,
          "valueType": "string"
        }
      },
      "restrictions": [
        {
          "type": "ownership",
          "message": "must contain an owner for which you have permission",
          "description": "users can only interact with resources that are owned by a tenant they have access to"
        },
        {
          "type": "unmodifiable",
          "message": "not allowed to modify resources created by root:root",
          "description": "users are not allowed to modify resources that were created by root:root"
        },
        {
          "type": "primaryKey",
          "message": "primaryKey must be unique",
          "description": "the primary key (ref) is derived from owner and name, allowing name to be a tenant specific unique external id"
        },
        {
          "type": "readOnly",
          "userTypes": [
            "enduser"
          ],
          "message": "end user type is not permitted to write to assets",
          "description": "end user type is not permitted to write to assets"
        }
      ],
      "relationships": {
        "contents": {
          "description": "The contents that have a reference to this provider",
          "type": "indirect",
          "resourceType": "contents",
          "filterName": "withProviderRef",
          "fields": [
            "ref",
            "title",
            "parentRef",
            "memberRefs",
            "type"
          ],
          "batchSize": 10,
          "name": "contents"
        },
        "channels": {
          "description": "The channels that have a reference to this provider",
          "type": "indirect",
          "resourceType": "channels",
          "filterName": "withProviderRef",
          "fields": [
            "ref",
            "title"
          ],
          "batchSize": 10,
          "name": "channels"
        }
      },
      "description": "Represents a provider",
      "singularName": "provider",
      "serviceName": "metadata",
      "pluralName": "providers",
      "hyphenatedPluralName": "providers",
      "displaySingularName": "provider",
      "displayPluralName": "providers",
      "retentionPeriod": "P30D",
      "typeInfo": {}
    },
    "roles": {
      "path": "/data",
      "consistency": "eventual",
      "stability": "stable",
      "displayPriority": 4,
      "operations": {
        "browse": {
          "description": "Fetches a list of roles that may be filtered",
          "actions": [
            "metadata:roles:read",
            "metadata:roles:read:browse"
          ]
        },
        "get": {
          "description": "Fetches one or more roles using the supplied id(s)",
          "actions": [
            "metadata:roles:read",
            "metadata:roles:read:get"
          ]
        },
        "storeBatch": {
          "description": "Stores one or more roles, either creating or wholly replacing",
          "actions": [
            "metadata:roles:write",
            "metadata:roles:write:store",
            "metadata:roles:write:store:batch"
          ],
          "limit": 100
        },
        "storeOne": {
          "description": "Stores the supplied role with the supplied id, either creating or wholly replacing",
          "actions": [
            "metadata:roles:write",
            "metadata:roles:write:store",
            "metadata:roles:write:store:one"
          ]
        },
        "patch": {
          "enabled": false,
          "description": "Partially updates the existing stored role with the supplied id",
          "actions": [
            "metadata:roles:write",
            "metadata:roles:write:store",
            "metadata:roles:write:store:patch"
          ]
        },
        "delete": {
          "description": "Delete one or more roles using the supplied id(s)",
          "actions": [
            "metadata:roles:write",
            "metadata:roles:write:delete"
          ]
        }
      },
      "pagination": {
        "pageSize": {
          "min": 1,
          "max": 100,
          "default": 100
        },
        "pages": {
          "max": 1000
        }
      },
      "display": {
        "priority": 4,
        "overview": {
          "label": "title"
        },
        "info": {
          "primary": [
            "ref",
            "owner",
            "name"
          ],
          "secondary": [
            "alternativeIdentifiers",
            "tags",
            "custom"
          ],
          "history": [
            "createdAt",
            "createdBy",
            "updatedAt",
            "updatedBy",
            "deletedAt",
            "deletedBy",
            "reapAt",
            "version"
          ]
        },
        "singularName": "role",
        "pluralName": "roles"
      },
      "fields": {
        "ref": {
          "description": "The derived owner:name reference",
          "type": "ref",
          "readOnly": true,
          "example": "test:resource-name",
          "fieldName": "ref",
          "fieldNamePath": "ref",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withRef"
          ],
          "filters": [
            {
              "type": "with",
              "label": "ref",
              "fieldNamePath": "ref",
              "description": "filter by the supplied ref",
              "name": "withRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "alternativeIdentifiers": {
          "type": "stringMap",
          "description": "A map of alternative identifiers for this resource",
          "example": {
            "tel": "0800100100",
            "said": "something"
          },
          "fieldName": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "desc": "key-value pairs",
            "name": "stringMap"
          },
          "filteredBy": [
            "withAlternativeIdentifiers"
          ],
          "filters": [
            {
              "type": "with",
              "label": "alternativeIdentifiers",
              "fieldNamePath": "alternativeIdentifiers",
              "description": "filter by the supplied alternative identifiers",
              "prefix": true,
              "name": "withAlternativeIdentifiers",
              "and": true,
              "or": true,
              "valueType": "stringMap"
            }
          ]
        },
        "owner": {
          "description": "The tenant owner name",
          "type": "name",
          "required": true,
          "sort": true,
          "example": "test",
          "fieldName": "owner",
          "fieldNamePath": "owner",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          }
        },
        "name": {
          "description": "The tenant specific unique name",
          "type": "name",
          "sort": true,
          "example": "resource-name",
          "fieldName": "name",
          "fieldNamePath": "name",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          },
          "filteredBy": [
            "withName"
          ],
          "filters": [
            {
              "type": "with",
              "label": "name",
              "fieldNamePath": "name",
              "description": "filter by the supplied name",
              "name": "withName",
              "and": true,
              "or": true,
              "valueType": "name"
            }
          ]
        },
        "tags": {
          "description": "tags for the resource",
          "type": "string",
          "array": true,
          "example": [
            "todo",
            "usage:boxart"
          ],
          "fieldName": "tags",
          "fieldNamePath": "tags",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withTags"
          ],
          "filters": [
            {
              "type": "with",
              "label": "tags",
              "fieldNamePath": "tags",
              "description": "filter by the supplied tags",
              "name": "withTags",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "scores": {
          "description": "scores for the resource",
          "type": "scores",
          "example": {
            "imdb.a3431": 0.9,
            "fuse": 2
          },
          "fieldName": "scores",
          "fieldNamePath": "scores",
          "typeInfo": {
            "keys": {
              "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
            },
            "values": {},
            "desc": "Map of FieldNamePath:Number pairs",
            "name": "scores"
          },
          "filteredBy": [
            "withScore"
          ],
          "filters": [
            {
              "type": "with",
              "label": "scores",
              "fieldNamePath": "scores",
              "description": "filter by the supplied score",
              "range": true,
              "name": "withScore",
              "and": true,
              "or": true,
              "valueType": "scores"
            }
          ]
        },
        "custom": {
          "description": "The tenant specific custom fields.  This may be used to hold tenant specific data alongside the document, but it should not be used as a substitute for normal fields.",
          "type": "map",
          "max": 100,
          "fieldName": "custom",
          "fieldNamePath": "custom",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "values": {},
            "desc": "key-value pairs"
          }
        },
        "createdAt": {
          "description": "The timestamp when created",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "createdAt",
          "fieldNamePath": "createdAt",
          "filteredBy": [
            "withCreatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdAt",
              "fieldNamePath": "createdAt",
              "description": "filter by the supplied createdAt",
              "range": true,
              "name": "withCreatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "createdBy": {
          "description": "The user that created",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "createdBy",
          "fieldNamePath": "createdBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withCreatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdBy",
              "fieldNamePath": "createdBy",
              "description": "filter by the supplied createdBy",
              "name": "withCreatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "updatedAt": {
          "description": "The timestamp when last updated",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "updatedAt",
          "fieldNamePath": "updatedAt",
          "filteredBy": [
            "withUpdatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedAt",
              "fieldNamePath": "updatedAt",
              "description": "filter by the supplied updatedAt",
              "range": true,
              "name": "withUpdatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "updatedBy": {
          "description": "The user that last updated",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "updatedBy",
          "fieldNamePath": "updatedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withUpdatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedBy",
              "fieldNamePath": "updatedBy",
              "description": "filter by the supplied updatedBy",
              "name": "withUpdatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "deletedAt": {
          "description": "The timestamp when deleted (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedAt",
          "fieldNamePath": "deletedAt",
          "filteredBy": [
            "withDeletedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedAt",
              "fieldNamePath": "deletedAt",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedAt",
              "range": true,
              "name": "withDeletedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "deletedBy": {
          "description": "The user that deleted (only applicable to deleted  resources)",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedBy",
          "fieldNamePath": "deletedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withDeletedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedBy",
              "fieldNamePath": "deletedBy",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedBy",
              "name": "withDeletedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "reapAt": {
          "description": "The timestamp for reaping (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "reapAt",
          "fieldNamePath": "reapAt",
          "filteredBy": [
            "withReapAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "reapAt",
              "fieldNamePath": "reapAt",
              "prohibited": [
                "enduser",
                "service",
                "admin"
              ],
              "description": "filter by the supplied reapAt",
              "range": true,
              "name": "withReapAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "version": {
          "description": "The version hash (computed)",
          "type": "version",
          "readOnly": true,
          "example": "356b54eb90cd04566159dfb9c95a0426998a2f7b",
          "excludeFromVersion": true,
          "fieldName": "version",
          "fieldNamePath": "version",
          "typeInfo": {
            "desc": "sha1 hex encoded hash",
            "pattern": "[a-f0-9]{40}",
            "name": "version"
          },
          "filteredBy": [
            "withVersion"
          ],
          "filters": [
            {
              "type": "with",
              "label": "version",
              "fieldNamePath": "version",
              "description": "filter by the supplied version",
              "name": "withVersion",
              "and": true,
              "or": true,
              "valueType": "version"
            }
          ]
        },
        "title": {
          "description": "The title of the role",
          "sort": true,
          "primary": true,
          "type": "string",
          "example": "Actor",
          "fieldName": "title",
          "fieldNamePath": "title",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withTitle"
          ],
          "filters": [
            {
              "type": "with",
              "label": "title",
              "description": "filter by the supplied title",
              "prefix": true,
              "fieldNamePath": "title",
              "name": "withTitle",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ],
          "localisedBy": "localisedTitle",
          "localises": {
            "description": "The localised title of the role",
            "example": {
              "en": "Actor",
              "it": "Attore"
            },
            "type": "string",
            "localisationOf": "title",
            "fieldName": "localisedTitle",
            "fieldNamePath": "localisedTitle",
            "typeInfo": {
              "keys": {
                "values": [
                  "ar",
                  "de",
                  "de-AT",
                  "de-CH",
                  "el",
                  "en",
                  "es",
                  "fa",
                  "fr",
                  "fr-CH",
                  "hi",
                  "hu",
                  "it",
                  "it-CH",
                  "nl",
                  "ru",
                  "tl",
                  "tr",
                  "vi",
                  "zh"
                ],
                "pattern": "(ar)|(de)|(de-AT)|(de-CH)|(el)|(en)|(es)|(fa)|(fr)|(fr-CH)|(hi)|(hu)|(it)|(it-CH)|(nl)|(ru)|(tl)|(tr)|(vi)|(zh)"
              },
              "values": {},
              "desc": "localised strings"
            }
          }
        },
        "localisedTitle": {
          "description": "The localised title of the role",
          "example": {
            "en": "Actor",
            "it": "Attore"
          },
          "type": "string",
          "localisationOf": "title",
          "fieldName": "localisedTitle",
          "fieldNamePath": "localisedTitle",
          "typeInfo": {
            "keys": {
              "values": [
                "ar",
                "de",
                "de-AT",
                "de-CH",
                "el",
                "en",
                "es",
                "fa",
                "fr",
                "fr-CH",
                "hi",
                "hu",
                "it",
                "it-CH",
                "nl",
                "ru",
                "tl",
                "tr",
                "vi",
                "zh"
              ],
              "pattern": "(ar)|(de)|(de-AT)|(de-CH)|(el)|(en)|(es)|(fa)|(fr)|(fr-CH)|(hi)|(hu)|(it)|(it-CH)|(nl)|(ru)|(tl)|(tr)|(vi)|(zh)"
            },
            "values": {},
            "desc": "localised strings"
          }
        }
      },
      "filters": {
        "q": {
          "type": "q",
          "label": "q",
          "description": "filter by text",
          "includes": [
            "title"
          ],
          "name": "q",
          "valueType": "string",
          "text": true
        },
        "withName": {
          "type": "with",
          "label": "name",
          "fieldNamePath": "name",
          "description": "filter by the supplied name",
          "name": "withName",
          "and": true,
          "or": true,
          "valueType": "name"
        },
        "withRef": {
          "type": "with",
          "label": "ref",
          "fieldNamePath": "ref",
          "description": "filter by the supplied ref",
          "name": "withRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withAlternativeIdentifiers": {
          "type": "with",
          "label": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "description": "filter by the supplied alternative identifiers",
          "prefix": true,
          "name": "withAlternativeIdentifiers",
          "and": true,
          "or": true,
          "valueType": "stringMap"
        },
        "withTags": {
          "type": "with",
          "label": "tags",
          "fieldNamePath": "tags",
          "description": "filter by the supplied tags",
          "name": "withTags",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withScore": {
          "type": "with",
          "label": "scores",
          "fieldNamePath": "scores",
          "description": "filter by the supplied score",
          "range": true,
          "name": "withScore",
          "and": true,
          "or": true,
          "valueType": "scores"
        },
        "withCreatedAt": {
          "type": "with",
          "label": "createdAt",
          "fieldNamePath": "createdAt",
          "description": "filter by the supplied createdAt",
          "range": true,
          "name": "withCreatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withCreatedBy": {
          "type": "with",
          "label": "createdBy",
          "fieldNamePath": "createdBy",
          "description": "filter by the supplied createdBy",
          "name": "withCreatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withUpdatedAt": {
          "type": "with",
          "label": "updatedAt",
          "fieldNamePath": "updatedAt",
          "description": "filter by the supplied updatedAt",
          "range": true,
          "name": "withUpdatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withUpdatedBy": {
          "type": "with",
          "label": "updatedBy",
          "fieldNamePath": "updatedBy",
          "description": "filter by the supplied updatedBy",
          "name": "withUpdatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withDeletedAt": {
          "type": "with",
          "label": "deletedAt",
          "fieldNamePath": "deletedAt",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedAt",
          "range": true,
          "name": "withDeletedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withDeletedBy": {
          "type": "with",
          "label": "deletedBy",
          "fieldNamePath": "deletedBy",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedBy",
          "name": "withDeletedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withReapAt": {
          "type": "with",
          "label": "reapAt",
          "fieldNamePath": "reapAt",
          "prohibited": [
            "enduser",
            "service",
            "admin"
          ],
          "description": "filter by the supplied reapAt",
          "range": true,
          "name": "withReapAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withVersion": {
          "type": "with",
          "label": "version",
          "fieldNamePath": "version",
          "description": "filter by the supplied version",
          "name": "withVersion",
          "and": true,
          "or": true,
          "valueType": "version"
        },
        "withTitle": {
          "type": "with",
          "label": "title",
          "description": "filter by the supplied title",
          "prefix": true,
          "fieldNamePath": "title",
          "name": "withTitle",
          "and": true,
          "or": true,
          "valueType": "string"
        }
      },
      "restrictions": [
        {
          "type": "ownership",
          "message": "must contain an owner for which you have permission",
          "description": "users can only interact with resources that are owned by a tenant they have access to"
        },
        {
          "type": "unmodifiable",
          "message": "not allowed to modify resources created by root:root",
          "description": "users are not allowed to modify resources that were created by root:root"
        },
        {
          "type": "primaryKey",
          "message": "primaryKey must be unique",
          "description": "the primary key (ref) is derived from owner and name, allowing name to be a tenant specific unique external id"
        },
        {
          "type": "readOnly",
          "userTypes": [
            "enduser"
          ],
          "message": "end user type is not permitted to write to assets",
          "description": "end user type is not permitted to write to assets"
        }
      ],
      "relationships": {
        "credits": {
          "description": "The credits that are referencing this role",
          "type": "indirect",
          "resourceType": "credits",
          "filterName": "withRoleRef",
          "fields": [
            "ref",
            "characterName"
          ],
          "batchSize": 10,
          "name": "credits"
        }
      },
      "description": "Represents a role",
      "singularName": "role",
      "serviceName": "metadata",
      "pluralName": "roles",
      "hyphenatedPluralName": "roles",
      "displaySingularName": "role",
      "displayPluralName": "roles",
      "retentionPeriod": "P30D",
      "typeInfo": {}
    },
    "segments": {
      "path": "/data",
      "consistency": "eventual",
      "stability": "experimental",
      "displayPriority": 4,
      "operations": {
        "browse": {
          "description": "Fetches a list of segments that may be filtered",
          "actions": [
            "metadata:segments:read",
            "metadata:segments:read:browse"
          ]
        },
        "get": {
          "description": "Fetches one or more segments using the supplied id(s)",
          "actions": [
            "metadata:segments:read",
            "metadata:segments:read:get"
          ]
        },
        "storeBatch": {
          "description": "Stores one or more segments, either creating or wholly replacing",
          "actions": [
            "metadata:segments:write",
            "metadata:segments:write:store",
            "metadata:segments:write:store:batch"
          ],
          "limit": 100
        },
        "storeOne": {
          "description": "Stores the supplied segment with the supplied id, either creating or wholly replacing",
          "actions": [
            "metadata:segments:write",
            "metadata:segments:write:store",
            "metadata:segments:write:store:one"
          ]
        },
        "patch": {
          "enabled": false,
          "description": "Partially updates the existing stored segment with the supplied id",
          "actions": [
            "metadata:segments:write",
            "metadata:segments:write:store",
            "metadata:segments:write:store:patch"
          ]
        },
        "delete": {
          "description": "Delete one or more segments using the supplied id(s)",
          "actions": [
            "metadata:segments:write",
            "metadata:segments:write:delete"
          ]
        }
      },
      "pagination": {
        "pageSize": {
          "min": 1,
          "max": 100,
          "default": 100
        },
        "pages": {
          "max": 1000
        }
      },
      "display": {
        "priority": 4,
        "overview": {
          "label": "title",
          "quickInfo": [
            "type"
          ],
          "other": [
            "contentRef",
            "startOffset",
            "endOffset"
          ]
        },
        "info": {
          "primary": [
            "ref",
            "owner",
            "name"
          ],
          "secondary": [
            "alternativeIdentifiers",
            "tags",
            "custom"
          ],
          "history": [
            "createdAt",
            "createdBy",
            "updatedAt",
            "updatedBy",
            "deletedAt",
            "deletedBy",
            "reapAt",
            "version"
          ]
        },
        "singularName": "segment",
        "pluralName": "segments",
        "grouping": "type"
      },
      "fields": {
        "ref": {
          "description": "The derived owner:name reference",
          "type": "ref",
          "readOnly": true,
          "example": "test:resource-name",
          "fieldName": "ref",
          "fieldNamePath": "ref",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withRef"
          ],
          "filters": [
            {
              "type": "with",
              "label": "ref",
              "fieldNamePath": "ref",
              "description": "filter by the supplied ref",
              "name": "withRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "alternativeIdentifiers": {
          "type": "stringMap",
          "description": "A map of alternative identifiers for this resource",
          "example": {
            "tel": "0800100100",
            "said": "something"
          },
          "fieldName": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "desc": "key-value pairs",
            "name": "stringMap"
          },
          "filteredBy": [
            "withAlternativeIdentifiers"
          ],
          "filters": [
            {
              "type": "with",
              "label": "alternativeIdentifiers",
              "fieldNamePath": "alternativeIdentifiers",
              "description": "filter by the supplied alternative identifiers",
              "prefix": true,
              "name": "withAlternativeIdentifiers",
              "and": true,
              "or": true,
              "valueType": "stringMap"
            }
          ]
        },
        "owner": {
          "description": "The tenant owner name",
          "type": "name",
          "required": true,
          "sort": true,
          "example": "test",
          "fieldName": "owner",
          "fieldNamePath": "owner",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          }
        },
        "name": {
          "description": "The tenant specific unique name",
          "type": "name",
          "sort": true,
          "example": "resource-name",
          "fieldName": "name",
          "fieldNamePath": "name",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          },
          "filteredBy": [
            "withName"
          ],
          "filters": [
            {
              "type": "with",
              "label": "name",
              "fieldNamePath": "name",
              "description": "filter by the supplied name",
              "name": "withName",
              "and": true,
              "or": true,
              "valueType": "name"
            }
          ]
        },
        "tags": {
          "description": "tags for the resource",
          "type": "string",
          "array": true,
          "example": [
            "todo",
            "usage:boxart"
          ],
          "fieldName": "tags",
          "fieldNamePath": "tags",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withTags"
          ],
          "filters": [
            {
              "type": "with",
              "label": "tags",
              "fieldNamePath": "tags",
              "description": "filter by the supplied tags",
              "name": "withTags",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "scores": {
          "description": "scores for the resource",
          "type": "scores",
          "example": {
            "imdb.a3431": 0.9,
            "fuse": 2
          },
          "fieldName": "scores",
          "fieldNamePath": "scores",
          "typeInfo": {
            "keys": {
              "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
            },
            "values": {},
            "desc": "Map of FieldNamePath:Number pairs",
            "name": "scores"
          },
          "filteredBy": [
            "withScore"
          ],
          "filters": [
            {
              "type": "with",
              "label": "scores",
              "fieldNamePath": "scores",
              "description": "filter by the supplied score",
              "range": true,
              "name": "withScore",
              "and": true,
              "or": true,
              "valueType": "scores"
            }
          ]
        },
        "custom": {
          "description": "The tenant specific custom fields.  This may be used to hold tenant specific data alongside the document, but it should not be used as a substitute for normal fields.",
          "type": "map",
          "max": 100,
          "fieldName": "custom",
          "fieldNamePath": "custom",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "values": {},
            "desc": "key-value pairs"
          }
        },
        "createdAt": {
          "description": "The timestamp when created",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "createdAt",
          "fieldNamePath": "createdAt",
          "filteredBy": [
            "withCreatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdAt",
              "fieldNamePath": "createdAt",
              "description": "filter by the supplied createdAt",
              "range": true,
              "name": "withCreatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "createdBy": {
          "description": "The user that created",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "createdBy",
          "fieldNamePath": "createdBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withCreatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdBy",
              "fieldNamePath": "createdBy",
              "description": "filter by the supplied createdBy",
              "name": "withCreatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "updatedAt": {
          "description": "The timestamp when last updated",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "updatedAt",
          "fieldNamePath": "updatedAt",
          "filteredBy": [
            "withUpdatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedAt",
              "fieldNamePath": "updatedAt",
              "description": "filter by the supplied updatedAt",
              "range": true,
              "name": "withUpdatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "updatedBy": {
          "description": "The user that last updated",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "updatedBy",
          "fieldNamePath": "updatedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withUpdatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedBy",
              "fieldNamePath": "updatedBy",
              "description": "filter by the supplied updatedBy",
              "name": "withUpdatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "deletedAt": {
          "description": "The timestamp when deleted (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedAt",
          "fieldNamePath": "deletedAt",
          "filteredBy": [
            "withDeletedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedAt",
              "fieldNamePath": "deletedAt",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedAt",
              "range": true,
              "name": "withDeletedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "deletedBy": {
          "description": "The user that deleted (only applicable to deleted  resources)",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedBy",
          "fieldNamePath": "deletedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withDeletedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedBy",
              "fieldNamePath": "deletedBy",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedBy",
              "name": "withDeletedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "reapAt": {
          "description": "The timestamp for reaping (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "reapAt",
          "fieldNamePath": "reapAt",
          "filteredBy": [
            "withReapAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "reapAt",
              "fieldNamePath": "reapAt",
              "prohibited": [
                "enduser",
                "service",
                "admin"
              ],
              "description": "filter by the supplied reapAt",
              "range": true,
              "name": "withReapAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "version": {
          "description": "The version hash (computed)",
          "type": "version",
          "readOnly": true,
          "example": "356b54eb90cd04566159dfb9c95a0426998a2f7b",
          "excludeFromVersion": true,
          "fieldName": "version",
          "fieldNamePath": "version",
          "typeInfo": {
            "desc": "sha1 hex encoded hash",
            "pattern": "[a-f0-9]{40}",
            "name": "version"
          },
          "filteredBy": [
            "withVersion"
          ],
          "filters": [
            {
              "type": "with",
              "label": "version",
              "fieldNamePath": "version",
              "description": "filter by the supplied version",
              "name": "withVersion",
              "and": true,
              "or": true,
              "valueType": "version"
            }
          ]
        },
        "type": {
          "description": "The type of the segment",
          "type": "string",
          "countable": true,
          "allowedValues": [
            {
              "value": "adbreak",
              "alternatives": [],
              "label": "adbreak",
              "description": "adbreak"
            },
            {
              "value": "annotation",
              "alternatives": [],
              "label": "annotation",
              "description": "annotation"
            },
            {
              "value": "chapter",
              "alternatives": [],
              "label": "chapter",
              "description": "chapter"
            },
            {
              "value": "subtitle",
              "alternatives": [],
              "label": "subtitle",
              "description": "subtitle"
            },
            {
              "value": "other",
              "alternatives": [],
              "label": "other",
              "description": "other"
            }
          ],
          "required": true,
          "example": "adbreak",
          "fieldName": "type",
          "fieldNamePath": "type",
          "allowedValueMappings": {
            "adbreak": "adbreak",
            "annotation": "annotation",
            "chapter": "chapter",
            "subtitle": "subtitle",
            "other": "other"
          },
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withType"
          ],
          "filters": [
            {
              "type": "with",
              "label": "type",
              "description": "filter by the supplied content type",
              "fieldNamePath": "type",
              "name": "withType",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "title": {
          "description": "The title of the segment",
          "sort": true,
          "primary": true,
          "type": "string",
          "example": "AdBreak Superbowl 1",
          "fieldName": "title",
          "fieldNamePath": "title",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withTitle"
          ],
          "filters": [
            {
              "type": "with",
              "label": "title",
              "description": "filter by the supplied title",
              "prefix": true,
              "fieldNamePath": "title",
              "name": "withTitle",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ],
          "localisedBy": "localisedTitle",
          "localises": {
            "description": "The localised title of the segment",
            "example": {
              "en": "AdBreak",
              "it": "Pubblicità",
              "hu": "Reklám"
            },
            "type": "string",
            "localisationOf": "title",
            "fieldName": "localisedTitle",
            "fieldNamePath": "localisedTitle",
            "typeInfo": {
              "keys": {
                "values": [
                  "ar",
                  "de",
                  "de-AT",
                  "de-CH",
                  "el",
                  "en",
                  "es",
                  "fa",
                  "fr",
                  "fr-CH",
                  "hi",
                  "hu",
                  "it",
                  "it-CH",
                  "nl",
                  "ru",
                  "tl",
                  "tr",
                  "vi",
                  "zh"
                ],
                "pattern": "(ar)|(de)|(de-AT)|(de-CH)|(el)|(en)|(es)|(fa)|(fr)|(fr-CH)|(hi)|(hu)|(it)|(it-CH)|(nl)|(ru)|(tl)|(tr)|(vi)|(zh)"
              },
              "values": {},
              "desc": "localised strings"
            }
          }
        },
        "localisedTitle": {
          "description": "The localised title of the segment",
          "example": {
            "en": "AdBreak",
            "it": "Pubblicità",
            "hu": "Reklám"
          },
          "type": "string",
          "localisationOf": "title",
          "fieldName": "localisedTitle",
          "fieldNamePath": "localisedTitle",
          "typeInfo": {
            "keys": {
              "values": [
                "ar",
                "de",
                "de-AT",
                "de-CH",
                "el",
                "en",
                "es",
                "fa",
                "fr",
                "fr-CH",
                "hi",
                "hu",
                "it",
                "it-CH",
                "nl",
                "ru",
                "tl",
                "tr",
                "vi",
                "zh"
              ],
              "pattern": "(ar)|(de)|(de-AT)|(de-CH)|(el)|(en)|(es)|(fa)|(fr)|(fr-CH)|(hi)|(hu)|(it)|(it-CH)|(nl)|(ru)|(tl)|(tr)|(vi)|(zh)"
            },
            "values": {},
            "desc": "localised strings"
          }
        },
        "description": {
          "description": "The description of the segment",
          "type": "string",
          "example": "The segment description",
          "fieldName": "description",
          "fieldNamePath": "description",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "localisedBy": "localisedDescription",
          "localises": {
            "description": "The localised description of the segment",
            "example": {
              "en": "The segment description",
              "it": "The segment description"
            },
            "type": "string",
            "localisationOf": "description",
            "fieldName": "localisedDescription",
            "fieldNamePath": "localisedDescription",
            "typeInfo": {
              "keys": {
                "values": [
                  "ar",
                  "de",
                  "de-AT",
                  "de-CH",
                  "el",
                  "en",
                  "es",
                  "fa",
                  "fr",
                  "fr-CH",
                  "hi",
                  "hu",
                  "it",
                  "it-CH",
                  "nl",
                  "ru",
                  "tl",
                  "tr",
                  "vi",
                  "zh"
                ],
                "pattern": "(ar)|(de)|(de-AT)|(de-CH)|(el)|(en)|(es)|(fa)|(fr)|(fr-CH)|(hi)|(hu)|(it)|(it-CH)|(nl)|(ru)|(tl)|(tr)|(vi)|(zh)"
              },
              "values": {},
              "desc": "localised strings"
            }
          }
        },
        "localisedDescription": {
          "description": "The localised description of the segment",
          "example": {
            "en": "The segment description",
            "it": "The segment description"
          },
          "type": "string",
          "localisationOf": "description",
          "fieldName": "localisedDescription",
          "fieldNamePath": "localisedDescription",
          "typeInfo": {
            "keys": {
              "values": [
                "ar",
                "de",
                "de-AT",
                "de-CH",
                "el",
                "en",
                "es",
                "fa",
                "fr",
                "fr-CH",
                "hi",
                "hu",
                "it",
                "it-CH",
                "nl",
                "ru",
                "tl",
                "tr",
                "vi",
                "zh"
              ],
              "pattern": "(ar)|(de)|(de-AT)|(de-CH)|(el)|(en)|(es)|(fa)|(fr)|(fr-CH)|(hi)|(hu)|(it)|(it-CH)|(nl)|(ru)|(tl)|(tr)|(vi)|(zh)"
            },
            "values": {},
            "desc": "localised strings"
          }
        },
        "startOffset": {
          "description": "Offset from the start of the content in milliseconds for the start of the segment",
          "type": "nonNegativeInteger",
          "example": 0,
          "fieldName": "startOffset",
          "fieldNamePath": "startOffset",
          "typeInfo": {
            "desc": "non-negative integer",
            "pattern": "\\d+",
            "name": "nonNegativeInteger"
          }
        },
        "endOffset": {
          "description": "Offset from the start of the content in milliseconds for the end of the segment",
          "type": "nonNegativeInteger",
          "example": 10000,
          "fieldName": "endOffset",
          "fieldNamePath": "endOffset",
          "typeInfo": {
            "desc": "non-negative integer",
            "pattern": "\\d+",
            "name": "nonNegativeInteger"
          }
        },
        "contentRef": {
          "description": "The references to the contents of this segment",
          "type": "ref",
          "required": true,
          "example": "test:content-1",
          "fieldName": "contentRef",
          "fieldNamePath": "contentRef",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "relatedBy": [
            "content"
          ],
          "relationships": [
            {
              "description": "The associated contents",
              "type": "direct",
              "resourceType": "contents",
              "fieldNamePath": "contentRef",
              "fields": [
                "ref",
                "title",
                "parentRef",
                "memberRefs",
                "type"
              ],
              "batchSize": 10,
              "name": "content"
            }
          ],
          "filteredBy": [
            "withContentRef"
          ],
          "filters": [
            {
              "type": "with",
              "label": "contentRef",
              "description": "filter by the supplied content ref",
              "fieldNamePath": "contentRef",
              "name": "withContentRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        }
      },
      "filters": {
        "q": {
          "type": "q",
          "label": "q",
          "description": "filter by text",
          "includes": [
            "title"
          ],
          "name": "q",
          "valueType": "string",
          "text": true
        },
        "withName": {
          "type": "with",
          "label": "name",
          "fieldNamePath": "name",
          "description": "filter by the supplied name",
          "name": "withName",
          "and": true,
          "or": true,
          "valueType": "name"
        },
        "withRef": {
          "type": "with",
          "label": "ref",
          "fieldNamePath": "ref",
          "description": "filter by the supplied ref",
          "name": "withRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withAlternativeIdentifiers": {
          "type": "with",
          "label": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "description": "filter by the supplied alternative identifiers",
          "prefix": true,
          "name": "withAlternativeIdentifiers",
          "and": true,
          "or": true,
          "valueType": "stringMap"
        },
        "withTags": {
          "type": "with",
          "label": "tags",
          "fieldNamePath": "tags",
          "description": "filter by the supplied tags",
          "name": "withTags",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withScore": {
          "type": "with",
          "label": "scores",
          "fieldNamePath": "scores",
          "description": "filter by the supplied score",
          "range": true,
          "name": "withScore",
          "and": true,
          "or": true,
          "valueType": "scores"
        },
        "withCreatedAt": {
          "type": "with",
          "label": "createdAt",
          "fieldNamePath": "createdAt",
          "description": "filter by the supplied createdAt",
          "range": true,
          "name": "withCreatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withCreatedBy": {
          "type": "with",
          "label": "createdBy",
          "fieldNamePath": "createdBy",
          "description": "filter by the supplied createdBy",
          "name": "withCreatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withUpdatedAt": {
          "type": "with",
          "label": "updatedAt",
          "fieldNamePath": "updatedAt",
          "description": "filter by the supplied updatedAt",
          "range": true,
          "name": "withUpdatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withUpdatedBy": {
          "type": "with",
          "label": "updatedBy",
          "fieldNamePath": "updatedBy",
          "description": "filter by the supplied updatedBy",
          "name": "withUpdatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withDeletedAt": {
          "type": "with",
          "label": "deletedAt",
          "fieldNamePath": "deletedAt",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedAt",
          "range": true,
          "name": "withDeletedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withDeletedBy": {
          "type": "with",
          "label": "deletedBy",
          "fieldNamePath": "deletedBy",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedBy",
          "name": "withDeletedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withReapAt": {
          "type": "with",
          "label": "reapAt",
          "fieldNamePath": "reapAt",
          "prohibited": [
            "enduser",
            "service",
            "admin"
          ],
          "description": "filter by the supplied reapAt",
          "range": true,
          "name": "withReapAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withVersion": {
          "type": "with",
          "label": "version",
          "fieldNamePath": "version",
          "description": "filter by the supplied version",
          "name": "withVersion",
          "and": true,
          "or": true,
          "valueType": "version"
        },
        "withType": {
          "type": "with",
          "label": "type",
          "description": "filter by the supplied content type",
          "fieldNamePath": "type",
          "name": "withType",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withTitle": {
          "type": "with",
          "label": "title",
          "description": "filter by the supplied title",
          "prefix": true,
          "fieldNamePath": "title",
          "name": "withTitle",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withContentRef": {
          "type": "with",
          "label": "contentRef",
          "description": "filter by the supplied content ref",
          "fieldNamePath": "contentRef",
          "name": "withContentRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        }
      },
      "restrictions": [
        {
          "type": "ownership",
          "message": "must contain an owner for which you have permission",
          "description": "users can only interact with resources that are owned by a tenant they have access to"
        },
        {
          "type": "unmodifiable",
          "message": "not allowed to modify resources created by root:root",
          "description": "users are not allowed to modify resources that were created by root:root"
        },
        {
          "type": "primaryKey",
          "message": "primaryKey must be unique",
          "description": "the primary key (ref) is derived from owner and name, allowing name to be a tenant specific unique external id"
        },
        {
          "type": "readOnly",
          "userTypes": [
            "enduser"
          ],
          "message": "end user type is not permitted to write to assets",
          "description": "end user type is not permitted to write to assets"
        }
      ],
      "relationships": {
        "content": {
          "description": "The associated contents",
          "type": "direct",
          "resourceType": "contents",
          "fieldNamePath": "contentRef",
          "fields": [
            "ref",
            "title",
            "parentRef",
            "memberRefs",
            "type"
          ],
          "batchSize": 10,
          "name": "content"
        }
      },
      "description": "Represents a segment of a content",
      "singularName": "segment",
      "pluralName": "segments",
      "serviceName": "metadata",
      "parameterisedBy": "type",
      "hyphenatedPluralName": "segments",
      "displaySingularName": "segment",
      "displayPluralName": "segments",
      "retentionPeriod": "P30D",
      "typeInfo": {}
    },
    "terms": {
      "path": "/data",
      "consistency": "eventual",
      "stability": "experimental",
      "displayPriority": 4,
      "operations": {
        "browse": {
          "description": "Fetches a list of terms that may be filtered",
          "actions": [
            "metadata:terms:read",
            "metadata:terms:read:browse"
          ]
        },
        "get": {
          "description": "Fetches one or more terms using the supplied id(s)",
          "actions": [
            "metadata:terms:read",
            "metadata:terms:read:get"
          ]
        },
        "storeBatch": {
          "description": "Stores one or more terms, either creating or wholly replacing",
          "actions": [
            "metadata:terms:write",
            "metadata:terms:write:store",
            "metadata:terms:write:store:batch"
          ],
          "limit": 100
        },
        "storeOne": {
          "description": "Stores the supplied term with the supplied id, either creating or wholly replacing",
          "actions": [
            "metadata:terms:write",
            "metadata:terms:write:store",
            "metadata:terms:write:store:one"
          ]
        },
        "patch": {
          "enabled": false,
          "description": "Partially updates the existing stored term with the supplied id",
          "actions": [
            "metadata:terms:write",
            "metadata:terms:write:store",
            "metadata:terms:write:store:patch"
          ]
        },
        "delete": {
          "description": "Delete one or more terms using the supplied id(s)",
          "actions": [
            "metadata:terms:write",
            "metadata:terms:write:delete"
          ]
        }
      },
      "pagination": {
        "pageSize": {
          "min": 1,
          "max": 100,
          "default": 100
        },
        "pages": {
          "max": 1000
        }
      },
      "display": {
        "priority": 4,
        "overview": {
          "label": "title",
          "quickInfo": [
            "price"
          ],
          "other": [
            "rights",
            "availabilityStartAt",
            "availabilityEndAt"
          ]
        },
        "info": {
          "primary": [
            "ref",
            "owner",
            "name"
          ],
          "secondary": [
            "alternativeIdentifiers",
            "tags",
            "custom"
          ],
          "history": [
            "createdAt",
            "createdBy",
            "updatedAt",
            "updatedBy",
            "deletedAt",
            "deletedBy",
            "reapAt",
            "version"
          ]
        },
        "singularName": "term",
        "pluralName": "terms"
      },
      "fields": {
        "ref": {
          "description": "The derived owner:name reference",
          "type": "ref",
          "readOnly": true,
          "example": "test:resource-name",
          "fieldName": "ref",
          "fieldNamePath": "ref",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withRef"
          ],
          "filters": [
            {
              "type": "with",
              "label": "ref",
              "fieldNamePath": "ref",
              "description": "filter by the supplied ref",
              "name": "withRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "alternativeIdentifiers": {
          "type": "stringMap",
          "description": "A map of alternative identifiers for this resource",
          "example": {
            "tel": "0800100100",
            "said": "something"
          },
          "fieldName": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "desc": "key-value pairs",
            "name": "stringMap"
          },
          "filteredBy": [
            "withAlternativeIdentifiers"
          ],
          "filters": [
            {
              "type": "with",
              "label": "alternativeIdentifiers",
              "fieldNamePath": "alternativeIdentifiers",
              "description": "filter by the supplied alternative identifiers",
              "prefix": true,
              "name": "withAlternativeIdentifiers",
              "and": true,
              "or": true,
              "valueType": "stringMap"
            }
          ]
        },
        "owner": {
          "description": "The tenant owner name",
          "type": "name",
          "required": true,
          "sort": true,
          "example": "test",
          "fieldName": "owner",
          "fieldNamePath": "owner",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          }
        },
        "name": {
          "description": "The tenant specific unique name",
          "type": "name",
          "sort": true,
          "example": "resource-name",
          "fieldName": "name",
          "fieldNamePath": "name",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          },
          "filteredBy": [
            "withName"
          ],
          "filters": [
            {
              "type": "with",
              "label": "name",
              "fieldNamePath": "name",
              "description": "filter by the supplied name",
              "name": "withName",
              "and": true,
              "or": true,
              "valueType": "name"
            }
          ]
        },
        "tags": {
          "description": "tags for the resource",
          "type": "string",
          "array": true,
          "example": [
            "todo",
            "usage:boxart"
          ],
          "fieldName": "tags",
          "fieldNamePath": "tags",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withTags"
          ],
          "filters": [
            {
              "type": "with",
              "label": "tags",
              "fieldNamePath": "tags",
              "description": "filter by the supplied tags",
              "name": "withTags",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "scores": {
          "description": "scores for the resource",
          "type": "scores",
          "example": {
            "imdb.a3431": 0.9,
            "fuse": 2
          },
          "fieldName": "scores",
          "fieldNamePath": "scores",
          "typeInfo": {
            "keys": {
              "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
            },
            "values": {},
            "desc": "Map of FieldNamePath:Number pairs",
            "name": "scores"
          },
          "filteredBy": [
            "withScore"
          ],
          "filters": [
            {
              "type": "with",
              "label": "scores",
              "fieldNamePath": "scores",
              "description": "filter by the supplied score",
              "range": true,
              "name": "withScore",
              "and": true,
              "or": true,
              "valueType": "scores"
            }
          ]
        },
        "custom": {
          "description": "The tenant specific custom fields.  This may be used to hold tenant specific data alongside the document, but it should not be used as a substitute for normal fields.",
          "type": "map",
          "max": 100,
          "fieldName": "custom",
          "fieldNamePath": "custom",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "values": {},
            "desc": "key-value pairs"
          }
        },
        "createdAt": {
          "description": "The timestamp when created",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "createdAt",
          "fieldNamePath": "createdAt",
          "filteredBy": [
            "withCreatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdAt",
              "fieldNamePath": "createdAt",
              "description": "filter by the supplied createdAt",
              "range": true,
              "name": "withCreatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "createdBy": {
          "description": "The user that created",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "createdBy",
          "fieldNamePath": "createdBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withCreatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdBy",
              "fieldNamePath": "createdBy",
              "description": "filter by the supplied createdBy",
              "name": "withCreatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "updatedAt": {
          "description": "The timestamp when last updated",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "updatedAt",
          "fieldNamePath": "updatedAt",
          "filteredBy": [
            "withUpdatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedAt",
              "fieldNamePath": "updatedAt",
              "description": "filter by the supplied updatedAt",
              "range": true,
              "name": "withUpdatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "updatedBy": {
          "description": "The user that last updated",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "updatedBy",
          "fieldNamePath": "updatedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withUpdatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedBy",
              "fieldNamePath": "updatedBy",
              "description": "filter by the supplied updatedBy",
              "name": "withUpdatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "deletedAt": {
          "description": "The timestamp when deleted (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedAt",
          "fieldNamePath": "deletedAt",
          "filteredBy": [
            "withDeletedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedAt",
              "fieldNamePath": "deletedAt",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedAt",
              "range": true,
              "name": "withDeletedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "deletedBy": {
          "description": "The user that deleted (only applicable to deleted  resources)",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedBy",
          "fieldNamePath": "deletedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withDeletedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedBy",
              "fieldNamePath": "deletedBy",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedBy",
              "name": "withDeletedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "reapAt": {
          "description": "The timestamp for reaping (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "reapAt",
          "fieldNamePath": "reapAt",
          "filteredBy": [
            "withReapAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "reapAt",
              "fieldNamePath": "reapAt",
              "prohibited": [
                "enduser",
                "service",
                "admin"
              ],
              "description": "filter by the supplied reapAt",
              "range": true,
              "name": "withReapAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "version": {
          "description": "The version hash (computed)",
          "type": "version",
          "readOnly": true,
          "example": "356b54eb90cd04566159dfb9c95a0426998a2f7b",
          "excludeFromVersion": true,
          "fieldName": "version",
          "fieldNamePath": "version",
          "typeInfo": {
            "desc": "sha1 hex encoded hash",
            "pattern": "[a-f0-9]{40}",
            "name": "version"
          },
          "filteredBy": [
            "withVersion"
          ],
          "filters": [
            {
              "type": "with",
              "label": "version",
              "fieldNamePath": "version",
              "description": "filter by the supplied version",
              "name": "withVersion",
              "and": true,
              "or": true,
              "valueType": "version"
            }
          ]
        },
        "title": {
          "description": "The title of the term",
          "sort": true,
          "primary": true,
          "type": "string",
          "example": "copyrights",
          "fieldName": "title",
          "fieldNamePath": "title",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withTitle"
          ],
          "filters": [
            {
              "type": "with",
              "label": "title",
              "description": "filter by the supplied title",
              "prefix": true,
              "fieldNamePath": "title",
              "name": "withTitle",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "availabilityStartAt": {
          "description": "The availability start date of the term, or if not present available from the start of time",
          "type": "timestamp",
          "nonexistent": "low",
          "primary": true,
          "sort": true,
          "example": "2016-01-01T12:00:00.000Z",
          "fieldName": "availabilityStartAt",
          "fieldNamePath": "availabilityStartAt",
          "filteredBy": [
            "withAvailabilityStartAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "availabilityStartAt",
              "description": "filter by the supplied availability start timestamp",
              "range": true,
              "fieldNamePath": "availabilityStartAt",
              "name": "withAvailabilityStartAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "availabilityEndAt": {
          "description": "The availability end date of the term, or if not present available till the end of time",
          "type": "timestamp",
          "nonexistent": "high",
          "primary": true,
          "sort": true,
          "example": "2016-04-01T12:00:00.000Z",
          "fieldName": "availabilityEndAt",
          "fieldNamePath": "availabilityEndAt",
          "filteredBy": [
            "withAvailabilityEndAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "availabilityEndAt",
              "description": "filter by the supplied availability start timestamp",
              "range": true,
              "fieldNamePath": "availabilityEndAt",
              "name": "withAvailabilityEndAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "price": {
          "description": "The suggested price for this term",
          "type": "money",
          "primary": true,
          "example": {
            "GBP": 3.99,
            "EUR": 5.99
          },
          "fieldName": "price",
          "fieldNamePath": "price",
          "typeInfo": {
            "keys": {
              "values": [
                "CHF",
                "EUR",
                "GBP",
                "USD"
              ],
              "pattern": "(CHF)|(EUR)|(GBP)|(USD)"
            },
            "values": {},
            "desc": "money"
          }
        },
        "rights": {
          "description": "Rights/restrictions that apply for this offer",
          "fields": {
            "deviceTypes": {
              "description": "List of device types that this offer applies to",
              "array": true,
              "type": "string",
              "example": [
                "Smartphone",
                "Tablet"
              ],
              "fieldName": "deviceTypes",
              "fieldNamePath": "rights.deviceTypes",
              "typeInfo": {
                "desc": "string",
                "pattern": ".+",
                "name": "string"
              },
              "primary": true
            },
            "usagePeriod": {
              "description": "The maximun duration of time the offer can be made available",
              "type": "duration",
              "example": "P7D",
              "fieldName": "usagePeriod",
              "fieldNamePath": "rights.usagePeriod",
              "typeInfo": {
                "desc": "represents a duration of time expressed as a number of years, months, days, hours, minutes, and seconds",
                "pattern": "-?P(?=[T\\d])(\\d+Y)?(\\d+M)?(\\d+D)?(T(?=\\d)(\\d+H)?(\\d+M)?(\\d+(\\.\\d+)?S)?)?"
              },
              "primary": true
            },
            "gracePeriod": {
              "description": "How long the customer can watch the content at no charge",
              "type": "duration",
              "example": "P7D",
              "fieldName": "gracePeriod",
              "fieldNamePath": "rights.gracePeriod",
              "typeInfo": {
                "desc": "represents a duration of time expressed as a number of years, months, days, hours, minutes, and seconds",
                "pattern": "-?P(?=[T\\d])(\\d+Y)?(\\d+M)?(\\d+D)?(T(?=\\d)(\\d+H)?(\\d+M)?(\\d+(\\.\\d+)?S)?)?"
              },
              "primary": true
            },
            "rentalPeriod": {
              "description": "How long the content can be rented",
              "type": "duration",
              "example": "P7D",
              "fieldName": "rentalPeriod",
              "fieldNamePath": "rights.rentalPeriod",
              "typeInfo": {
                "desc": "represents a duration of time expressed as a number of years, months, days, hours, minutes, and seconds",
                "pattern": "-?P(?=[T\\d])(\\d+Y)?(\\d+M)?(\\d+D)?(T(?=\\d)(\\d+H)?(\\d+M)?(\\d+(\\.\\d+)?S)?)?"
              }
            },
            "airplay": {
              "description": "The right to use airplay",
              "type": "boolean",
              "example": true,
              "fieldName": "airplay",
              "fieldNamePath": "rights.airplay",
              "typeInfo": {
                "desc": "true or false",
                "pattern": "(?:true|false)",
                "name": "boolean"
              }
            },
            "mirrorcast": {
              "description": "The right to use mirrorcast",
              "type": "boolean",
              "example": true,
              "fieldName": "mirrorcast",
              "fieldNamePath": "rights.mirrorcast",
              "typeInfo": {
                "desc": "true or false",
                "pattern": "(?:true|false)",
                "name": "boolean"
              }
            }
          },
          "fieldName": "rights",
          "fieldNamePath": "rights",
          "typeInfo": {}
        }
      },
      "filters": {
        "q": {
          "type": "q",
          "label": "q",
          "description": "filter by text",
          "includes": [
            "title"
          ],
          "name": "q",
          "valueType": "string",
          "text": true
        },
        "withName": {
          "type": "with",
          "label": "name",
          "fieldNamePath": "name",
          "description": "filter by the supplied name",
          "name": "withName",
          "and": true,
          "or": true,
          "valueType": "name"
        },
        "withRef": {
          "type": "with",
          "label": "ref",
          "fieldNamePath": "ref",
          "description": "filter by the supplied ref",
          "name": "withRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withAlternativeIdentifiers": {
          "type": "with",
          "label": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "description": "filter by the supplied alternative identifiers",
          "prefix": true,
          "name": "withAlternativeIdentifiers",
          "and": true,
          "or": true,
          "valueType": "stringMap"
        },
        "withTags": {
          "type": "with",
          "label": "tags",
          "fieldNamePath": "tags",
          "description": "filter by the supplied tags",
          "name": "withTags",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withScore": {
          "type": "with",
          "label": "scores",
          "fieldNamePath": "scores",
          "description": "filter by the supplied score",
          "range": true,
          "name": "withScore",
          "and": true,
          "or": true,
          "valueType": "scores"
        },
        "withCreatedAt": {
          "type": "with",
          "label": "createdAt",
          "fieldNamePath": "createdAt",
          "description": "filter by the supplied createdAt",
          "range": true,
          "name": "withCreatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withCreatedBy": {
          "type": "with",
          "label": "createdBy",
          "fieldNamePath": "createdBy",
          "description": "filter by the supplied createdBy",
          "name": "withCreatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withUpdatedAt": {
          "type": "with",
          "label": "updatedAt",
          "fieldNamePath": "updatedAt",
          "description": "filter by the supplied updatedAt",
          "range": true,
          "name": "withUpdatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withUpdatedBy": {
          "type": "with",
          "label": "updatedBy",
          "fieldNamePath": "updatedBy",
          "description": "filter by the supplied updatedBy",
          "name": "withUpdatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withDeletedAt": {
          "type": "with",
          "label": "deletedAt",
          "fieldNamePath": "deletedAt",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedAt",
          "range": true,
          "name": "withDeletedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withDeletedBy": {
          "type": "with",
          "label": "deletedBy",
          "fieldNamePath": "deletedBy",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedBy",
          "name": "withDeletedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withReapAt": {
          "type": "with",
          "label": "reapAt",
          "fieldNamePath": "reapAt",
          "prohibited": [
            "enduser",
            "service",
            "admin"
          ],
          "description": "filter by the supplied reapAt",
          "range": true,
          "name": "withReapAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withVersion": {
          "type": "with",
          "label": "version",
          "fieldNamePath": "version",
          "description": "filter by the supplied version",
          "name": "withVersion",
          "and": true,
          "or": true,
          "valueType": "version"
        },
        "withTitle": {
          "type": "with",
          "label": "title",
          "description": "filter by the supplied title",
          "prefix": true,
          "fieldNamePath": "title",
          "name": "withTitle",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withAvailabilityStartAt": {
          "type": "with",
          "label": "availabilityStartAt",
          "description": "filter by the supplied availability start timestamp",
          "range": true,
          "fieldNamePath": "availabilityStartAt",
          "name": "withAvailabilityStartAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withAvailabilityEndAt": {
          "type": "with",
          "label": "availabilityEndAt",
          "description": "filter by the supplied availability start timestamp",
          "range": true,
          "fieldNamePath": "availabilityEndAt",
          "name": "withAvailabilityEndAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        }
      },
      "restrictions": [
        {
          "type": "ownership",
          "message": "must contain an owner for which you have permission",
          "description": "users can only interact with resources that are owned by a tenant they have access to"
        },
        {
          "type": "unmodifiable",
          "message": "not allowed to modify resources created by root:root",
          "description": "users are not allowed to modify resources that were created by root:root"
        },
        {
          "type": "primaryKey",
          "message": "primaryKey must be unique",
          "description": "the primary key (ref) is derived from owner and name, allowing name to be a tenant specific unique external id"
        },
        {
          "type": "readOnly",
          "userTypes": [
            "enduser"
          ],
          "message": "end user type is not permitted to write to assets",
          "description": "end user type is not permitted to write to assets"
        }
      ],
      "relationships": {
        "offers": {
          "description": "The offers that have a reference to this terms",
          "type": "indirect",
          "resourceType": "offers",
          "filterName": "withTermsRef",
          "fields": [
            "ref",
            "title"
          ],
          "batchSize": 10,
          "name": "offers"
        }
      },
      "description": "Represents a contractual term for the content licensing",
      "singularName": "term",
      "serviceName": "metadata",
      "pluralName": "terms",
      "hyphenatedPluralName": "terms",
      "displaySingularName": "term",
      "displayPluralName": "terms",
      "retentionPeriod": "P30D",
      "typeInfo": {}
    },
    "tenancyConfigurations": {
      "path": "/data",
      "consistency": "eventual",
      "stability": "experimental",
      "operations": {
        "browse": {
          "description": "Fetches a list of tenancy configurations that may be filtered",
          "actions": [
            "metadata:tenancy-configurations:read",
            "metadata:tenancy-configurations:read:browse"
          ]
        },
        "get": {
          "description": "Fetches one or more tenancy configurations using the supplied id(s)",
          "actions": [
            "metadata:tenancy-configurations:read",
            "metadata:tenancy-configurations:read:get"
          ]
        },
        "storeBatch": {
          "description": "Stores one or more tenancy configurations, either creating or wholly replacing",
          "actions": [
            "metadata:tenancy-configurations:write",
            "metadata:tenancy-configurations:write:store",
            "metadata:tenancy-configurations:write:store:batch"
          ],
          "limit": 100
        },
        "storeOne": {
          "description": "Stores the supplied tenancy configuration with the supplied id, either creating or wholly replacing",
          "actions": [
            "metadata:tenancy-configurations:write",
            "metadata:tenancy-configurations:write:store",
            "metadata:tenancy-configurations:write:store:one"
          ]
        },
        "patch": {
          "enabled": false,
          "description": "Partially updates the existing stored tenancy configuration with the supplied id",
          "actions": [
            "metadata:tenancy-configurations:write",
            "metadata:tenancy-configurations:write:store",
            "metadata:tenancy-configurations:write:store:patch"
          ]
        },
        "delete": {
          "description": "Delete one or more tenancy configurations using the supplied id(s)",
          "actions": [
            "metadata:tenancy-configurations:write",
            "metadata:tenancy-configurations:write:delete"
          ]
        }
      },
      "pagination": {
        "pageSize": {
          "min": 1,
          "max": 100,
          "default": 100
        },
        "pages": {
          "max": 1000
        }
      },
      "display": {
        "priority": 10,
        "overview": {
          "label": "name"
        },
        "info": {
          "primary": [
            "ref",
            "owner",
            "name"
          ],
          "secondary": [
            "alternativeIdentifiers",
            "tags",
            "custom"
          ],
          "history": [
            "createdAt",
            "createdBy",
            "updatedAt",
            "updatedBy",
            "deletedAt",
            "deletedBy",
            "reapAt",
            "version"
          ]
        },
        "singularName": "tenancy configuration",
        "pluralName": "tenancy configurations"
      },
      "fields": {
        "ref": {
          "description": "The derived owner:name reference",
          "type": "ref",
          "readOnly": true,
          "example": "test:resource-name",
          "fieldName": "ref",
          "fieldNamePath": "ref",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withRef"
          ],
          "filters": [
            {
              "type": "with",
              "label": "ref",
              "fieldNamePath": "ref",
              "description": "filter by the supplied ref",
              "name": "withRef",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ],
          "primary": true
        },
        "alternativeIdentifiers": {
          "type": "stringMap",
          "description": "A map of alternative identifiers for this resource",
          "example": {
            "tel": "0800100100",
            "said": "something"
          },
          "fieldName": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "desc": "key-value pairs",
            "name": "stringMap"
          },
          "filteredBy": [
            "withAlternativeIdentifiers"
          ],
          "filters": [
            {
              "type": "with",
              "label": "alternativeIdentifiers",
              "fieldNamePath": "alternativeIdentifiers",
              "description": "filter by the supplied alternative identifiers",
              "prefix": true,
              "name": "withAlternativeIdentifiers",
              "and": true,
              "or": true,
              "valueType": "stringMap"
            }
          ],
          "primary": true
        },
        "owner": {
          "description": "The tenant owner name",
          "type": "name",
          "required": true,
          "sort": true,
          "example": "test",
          "fieldName": "owner",
          "fieldNamePath": "owner",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          },
          "primary": true
        },
        "name": {
          "description": "The tenant specific unique name",
          "type": "name",
          "sort": true,
          "example": "resource-name",
          "fieldName": "name",
          "fieldNamePath": "name",
          "typeInfo": {
            "desc": "name",
            "pattern": "[a-zA-Z0-9_-]+",
            "name": "name"
          },
          "filteredBy": [
            "withName"
          ],
          "filters": [
            {
              "type": "with",
              "label": "name",
              "fieldNamePath": "name",
              "description": "filter by the supplied name",
              "name": "withName",
              "and": true,
              "or": true,
              "valueType": "name"
            }
          ]
        },
        "tags": {
          "description": "tags for the resource",
          "type": "string",
          "array": true,
          "example": [
            "todo",
            "usage:boxart"
          ],
          "fieldName": "tags",
          "fieldNamePath": "tags",
          "typeInfo": {
            "desc": "string",
            "pattern": ".+",
            "name": "string"
          },
          "filteredBy": [
            "withTags"
          ],
          "filters": [
            {
              "type": "with",
              "label": "tags",
              "fieldNamePath": "tags",
              "description": "filter by the supplied tags",
              "name": "withTags",
              "and": true,
              "or": true,
              "valueType": "string"
            }
          ]
        },
        "scores": {
          "description": "scores for the resource",
          "type": "scores",
          "example": {
            "imdb.a3431": 0.9,
            "fuse": 2
          },
          "fieldName": "scores",
          "fieldNamePath": "scores",
          "typeInfo": {
            "keys": {
              "pattern": "(?:[a-zA-Z0-9]+)(?:\\.[a-zA-Z0-9]+)*"
            },
            "values": {},
            "desc": "Map of FieldNamePath:Number pairs",
            "name": "scores"
          },
          "filteredBy": [
            "withScore"
          ],
          "filters": [
            {
              "type": "with",
              "label": "scores",
              "fieldNamePath": "scores",
              "description": "filter by the supplied score",
              "range": true,
              "name": "withScore",
              "and": true,
              "or": true,
              "valueType": "scores"
            }
          ]
        },
        "custom": {
          "description": "The tenant specific custom fields.  This may be used to hold tenant specific data alongside the document, but it should not be used as a substitute for normal fields.",
          "type": "map",
          "max": 100,
          "fieldName": "custom",
          "fieldNamePath": "custom",
          "typeInfo": {
            "keys": {
              "pattern": "[a-zA-Z0-9]+"
            },
            "values": {},
            "desc": "key-value pairs"
          }
        },
        "createdAt": {
          "description": "The timestamp when created",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "createdAt",
          "fieldNamePath": "createdAt",
          "filteredBy": [
            "withCreatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdAt",
              "fieldNamePath": "createdAt",
              "description": "filter by the supplied createdAt",
              "range": true,
              "name": "withCreatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "createdBy": {
          "description": "The user that created",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "createdBy",
          "fieldNamePath": "createdBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withCreatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "createdBy",
              "fieldNamePath": "createdBy",
              "description": "filter by the supplied createdBy",
              "name": "withCreatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "updatedAt": {
          "description": "The timestamp when last updated",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "updatedAt",
          "fieldNamePath": "updatedAt",
          "filteredBy": [
            "withUpdatedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedAt",
              "fieldNamePath": "updatedAt",
              "description": "filter by the supplied updatedAt",
              "range": true,
              "name": "withUpdatedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "updatedBy": {
          "description": "The user that last updated",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "fieldName": "updatedBy",
          "fieldNamePath": "updatedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withUpdatedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "updatedBy",
              "fieldNamePath": "updatedBy",
              "description": "filter by the supplied updatedBy",
              "name": "withUpdatedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "deletedAt": {
          "description": "The timestamp when deleted (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedAt",
          "fieldNamePath": "deletedAt",
          "filteredBy": [
            "withDeletedAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedAt",
              "fieldNamePath": "deletedAt",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedAt",
              "range": true,
              "name": "withDeletedAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "deletedBy": {
          "description": "The user that deleted (only applicable to deleted  resources)",
          "type": "ref",
          "readOnly": true,
          "example": "test:test-admin",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "deletedBy",
          "fieldNamePath": "deletedBy",
          "typeInfo": {
            "desc": "owner:name pair",
            "pattern": "[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+",
            "name": "ref"
          },
          "filteredBy": [
            "withDeletedBy"
          ],
          "filters": [
            {
              "type": "with",
              "label": "deletedBy",
              "fieldNamePath": "deletedBy",
              "prohibited": [
                "enduser"
              ],
              "description": "filter by the supplied deletedBy",
              "name": "withDeletedBy",
              "and": true,
              "or": true,
              "valueType": "ref"
            }
          ]
        },
        "reapAt": {
          "description": "The timestamp for reaping (only applicable to deleted  resources)",
          "type": "timestamp",
          "readOnly": true,
          "example": "2014-12-25T12:00:00.000Z",
          "sort": true,
          "excludeFromVersion": true,
          "fieldName": "reapAt",
          "fieldNamePath": "reapAt",
          "filteredBy": [
            "withReapAt"
          ],
          "filters": [
            {
              "type": "with",
              "label": "reapAt",
              "fieldNamePath": "reapAt",
              "prohibited": [
                "enduser",
                "service",
                "admin"
              ],
              "description": "filter by the supplied reapAt",
              "range": true,
              "name": "withReapAt",
              "and": true,
              "or": true,
              "valueType": "timestamp"
            }
          ]
        },
        "version": {
          "description": "The version hash (computed)",
          "type": "version",
          "readOnly": true,
          "example": "356b54eb90cd04566159dfb9c95a0426998a2f7b",
          "excludeFromVersion": true,
          "fieldName": "version",
          "fieldNamePath": "version",
          "typeInfo": {
            "desc": "sha1 hex encoded hash",
            "pattern": "[a-f0-9]{40}",
            "name": "version"
          },
          "filteredBy": [
            "withVersion"
          ],
          "filters": [
            {
              "type": "with",
              "label": "version",
              "fieldNamePath": "version",
              "description": "filter by the supplied version",
              "name": "withVersion",
              "and": true,
              "or": true,
              "valueType": "version"
            }
          ]
        },
        "retentionPeriods": {
          "description": "Represents data retention periods",
          "array": true,
          "fields": {
            "resource": {
              "description": "the resource the retention period applies to",
              "type": "string",
              "allowedValues": [
                {
                  "value": "default",
                  "alternatives": [],
                  "label": "default",
                  "description": "default"
                },
                {
                  "value": "assets",
                  "alternatives": [],
                  "label": "assets",
                  "description": "assets"
                },
                {
                  "value": "awards",
                  "alternatives": [],
                  "label": "awards",
                  "description": "awards"
                },
                {
                  "value": "categories",
                  "alternatives": [],
                  "label": "categories",
                  "description": "categories"
                },
                {
                  "value": "channels",
                  "alternatives": [],
                  "label": "channels",
                  "description": "channels"
                },
                {
                  "value": "contents",
                  "alternatives": [],
                  "label": "contents",
                  "description": "contents"
                },
                {
                  "value": "credits",
                  "alternatives": [],
                  "label": "credits",
                  "description": "credits"
                },
                {
                  "value": "locations",
                  "alternatives": [],
                  "label": "locations",
                  "description": "locations"
                },
                {
                  "value": "offerTemplates",
                  "alternatives": [],
                  "label": "offerTemplates",
                  "description": "offerTemplates"
                },
                {
                  "value": "offers",
                  "alternatives": [],
                  "label": "offers",
                  "description": "offers"
                },
                {
                  "value": "people",
                  "alternatives": [],
                  "label": "people",
                  "description": "people"
                },
                {
                  "value": "providers",
                  "alternatives": [],
                  "label": "providers",
                  "description": "providers"
                },
                {
                  "value": "roles",
                  "alternatives": [],
                  "label": "roles",
                  "description": "roles"
                },
                {
                  "value": "segments",
                  "alternatives": [],
                  "label": "segments",
                  "description": "segments"
                },
                {
                  "value": "terms",
                  "alternatives": [],
                  "label": "terms",
                  "description": "terms"
                }
              ],
              "example": "assets",
              "fieldName": "resource",
              "fieldNamePath": "retentionPeriods.resource",
              "allowedValueMappings": {
                "default": "default",
                "assets": "assets",
                "awards": "awards",
                "categories": "categories",
                "channels": "channels",
                "contents": "contents",
                "credits": "credits",
                "locations": "locations",
                "offerTemplates": "offerTemplates",
                "offers": "offers",
                "people": "people",
                "providers": "providers",
                "roles": "roles",
                "segments": "segments",
                "terms": "terms"
              },
              "typeInfo": {
                "desc": "string",
                "pattern": ".+",
                "name": "string"
              },
              "primary": true
            },
            "period": {
              "description": "the period of retention after which a resource should be deleted",
              "type": "duration",
              "example": "P1M1D",
              "fieldName": "period",
              "fieldNamePath": "retentionPeriods.period",
              "typeInfo": {
                "desc": "represents a duration of time expressed as a number of years, months, days, hours, minutes, and seconds",
                "pattern": "-?P(?=[T\\d])(\\d+Y)?(\\d+M)?(\\d+D)?(T(?=\\d)(\\d+H)?(\\d+M)?(\\d+(\\.\\d+)?S)?)?"
              },
              "primary": true
            }
          },
          "fieldName": "retentionPeriods",
          "fieldNamePath": "retentionPeriods",
          "typeInfo": {}
        }
      },
      "filters": {
        "q": {
          "type": "q",
          "label": "q",
          "description": "filter by the supplied text",
          "includes": [],
          "name": "q",
          "valueType": "string",
          "text": true
        },
        "withName": {
          "type": "with",
          "label": "name",
          "fieldNamePath": "name",
          "description": "filter by the supplied name",
          "name": "withName",
          "and": true,
          "or": true,
          "valueType": "name"
        },
        "withRef": {
          "type": "with",
          "label": "ref",
          "fieldNamePath": "ref",
          "description": "filter by the supplied ref",
          "name": "withRef",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withAlternativeIdentifiers": {
          "type": "with",
          "label": "alternativeIdentifiers",
          "fieldNamePath": "alternativeIdentifiers",
          "description": "filter by the supplied alternative identifiers",
          "prefix": true,
          "name": "withAlternativeIdentifiers",
          "and": true,
          "or": true,
          "valueType": "stringMap"
        },
        "withTags": {
          "type": "with",
          "label": "tags",
          "fieldNamePath": "tags",
          "description": "filter by the supplied tags",
          "name": "withTags",
          "and": true,
          "or": true,
          "valueType": "string"
        },
        "withScore": {
          "type": "with",
          "label": "scores",
          "fieldNamePath": "scores",
          "description": "filter by the supplied score",
          "range": true,
          "name": "withScore",
          "and": true,
          "or": true,
          "valueType": "scores"
        },
        "withCreatedAt": {
          "type": "with",
          "label": "createdAt",
          "fieldNamePath": "createdAt",
          "description": "filter by the supplied createdAt",
          "range": true,
          "name": "withCreatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withCreatedBy": {
          "type": "with",
          "label": "createdBy",
          "fieldNamePath": "createdBy",
          "description": "filter by the supplied createdBy",
          "name": "withCreatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withUpdatedAt": {
          "type": "with",
          "label": "updatedAt",
          "fieldNamePath": "updatedAt",
          "description": "filter by the supplied updatedAt",
          "range": true,
          "name": "withUpdatedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withUpdatedBy": {
          "type": "with",
          "label": "updatedBy",
          "fieldNamePath": "updatedBy",
          "description": "filter by the supplied updatedBy",
          "name": "withUpdatedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withDeletedAt": {
          "type": "with",
          "label": "deletedAt",
          "fieldNamePath": "deletedAt",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedAt",
          "range": true,
          "name": "withDeletedAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withDeletedBy": {
          "type": "with",
          "label": "deletedBy",
          "fieldNamePath": "deletedBy",
          "prohibited": [
            "enduser"
          ],
          "description": "filter by the supplied deletedBy",
          "name": "withDeletedBy",
          "and": true,
          "or": true,
          "valueType": "ref"
        },
        "withReapAt": {
          "type": "with",
          "label": "reapAt",
          "fieldNamePath": "reapAt",
          "prohibited": [
            "enduser",
            "service",
            "admin"
          ],
          "description": "filter by the supplied reapAt",
          "range": true,
          "name": "withReapAt",
          "and": true,
          "or": true,
          "valueType": "timestamp"
        },
        "withVersion": {
          "type": "with",
          "label": "version",
          "fieldNamePath": "version",
          "description": "filter by the supplied version",
          "name": "withVersion",
          "and": true,
          "or": true,
          "valueType": "version"
        }
      },
      "restrictions": [
        {
          "type": "ownership",
          "message": "must contain an owner for which you have permission",
          "description": "users can only interact with resources that are owned by a tenant they have access to"
        },
        {
          "type": "unmodifiable",
          "message": "not allowed to modify resources created by root:root",
          "description": "users are not allowed to modify resources that were created by root:root"
        },
        {
          "type": "primaryKey",
          "message": "primaryKey must be unique",
          "description": "the primary key (ref) is derived from owner and name, allowing name to be a tenant specific unique external id"
        },
        {
          "type": "prohibited",
          "userTypes": [
            "enduser"
          ],
          "message": "endusers are not permitted to read or write tenancy configurations",
          "description": "endusers are not permitted to read or write tenancy configurations"
        },
        {
          "type": "readOnly",
          "userTypes": [
            "service"
          ],
          "message": "service user type are not permitted to write to tenancy configurations",
          "description": "service user type are not permitted to write to tenancy configurations"
        },
        {
          "description": "name must match owner",
          "message": "name must match owner",
          "type": "nameMatchesOwner"
        }
      ],
      "relationships": {},
      "description": "Represents the tenancy configuration for the service",
      "singularName": "tenancyConfiguration",
      "pluralName": "tenancyConfigurations",
      "serviceName": "metadata",
      "hyphenatedPluralName": "tenancy-configurations",
      "displaySingularName": "tenancy configuration",
      "displayPluralName": "tenancy configurations",
      "retentionPeriod": "P30D",
      "typeInfo": {}
    }
  },
  "routes": [
    {
      "name": "root",
      "title": "root",
      "actions": [],
      "path": "/robots.txt",
      "method": "GET",
      "description": "robots.txt for search engines and crawlers",
      "stability": "stable",
      "inputs": {},
      "responses": []
    },
    {
      "name": "root",
      "title": "root",
      "actions": [],
      "path": "/",
      "method": "GET",
      "description": "Redirect '/' to '/docs'",
      "stability": "stable",
      "inputs": {},
      "responses": []
    }
  ]
}
